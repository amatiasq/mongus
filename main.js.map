{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../shared/util.ts","webpack:///../shared/Vector.ts","webpack:///./src/ClientUser.ts","webpack:///../shared/Orientation.ts","webpack:///./src/ui/Color.ts","webpack:///./src/index.ts","webpack:///../shared/communication/ClientMessage.ts","webpack:///../shared/communication/ServerMessage.ts","webpack:///./src/ClientSocket.ts","webpack:///../shared/models/User.ts","webpack:///../shared/models/Player.ts","webpack:///../shared/models/Entity.ts","webpack:///./src/GameState.ts","webpack:///./src/ui/interactions.ts","webpack:///../shared/Action.ts","webpack:///./src/ui/Renderer.ts","webpack:///./src/ui/getColorPatch.ts","webpack:///./src/ui/SpriteManager.ts","webpack:///./src/polyfill.ts","webpack:///./src/ui/Sprite.ts","webpack:///./node_modules/@amatiasq/keyboard/node_modules/@amatiasq/emitter/emitterWithChannels.ts","webpack:///./node_modules/@amatiasq/keyboard/node_modules/@amatiasq/emitter/emitter.ts","webpack:///./node_modules/@amatiasq/keyboard/KeyboardController.ts","webpack:///./node_modules/@amatiasq/keyboard/KeyCode.ts","webpack:///./node_modules/@amatiasq/keyboard/KeyboardActions.ts","webpack:///./node_modules/@amatiasq/json-socket/node_modules/@amatiasq/emitter/emitter.ts","webpack:///./node_modules/@amatiasq/json-socket/JsonSocket.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","init","fns","reduce","x","compare","cache","data","length","compressed","map","every","undefined","list","vector","Math","round","y","multiply","target","plus","left","right","minus","negate","sqrt","width","height","a","b","model","isPlayer","deserializeUser","this","player","serializeUser","Orientation","HEX_REGEX","SHORT_HEX_REGEX","RGB_REGEX","RGBA_REGEX","MAX_HEX","Color","g","array","match","exec","Error","hexValues","slice","chunk","hex","parseInt","parseHex","trim","fromArray","parseFloat","parseRgb","color","toArray","toString","join","generateHex","brightness","factor","skipAlpha","rgb","serverUri","location","origin","socket","ClientSocket","state","GameState","renderer","Renderer","document","querySelector","frameUsers","frameEntities","fillPage","watchKeyboard","actions","send","type","ClientMessageType","USER_ACTIONS","Array","from","onOpen","getUserName","then","async","username","whenLoaded","LOGIN","uuid","onReconnect","RECONNECT","me","onMessageType","ServerMessageType","LOGIN_SUCCESS","setUsers","users","setObstacles","obstacles","USER_CONNECTED","addUser","ClientUser","user","USER_DISCONNECTED","removeUser","GAME_STEP","decompressList","entities","setEntities","centerCameraAt","position","render","window","onbeforeunload","LOGOUT","JsonSocket","uri","super","listeners","Map","onMessage","e","processMessageExtended","listener","has","push","set","message","forEach","console","log","id","serializePlayer","deserializePlayer","createPlayer","createEntity","EntityType","Player","isDead","serializeEntity","speed","deserializeEntity","Unknown","orientation","Left","serializeVector","random","Date","now","getUsersFromServer","find","onUserListChanged","index","findIndex","splice","keyboard","KeyboardActions","setDirections","Action","UP","DOWN","LEFT","RIGHT","setKeyMap","KeyCode","KeyK","KILL","KeyR","RESURRECT","KeyM","COMMIT_SUICIDE","notify","onChange","stored","sessionStorage","getItem","Promise","resolve","$dialog","$form","$input","showModal","reject","addEventListener","setItem","canvas","context","getContext","sprites","SpriteManager","phantom","body","background","camera","renderObstacle","renderDeadBody","renderPlayer","getCenterOf","requestFullscreen","parentElement","removeEventListener","fullscreen","innerWidth","innerHeight","players","offset","chain","center","clearRect","save","translate","renderBackground","restore","renderVisibilityRange","renderTo","strokeStyle","strokeRect","sprite","getColored","getColorPatch","at","Right","flip","baseSprite","font","text","spaced","split","String","fromCharCode","textAlign","lineWidth","miterLimit","strokeText","fillStyle","fillText","renderText","globalAlpha","gradient","createRadialGradient","addColorStop","fillRect","isReddish","isPredominant","isBlueish","isPurpleish","base","fromHex","dark","shade","patches","images","isLoaded","promises","getKeys","loadImage","src","img","Image","onload","onerror","all","Sprite","colors","spriteCache","result","paint","createElement","drawImage","image","getImageData","entries","pLength","len","pixel","fromImageData","j","patch","setToImageData","putImageData","keys","source","isFlipped","pos","scale","emitterWithChannels","channels","emit","subscribe","channel","Set","add","delete","emitter","pressed","codeToKey","emitKeyCodeDown","emitKeyCodeUp","emitKeyDown","emitKeyUp","onKeyCodeDown","onKeyCodeUp","onKeyDown","onKeyUp","isPaused","handleKeyDown","handleKeyUp","code","event","onEvent","isPressed","keymap","emitChange","emitActivate","emitDeactivate","onActivate","onDeactivate","handle","action","subscriptions","pause","resume","getUserKey","dispose","up","down","setArrows","setWSAD","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","KeyW","KeyS","KeyA","KeyD","operation","getActionFor","RECONNECTION_DELAY","MAX_RECONNECT_ATTEMPTS","reconnectionDelay","reconnectAttempts","disconnectedAt","isReconnecting","isFirstConnection","ws","WebSocket","onopen","connectionOpen","onmessage","processMessage","connectionLost","onclose","JSON","stringify","parse","error","reconnecting","singleLine","debug","setTimeout","close"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","const _: any = 0;\n\ntype F<T1, T2> = (x: T1) => T2;\n\nexport function chain<\n  T1,\n  T2 extends ReturnType<FN[0]>,\n  T3 extends ReturnType<FN[1]>,\n  T4 extends ReturnType<FN[2]>,\n  T5 extends ReturnType<FN[3]>,\n  T6 extends ReturnType<FN[4]>,\n  T7 extends ReturnType<FN[5]>,\n  T8 extends ReturnType<FN[6]>,\n  FN extends Array<F<any, any>>,\n  // prettier-ignore\n  R extends FN extends [] ? T1\n    : FN extends [F<T1, T2>] ? T2\n    : FN extends [F<T1, T2>, F<T2, T3>] ? T3\n    : FN extends [F<T1, T2>, F<T2, T3>, F<T3, T4>] ? T4\n    : FN extends [F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>] ? T5\n    : FN extends [F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>, F<T5, T6>] ? T6\n    : FN extends [F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>, F<T5, T6>, F<T6, T7>] ? T7\n    : FN extends [F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>, F<T5, T6>, F<T6, T7>, F<T7, T8>] ? T8\n    : any\n>(init: T1, ...fns: FN) {\n  return fns.reduce((value, x) => x(value), init) as R;\n}\n\nexport function compressList<T>(\n  compare: (a: T, b: T) => boolean,\n  cache: T[],\n  data: T[],\n) {\n  if (cache.length !== data.length) {\n    return data;\n  }\n\n  const compressed = data.map((x, i) => (compare(x, cache[i]) ? _ : x));\n  return compressed.every(x => x === _) ? (undefined as any) : compressed;\n}\n\nexport function decompressList<T>(list: T[], cache?: T[]) {\n  if (!cache) {\n    return list;\n  }\n\n  if (list === undefined) {\n    return cache;\n  }\n\n  const omitted = (_ as any) as T;\n  return list.map((x, i) => (x === omitted ? cache[i] : x));\n}\n","type BinaryOperator<T = Vector> = (x: T) => (x: Vector) => Vector;\ntype Transformer = (x: Vector) => Vector;\n\nexport interface Vector {\n  x: number;\n  y: number;\n}\n\nexport function serializeVector(vector: Vector) {\n  return {\n    x: Math.round(vector.x * 100) / 100,\n    y: Math.round(vector.y * 100) / 100,\n  };\n}\n\nexport const multiply: BinaryOperator<number> = value => target => ({\n  x: target.x * value,\n  y: target.y * value,\n});\n\nexport const plus: BinaryOperator = left => right => ({\n  x: left.x + right.x,\n  y: left.y + right.y,\n});\n\nexport const minus = (left: Vector) => plus(negate(left));\n\nexport const negate = multiply(-1);\n\nexport function getMagnitude({ x, y }: Vector) {\n  return Math.sqrt(x * x + y * y);\n}\n\nexport function getCenterOf({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}): Vector {\n  return { x: width / 2, y: height / 2 };\n}\n\nexport function getDistance(a: Vector, b: Vector) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  // sqrt is not necessary since this it only be used as relative value\n  return x * x + y * y;\n}\n","import { Player } from '../../shared/models/Player';\nimport { deserializeUser, serializeUser, User } from '../../shared/models/User';\nimport { UserId } from '../../shared/types';\nimport { ClientPlayer } from './entities/ClientPlayer';\n\nexport class ClientUser implements User {\n  id!: UserId;\n  player!: ClientPlayer;\n\n  get name() {\n    return this.player.name;\n  }\n\n  constructor(model: User, readonly isPlayer = false) {\n    deserializeUser(this, model);\n  }\n\n  toJSON() {\n    return serializeUser(this);\n  }\n}\n","export enum Orientation {\n  Left,\n  Right,\n}\n","const HEX_REGEX = /^#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?$/;\nconst SHORT_HEX_REGEX = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})?$/;\nconst RGB_REGEX = /^rgb\\s*\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)$/;\nconst RGBA_REGEX = /^rgba\\s*\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)$/;\n\nconst ALPHA = 3;\nconst DEFAULT_ALPHA = 1;\nconst HEXADECIMAL = 16;\nconst MAX_HEX = 255;\n\nexport class Color {\n  static fromArray([r, g, b, a]: [number, number, number] | ColorArray) {\n    return new Color(r, g, b, a == null ? DEFAULT_ALPHA : a);\n  }\n\n  static fromHex(value: string) {\n    const array = parseHex(value.trim());\n    return this.fromArray(array);\n  }\n\n  static fromRgb(value: string) {\n    const array = parseRgb(value.trim());\n    return this.fromArray(array);\n  }\n\n  static fromImageData(data: Uint8ClampedArray, i: number) {\n    return new Color(data[i], data[i + 1], data[i + 2], data[i + 3]);\n  }\n\n  get hex() {\n    return generateHex(this);\n  }\n\n  get rgb() {\n    return `rgba(${this.toArray().join(', ')})`;\n  }\n\n  get brightness() {\n    return calculateBrightness(this);\n  }\n\n  get isLight() {\n    return this.brightness > 0.5;\n  }\n\n  get isDark() {\n    return this.brightness <= 0.5;\n  }\n\n  constructor(\n    public readonly r: number,\n    public readonly g: number,\n    public readonly b: number,\n    public readonly a = DEFAULT_ALPHA,\n  ) {}\n\n  isLigherThan(color: Color) {\n    return this.brightness > color.brightness;\n  }\n\n  isDarkerThan(color: Color) {\n    return this.brightness < color.brightness;\n  }\n\n  isEqual(color: Color) {\n    return (\n      this.r === color.r &&\n      this.g === color.g &&\n      this.b === color.b &&\n      this.a === color.a\n    );\n  }\n\n  shade(factor: number) {\n    return new Color(\n      ...(this.toArray().map(x => x * (1 - factor)) as ColorArray),\n    );\n  }\n\n  setToImageData(data: Uint8ClampedArray, i: number, skipAlpha = false) {\n    data[i] = this.r;\n    data[i + 1] = this.g;\n    data[i + 2] = this.b;\n\n    if (!skipAlpha) {\n      data[i + 3] = this.a * 255;\n    }\n  }\n\n  toArray(): ColorArray {\n    const { r, g, b, a } = this;\n    return [r, g, b, a];\n  }\n\n  toString() {\n    return this.rgb;\n  }\n\n  toJSON() {\n    return this.rgb;\n  }\n}\n\ntype ColorArray = [number, number, number, number];\n\nfunction calculateBrightness(color: Color) {\n  return (color.r * 0.299 + color.g * 0.587 + color.b * 0.114) / 256;\n}\n\nfunction parseHex(value: string): ColorArray {\n  const match = HEX_REGEX.exec(value) || SHORT_HEX_REGEX.exec(value);\n\n  if (!match) {\n    throw new Error('Invalid HEX color ' + value);\n  }\n\n  const hexValues = match.slice(1) as [string, string, string, string];\n  hexValues[ALPHA] = hexValues[ALPHA] || 'FF';\n\n  const array = hexValues.map(chunk => {\n    const hex = chunk.length === 2 ? chunk : chunk + chunk;\n    return parseInt(hex, HEXADECIMAL);\n  }) as ColorArray;\n\n  array[ALPHA] /= MAX_HEX;\n  return array;\n}\n\nfunction parseRgb(value: string): ColorArray {\n  const match = RGB_REGEX.exec(value) || RGBA_REGEX.exec(value);\n\n  if (!match) {\n    throw new Error('Invalid RGB color ' + value);\n  }\n\n  const [r, g, b, a] = match.slice(1) as [string, string, string, string];\n\n  return [\n    parseFloat(r),\n    parseFloat(g),\n    parseFloat(b),\n    a == null ? DEFAULT_ALPHA : parseFloat(a),\n  ];\n}\n\nfunction generateHex(color: Color) {\n  const array = color.toArray();\n\n  // Remove alpha if it's 1\n  if (array[ALPHA] === 1) {\n    array.length--;\n  } else {\n    array[ALPHA] = Math.round(array[ALPHA] * MAX_HEX);\n  }\n\n  const hex = array.map(x => x.toString(HEXADECIMAL));\n  return '#' + hex.join('');\n}\n","import { ClientMessageType } from '../../shared/communication/ClientMessage';\nimport { ServerMessageType } from '../../shared/communication/ServerMessage';\nimport { DeadBody } from '../../shared/models/DeadBody';\nimport { Entity } from '../../shared/models/Entity';\nimport { User } from '../../shared/models/User';\nimport { decompressList } from '../../shared/util';\nimport { ClientSocket } from './ClientSocket';\nimport { ClientUser } from './ClientUser';\nimport { GameState } from './GameState';\nimport { getUserName, watchKeyboard } from './ui/interactions';\nimport { Renderer } from './ui/Renderer';\n\nlet FORCE_PROD_SERVER = false;\n// FORCE_PROD_SERVER = true;\n\nconst serverUri =\n  location.origin === 'https://amatiasq.github.io' || FORCE_PROD_SERVER\n    ? 'wss://amongus.amatiasq.com'\n    : 'ws://localhost:17965';\n\nconst socket = new ClientSocket(serverUri);\nconst state = new GameState();\nconst renderer = new Renderer(document.querySelector('canvas')!);\n\nrenderer.fillPage();\n// renderer.fullscreen();\n\nwatchKeyboard(actions =>\n  socket.send({\n    type: ClientMessageType.USER_ACTIONS,\n    actions: Array.from(actions),\n  }),\n);\n\nsocket.onOpen(() =>\n  getUserName()\n    .then(async username => {\n      await renderer.whenLoaded;\n      return username;\n    })\n    .then(username => {\n      socket.send({\n        type: ClientMessageType.LOGIN,\n        uuid: state.uuid,\n        username,\n      });\n    }),\n);\n\nsocket.onReconnect(() =>\n  socket.send({\n    type: ClientMessageType.RECONNECT,\n    uuid: state.uuid,\n    username: state.me!.name,\n  }),\n);\n\nsocket.onMessageType(ServerMessageType.LOGIN_SUCCESS, data => {\n  state.setUsers(data.users);\n  state.setObstacles(data.obstacles);\n});\n\nsocket.onMessageType(ServerMessageType.USER_CONNECTED, data =>\n  state.addUser(new ClientUser(data.user)),\n);\n\nsocket.onMessageType(ServerMessageType.USER_DISCONNECTED, data =>\n  state.removeUser(data.uuid),\n);\n\nlet frameUsers: User[];\nlet frameEntities: Entity[];\n\nsocket.onMessageType(ServerMessageType.GAME_STEP, data => {\n  frameUsers = decompressList(data.users, frameUsers);\n  frameEntities = decompressList(data.entities, frameEntities);\n\n  state.setUsers(frameUsers);\n  state.setEntities(frameEntities as DeadBody[]);\n\n  if (!state.me) {\n    throw new Error(`Can't find player in user list. UUID-${state.uuid}`);\n  }\n\n  renderer.centerCameraAt(state.me.player.position);\n  renderer.render(state);\n});\n\nwindow.onbeforeunload = () => {\n  socket.send({ type: ClientMessageType.LOGOUT });\n};\n","import { UserId, UserName } from '../types';\nimport { Action } from '../Action';\n\nexport enum ClientMessageType {\n  ERROR = 'ERROR',\n  LOGIN = 'LOGIN',\n  LOGOUT = 'LOGOUT',\n  RECONNECT = 'RECONNECT',\n  USER_ACTIONS = 1,\n  SET_OBSTACLES = 'SET_OBSTACLES',\n}\n\ninterface ClientMessage__ERROR {\n  type: ClientMessageType.ERROR;\n  message: string;\n}\n\ninterface ClientMessage__LOGIN {\n  type: ClientMessageType.LOGIN;\n  uuid: UserId;\n  username: UserName;\n}\n\ninterface ClientMessage__RECONNECT {\n  type: ClientMessageType.RECONNECT;\n  uuid: UserId;\n  username: UserName;\n}\n\ninterface ClientMessage__LOGOUT {\n  type: ClientMessageType.LOGOUT;\n}\n\ninterface ClientMessage__USER_ACTIONS {\n  type: ClientMessageType.USER_ACTIONS;\n  actions: Action[];\n}\n\ninterface ClientMessage__SET_OBSTACLES {\n  type: ClientMessageType.SET_OBSTACLES;\n  obstacles: Array<Rectangle>;\n}\n\ninterface Rectangle {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport type ClientMessage =\n  | ClientMessage__ERROR\n  | ClientMessage__LOGIN\n  | ClientMessage__RECONNECT\n  | ClientMessage__LOGOUT\n  | ClientMessage__USER_ACTIONS\n  | ClientMessage__SET_OBSTACLES;\n","import { Entity } from '../models/Entity';\nimport { Obstacle } from '../models/Obstacle';\nimport { User } from '../models/User';\nimport { UserId } from '../types';\n\nexport enum ServerMessageType {\n  ERROR = 'ERROR',\n  HANDSHAKE = 'HANDSHAKE',\n  LOGIN_SUCCESS = 'LOGIN_SUCCESS',\n  USER_CONNECTED = 'USER_CONNECTED',\n  USER_DISCONNECTED = 'USER_DISCONNECTED',\n  MESSAGE_FROM_USER = 'MESSAGE_FROM_USER',\n  MESSAGE_TO_ROOM = 'MESSAGE_TO_ROOM',\n  GAME_STEP = 1,\n}\n\ninterface ServerMessage__ERROR {\n  type: ServerMessageType.ERROR;\n  message: string;\n}\n\ninterface ServerMessage__HANDSHAKE {\n  type: ServerMessageType.HANDSHAKE;\n}\n\ninterface ServerMessage__LOGIN_RESULT__SUCCESS {\n  type: ServerMessageType.LOGIN_SUCCESS;\n  users: User[];\n  obstacles: Obstacle[];\n}\n\ninterface ServerMessage__USER_CONNECTED {\n  type: ServerMessageType.USER_CONNECTED;\n  user: User;\n}\n\ninterface ServerMessage__USER_DISCONNECTED {\n  type: ServerMessageType.USER_DISCONNECTED;\n  uuid: UserId;\n}\n\ninterface ServerMessage__GAME_STEP {\n  type: ServerMessageType.GAME_STEP;\n  users: User[];\n  entities: Entity[];\n}\n\nexport type ServerMessage =\n  | ServerMessage__ERROR\n  | ServerMessage__HANDSHAKE\n  | ServerMessage__LOGIN_RESULT__SUCCESS\n  | ServerMessage__USER_CONNECTED\n  | ServerMessage__USER_DISCONNECTED\n  | ServerMessage__GAME_STEP;\n","import { JsonSocket } from '@amatiasq/json-socket';\n\nimport { ClientMessage } from '../../shared/communication/ClientMessage';\nimport {\n  ServerMessage,\n  ServerMessageType,\n} from '../../shared/communication/ServerMessage';\n\nexport class ClientSocket extends JsonSocket<ServerMessage, ClientMessage> {\n  readonly listeners;\n\n  constructor(uri: string) {\n    super(uri);\n\n    this.listeners = new Map<ServerMessageType, Listener[]>();\n    this.onMessage(e => this.processMessageExtended(e));\n  }\n\n  onMessageType<T extends ServerMessageType>(\n    type: T,\n    listener: (message: TypedMessage<T>) => void,\n  ) {\n    if (this.listeners.has(type)) {\n      this.listeners.get(type)!.push(listener as any);\n    } else {\n      this.listeners.set(type, [listener as any]);\n    }\n  }\n\n  private processMessageExtended(message: ServerMessage): void {\n    const listeners = this.listeners.get(message.type);\n\n    if (listeners) {\n      listeners.forEach(x => x(message));\n    } else {\n      console.log(`Unhandled message: ${message.type}`);\n    }\n  }\n}\n\nexport type Listener = (message: ServerMessage) => void;\n\nexport type TypedMessage<T extends ServerMessageType> = Extract<\n  ServerMessage,\n  { type: T }\n>;\n","import { UserId } from '../types';\nimport {\n  createPlayer,\n  deserializePlayer,\n  Player,\n  serializePlayer,\n} from './Player';\n\nexport interface User {\n  id: UserId;\n  player: Player;\n}\n\nexport function serializeUser(model: User) {\n  return { id: model.id, player: serializePlayer(model.player) };\n}\n\nexport function deserializeUser<T extends User>(target: T, model: User) {\n  target.id = model.id;\n\n  target.player = deserializePlayer(\n    target.player || createPlayer(),\n    model.player,\n  );\n\n  return target;\n}\n","import { UserName } from './../types';\nimport {\n  createEntity,\n  deserializeEntity,\n  Entity,\n  EntityType,\n  serializeEntity,\n} from './Entity';\n\nexport interface Player extends Entity {\n  type: EntityType.Player;\n  name: UserName;\n  isDead: boolean;\n  speed: number;\n}\n\nexport function createPlayer() {\n  return {\n    ...createEntity(),\n    type: EntityType.Player as const,\n    isDead: false,\n  };\n}\n\nexport function serializePlayer(player: Player): Player {\n  return {\n    ...serializeEntity(player),\n    type: EntityType.Player as const,\n    name: player.name,\n    isDead: player.isDead,\n    speed: player.speed,\n  };\n}\n\nexport function deserializePlayer<T extends Player>(\n  target: T,\n  player: Player,\n): T {\n  deserializeEntity(target, player);\n  target.type = EntityType.Player;\n  target.name = player.name;\n  target.isDead = player.isDead;\n  target.speed = player.speed;\n  return target;\n}\n","import { Orientation } from '../Orientation';\nimport { HexColor } from '../types';\nimport { serializeVector, Vector } from '../Vector';\n\nexport enum EntityType {\n  Unknown,\n  Player,\n  DeadBody,\n}\n\nexport interface Entity {\n  type: EntityType;\n  color: HexColor;\n  position: Vector;\n  orientation: Orientation;\n}\n\nexport function createEntity() {\n  return {\n    type: EntityType.Unknown,\n    color: '#FFFFFF',\n    position: { x: 0, y: 0 },\n    orientation: Orientation.Left,\n  };\n}\n\nexport function serializeEntity({\n  type,\n  color,\n  position,\n  orientation,\n}: Entity) {\n  return { type, color, position: serializeVector(position), orientation };\n}\n\nexport function deserializeEntity<T extends Entity>(\n  target: T,\n  { type, color, position, orientation }: Entity,\n) {\n  target.type = type;\n  target.color = color;\n  target.position = position;\n  target.orientation = orientation;\n  return target;\n}\n","import { Entity } from '../../shared/models/Entity';\nimport { Obstacle } from '../../shared/models/Obstacle';\nimport { User } from '../../shared/models/User';\nimport { UserId } from '../../shared/types';\nimport { ClientUser } from './ClientUser';\n\nexport class GameState {\n  readonly uuid = `${Math.random()}${Date.now()}` as UserId;\n\n  me: ClientUser | undefined;\n  users: ClientUser[] = [];\n  entities: Entity[] = [];\n  obstacles: Obstacle[] = [];\n\n  get players() {\n    return this.users.map(x => x.player);\n  }\n\n  setObstacles(obstacles: Obstacle[]) {\n    this.obstacles = obstacles;\n  }\n\n  setEntities(entities: Entity[]) {\n    this.entities = entities;\n  }\n\n  setUsers(users: User[]) {\n    this.users = this.getUsersFromServer(users, this.uuid);\n    this.me = this.users.find(x => x.isPlayer);\n  }\n\n  addUser(user: ClientUser) {\n    this.users.push(user);\n    this.onUserListChanged();\n  }\n\n  removeUser(uuid: UserId) {\n    const index = this.users.findIndex(x => x.id === uuid);\n\n    if (index !== -1) {\n      this.users.splice(index, 1);\n      this.onUserListChanged();\n    }\n  }\n\n  private getUsersFromServer(list: User[], uuid: UserId) {\n    return list.map(x => new ClientUser(x, x.id === uuid));\n  }\n\n  private onUserListChanged() {\n    console.log('users', this.users);\n  }\n}\n","import { KeyboardActions, KeyCode } from '@amatiasq/keyboard';\n\nimport { Action } from '../../../shared/Action';\nimport { UserName } from '../../../shared/types';\n\nconst keyboard = new KeyboardActions<Action>();\n\nkeyboard.setDirections(Action.UP, Action.DOWN, Action.LEFT, Action.RIGHT);\n\nkeyboard.setKeyMap(KeyCode.KeyK, Action.KILL);\nkeyboard.setKeyMap(KeyCode.KeyR, Action.RESURRECT);\nkeyboard.setKeyMap(KeyCode.KeyM, Action.COMMIT_SUICIDE);\n\nexport function watchKeyboard(notify: (actions: Action[]) => void) {\n  keyboard.onChange(actions => notify(actions));\n}\n\nexport async function getUserName() {\n  const key = 'amongus:username';\n  const stored = sessionStorage.getItem(key);\n\n  // document.querySelector('#logout')!.addEventListener('click', e => {\n  //   sessionStorage.removeItem(key);\n  //   location.reload();\n  // });\n\n  if (stored) {\n    return Promise.resolve(stored as UserName);\n  }\n\n  const $dialog = document.querySelector<HTMLDialogElement>('#login')!;\n  const $form = $dialog.querySelector<HTMLFormElement>('form')!;\n  const $input = $form?.querySelector<HTMLInputElement>('input[type=text]')!;\n\n  $dialog.showModal();\n\n  return new Promise<UserName>((resolve, reject) => {\n    $form.addEventListener('submit', e => {\n      const value = $input.value.trim();\n      sessionStorage.setItem(key, value);\n      resolve(value as UserName);\n    });\n  });\n}\n","export enum Action {\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT,\n  KILL,\n  RESURRECT,\n  COMMIT_SUICIDE,\n}\n","import { DeadBody } from '../../../shared/models/DeadBody';\nimport { Obstacle } from '../../../shared/models/Obstacle';\nimport { Orientation } from '../../../shared/Orientation';\nimport { chain } from '../../../shared/util';\nimport { getCenterOf, minus, Vector } from '../../../shared/Vector';\nimport { ClientPlayer } from '../entities/ClientPlayer';\nimport { GameState } from '../GameState';\nimport { Color } from './Color';\nimport { getColorPatch } from './getColorPatch';\nimport { Sprite } from './Sprite';\nimport { SpriteManager } from './SpriteManager';\n\ntype Canvas = HTMLCanvasElement;\n\nexport class Renderer {\n  private readonly context = this.canvas.getContext('2d')!;\n  private readonly sprites = new SpriteManager({\n    player: 'assets/sprites/player.png',\n    phantom: 'assets/sprites/phantom.png',\n    body: 'assets/sprites/body.png',\n    background: 'assets/map/Cafeteria-sharedassets0.assets-210.png',\n  });\n\n  private camera: Vector = { x: 0, y: 0 };\n\n  get whenLoaded() {\n    return this.sprites.whenLoaded;\n  }\n\n  get width() {\n    return this.canvas.width;\n  }\n\n  get height() {\n    return this.canvas.height;\n  }\n\n  get center() {\n    return getCenterOf(this);\n  }\n\n  constructor(readonly canvas: Canvas) {\n    this.renderObstacle = this.renderObstacle.bind(this);\n    this.renderDeadBody = this.renderDeadBody.bind(this);\n    this.renderPlayer = this.renderPlayer.bind(this);\n  }\n\n  fullscreen() {\n    const requestFullscreen = () => {\n      this.canvas.parentElement!.requestFullscreen();\n      document.removeEventListener('keydown', requestFullscreen);\n      document.removeEventListener('mousedown', requestFullscreen);\n    };\n\n    document.addEventListener('keydown', requestFullscreen);\n    document.addEventListener('mousedown', requestFullscreen);\n  }\n\n  fillPage() {\n    const fullscreen = () => {\n      this.canvas.width = window.innerWidth;\n      this.canvas.height = window.innerHeight;\n    };\n\n    fullscreen();\n    window.addEventListener('resize', fullscreen);\n  }\n\n  centerCameraAt({ x, y }: Vector) {\n    this.camera = { x, y };\n  }\n\n  render({ players, entities, obstacles }: GameState) {\n    const offset = chain(this.center, minus(this.camera));\n\n    this.context.clearRect(0, 0, this.width, this.height);\n    this.context.save();\n    this.context.translate(offset.x, offset.y);\n\n    this.renderBackground();\n\n    obstacles.forEach(this.renderObstacle);\n    (entities as DeadBody[]).forEach(this.renderDeadBody);\n    players.forEach(this.renderPlayer);\n\n    this.context.restore();\n\n    this.renderVisibilityRange();\n  }\n\n  private renderBackground() {\n    const background = this.sprites.get('background');\n    background.renderTo(this.context);\n  }\n\n  private renderObstacle({ x, y, width, height }: Obstacle) {\n    this.context.strokeStyle = 'red';\n    this.context.strokeRect(x, y, width, height);\n  }\n\n  private renderDeadBody(body: DeadBody) {\n    const sprite = this.sprites\n      .getColored('body', getColorPatch(body.color))\n      .at(body.position);\n\n    if (body.orientation === Orientation.Right) {\n      sprite.flip();\n    }\n\n    sprite.renderTo(this.context);\n  }\n\n  private renderPlayer(player: ClientPlayer) {\n    const baseSprite = player.isDead ? 'phantom' : 'player';\n    const sprite = this.sprites\n      .getColored(baseSprite, getColorPatch(player.color))\n      .at(player.position);\n\n    renderText(this.context, '18px Arial', player.color, player.name, {\n      x: player.position.x,\n      y: player.position.y - 15 + sprite.offset.y,\n    });\n\n    if (player.orientation === Orientation.Left) {\n      sprite.flip();\n    }\n\n    this.context.save();\n\n    if (player.isDead) {\n      this.context.globalAlpha = 0.8;\n    }\n\n    sprite.renderTo(this.context);\n    this.context.globalAlpha = 1;\n    this.context.restore();\n  }\n\n  private renderVisibilityRange() {\n    const { x, y } = this.center;\n    const gradient = this.context.createRadialGradient(x, y, 100, x, y, 400);\n\n    gradient.addColorStop(0, 'transparent');\n    gradient.addColorStop(1, 'black');\n\n    this.context.fillStyle = gradient;\n    this.context.fillRect(0, 0, this.width, this.height);\n  }\n}\n\nfunction renderText(\n  context: CanvasRenderingContext2D,\n  font: string,\n  hex: string,\n  text: string,\n  { x, y }: Vector,\n) {\n  const spaced = text.split('').join(String.fromCharCode(8202));\n\n  context.save();\n\n  context.font = font;\n  context.textAlign = 'center';\n\n  context.strokeStyle = 'black';\n  context.lineWidth = 5;\n  context.miterLimit = 2;\n  context.strokeText(spaced, x, y);\n\n  context.fillStyle = hex;\n  context.fillText(spaced, x, y);\n\n  context.restore();\n}\n","import { ColorPatch } from './SpriteManager';\nimport { Color } from './Color';\n\nconst cache: { [hex: string]: ColorPatch } = {};\n\nexport function getColorPatch(hex: string) {\n  if (cache[hex]) {\n    return cache[hex];\n  }\n\n  const base = Color.fromHex(hex);\n  const dark = base.shade(0.5);\n\n  const patches: ColorPatch = new Map();\n\n  patches.set(isReddish, base);\n  patches.set(isBlueish, dark);\n  patches.set(isPurpleish, dark);\n\n  cache[hex] = patches;\n  return patches;\n}\n\nfunction isReddish(color: Color) {\n  return isPredominant(color.r, color.g, color.b);\n}\n\nfunction isBlueish(color: Color) {\n  return isPredominant(color.b, color.r, color.g);\n}\n\nfunction isPurpleish(color: Color) {\n  return color.r === color.b && color.r > color.g;\n}\n\nfunction isPredominant(x: number, a: number, b: number) {\n  return x > 10 && x > a && x > b;\n}\n","import { getKeys } from '../polyfill';\nimport { Color } from './Color';\nimport { Sprite } from './Sprite';\n\nexport type Image = HTMLImageElement;\nexport type Canvas = HTMLCanvasElement;\n\nexport type ColorPatch = Map<(pixel: Color) => boolean, Color>;\n\nexport class SpriteManager<TKey extends string> {\n  private readonly cache: { [k: string]: Map<ColorPatch, Canvas> } = {};\n  private readonly images: { [k: string]: Image } = {};\n  readonly whenLoaded: Promise<void>;\n  isLoaded = false;\n\n  constructor(sprites: { [key in TKey]: string }) {\n    const promises = getKeys(sprites).map(key =>\n      loadImage(sprites[key]).then(img => (this.images[key] = img)),\n    );\n\n    this.whenLoaded = Promise.all(promises).then(x => {\n      this.isLoaded = true;\n    });\n  }\n\n  get(key: TKey): Sprite {\n    return new Sprite(this.images[key]);\n  }\n\n  getColored(key: TKey, colors: ColorPatch): Sprite {\n    let spriteCache = this.cache[key];\n\n    if (!spriteCache) {\n      spriteCache = this.cache[key] = new Map<ColorPatch, Canvas>();\n    }\n\n    if (spriteCache.has(colors)) {\n      return new Sprite(spriteCache.get(colors)!);\n    }\n\n    const result = this.paint(this.images[key], colors);\n    spriteCache.set(colors, result);\n    return new Sprite(result);\n  }\n\n  private paint(img: Image, colors: ColorPatch) {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d')!;\n    const { width, height } = img;\n\n    canvas.width = width;\n    canvas.height = height;\n    context.drawImage(img, 0, 0);\n\n    const image = context.getImageData(0, 0, width, height);\n    const { data } = image;\n\n    const patches = [...colors.entries()];\n    const pLength = patches.length;\n\n    for (let i = 0, len = data.length; i < len; i += 4) {\n      const pixel = Color.fromImageData(data, i);\n\n      for (let j = 0; j < pLength; j++) {\n        const patch = patches[j];\n\n        if (patch[0](pixel)) {\n          patch[1].setToImageData(data, i, true);\n          break;\n        }\n      }\n    }\n\n    context.putImageData(image, 0, 0);\n    return canvas;\n  }\n}\n\nfunction loadImage(src: string) {\n  return new Promise<Image>((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n    img.src = src;\n  });\n}\n","export const getKeys: <T>(target: T) => Array<keyof T> = Object.keys;\n","import { chain } from '../../../shared/util';\nimport { getCenterOf, negate, Vector } from '../../../shared/Vector';\nimport { Image, Canvas } from './SpriteManager';\n\nexport class Sprite {\n  readonly offset = chain(getCenterOf(this.source), negate);\n  private position: Vector | null = null;\n  isFlipped = false;\n\n  get width() {\n    return this.source.width;\n  }\n\n  get height() {\n    return this.source.height;\n  }\n\n  constructor(private readonly source: Image | Canvas) {}\n\n  flip() {\n    this.isFlipped = !this.isFlipped;\n    return this;\n  }\n\n  at(pos: Vector) {\n    this.position = pos;\n    return this;\n  }\n\n  renderTo(context: CanvasRenderingContext2D) {\n    context.save();\n\n    if (this.position) {\n      context.translate(this.position.x, this.position.y);\n    }\n\n    if (this.isFlipped) {\n      context.scale(-1, 1);\n    }\n\n    context.drawImage(this.source, this.offset.x, this.offset.y);\n    context.restore();\n  }\n}\n","export function emitterWithChannels<U = string, T = any>() {\n  const channels = new Map<U, Set<(data: T) => void>>();\n  emit.subscribe = subscribe;\n  return emit;\n\n  function emit(channel: U, data: T) {\n    const listeners = channels.get(channel);\n\n    if (listeners) {\n      listeners.forEach(listener => listener(data));\n    }\n  }\n\n  function subscribe(channel: U, listener: (data: T) => void) {\n    const listeners = channels.get(channel) || new Set<(data: T) => void>();\n\n    if (!listener.length) {\n      channels.set(channel, listeners);\n    }\n\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n\nexport type EmitterWithChannels<U = string, T = any> = {\n  (channel: U, data: T): void;\n  subscribe: (channel: U, listener: (data: T) => void) => () => boolean;\n};\n","export function emitter<T = any>() {\n  const listeners = new Set<(data: T) => void>();\n  emit.subscribe = subscribe;\n  return emit;\n\n  function emit(data: T) {\n    listeners.forEach(listener => listener(data));\n  }\n\n  function subscribe(listener: (data: T) => void) {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n\nexport type Emitter<T = any> = {\n  (data: T): void;\n  subscribe: (listener: (data: T) => void) => () => boolean;\n};\n","import { emitter, emitterWithChannels } from '@amatiasq/emitter';\n\nimport { KeyCode } from './KeyCode';\nimport { KeyCodeEvent } from './KeyCodeEvent';\n\ntype Native = (event: KeyboardEvent) => void;\n\nexport class KeyboardController {\n  private readonly pressed = new Set<KeyCode>();\n  private readonly codeToKey = new Map<KeyCode, string>();\n\n  private readonly emitKeyCodeDown = emitterWithChannels<\n    KeyCode,\n    KeyCodeEvent\n  >();\n  private readonly emitKeyCodeUp = emitterWithChannels<KeyCode, KeyCodeEvent>();\n  private readonly emitKeyDown = emitter<KeyCodeEvent>();\n  private readonly emitKeyUp = emitter<KeyCodeEvent>();\n\n  readonly onKeyCodeDown = this.emitKeyCodeDown.subscribe;\n  readonly onKeyCodeUp = this.emitKeyCodeUp.subscribe;\n  readonly onKeyDown = this.emitKeyDown.subscribe;\n  readonly onKeyUp = this.emitKeyUp.subscribe;\n\n  isPaused = false;\n\n  constructor() {\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n\n    document.addEventListener('keydown', this.handleKeyDown as Native);\n    document.addEventListener('keyup', this.handleKeyUp as Native);\n  }\n\n  pause() {\n    this.isPaused = true;\n  }\n\n  resume() {\n    this.isPaused = false;\n  }\n\n  isPressed(key: KeyCode) {\n    return this.pressed.has(key);\n  }\n\n  getUserKey(code: KeyCode) {\n    return this.codeToKey.has(code) ? this.codeToKey.get(code) : null;\n  }\n\n  dispose() {\n    document.removeEventListener('keydown', this.handleKeyDown as Native);\n    document.removeEventListener('keyup', this.handleKeyUp as Native);\n  }\n\n  private handleKeyDown(event: KeyCodeEvent) {\n    this.onEvent(event);\n\n    if (this.isPressed(event.code)) {\n      return;\n    }\n\n    this.pressed.add(event.code);\n\n    if (this.isPaused) {\n      return;\n    }\n\n    this.emitKeyDown(event);\n    this.emitKeyCodeDown(event.code, event);\n  }\n\n  private handleKeyUp(event: KeyCodeEvent) {\n    this.onEvent(event);\n\n    if (!this.isPressed(event.code)) {\n      return;\n    }\n\n    this.pressed.delete(event.code);\n\n    if (this.isPaused) {\n      return;\n    }\n\n    this.emitKeyUp(event);\n    this.emitKeyCodeUp(event.code, event);\n  }\n\n  private onEvent(event: KeyCodeEvent) {\n    this.codeToKey.set(event.code, event.key);\n  }\n}\n","export enum KeyCode {\n  // Control\n  AltLeft = 'AltLeft',\n  AltRight = 'AltRight',\n  Backslash = 'Backslash',\n  Backspace = 'Backspace',\n  CapsLock = 'CapsLock',\n  ControlLeft = 'ControlLeft',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  MetaLeft = 'MetaLeft',\n  MetaRight = 'MetaRight',\n  ShiftLeft = 'ShiftLeft',\n  ShiftRight = 'ShiftRight',\n  Tab = 'Tab',\n\n  // Arrows\n  ArrowDown = 'ArrowDown',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  ArrowUp = 'ArrowUp',\n\n  // Special chars\n  Backquote = 'Backquote',\n  BracketLeft = 'BracketLeft',\n  BracketRight = 'BracketRight',\n  Comma = 'Comma',\n  Equal = 'Equal',\n  IntlBackslash = 'IntlBackslash',\n  Minus = 'Minus',\n  Period = 'Period',\n  Quote = 'Quote',\n  Semicolon = 'Semicolon',\n  Slash = 'Slash',\n  Space = 'Space',\n\n  // Function\n  F1 = 'F1',\n  F2 = 'F2',\n  F3 = 'F3',\n  F4 = 'F4',\n  F5 = 'F5',\n  F6 = 'F6',\n  F7 = 'F7',\n  F8 = 'F8',\n\n  // Digits\n  Digit0 = 'Digit0',\n  Digit1 = 'Digit1',\n  Digit2 = 'Digit2',\n  Digit3 = 'Digit3',\n  Digit4 = 'Digit4',\n  Digit5 = 'Digit5',\n  Digit6 = 'Digit6',\n  Digit7 = 'Digit7',\n  Digit8 = 'Digit8',\n  Digit9 = 'Digit9',\n\n  // Keys\n  KeyA = 'KeyA',\n  KeyB = 'KeyB',\n  KeyC = 'KeyC',\n  KeyD = 'KeyD',\n  KeyE = 'KeyE',\n  KeyF = 'KeyF',\n  KeyG = 'KeyG',\n  KeyH = 'KeyH',\n  KeyI = 'KeyI',\n  KeyJ = 'KeyJ',\n  KeyK = 'KeyK',\n  KeyL = 'KeyL',\n  KeyM = 'KeyM',\n  KeyN = 'KeyN',\n  KeyO = 'KeyO',\n  KeyP = 'KeyP',\n  KeyQ = 'KeyQ',\n  KeyR = 'KeyR',\n  KeyS = 'KeyS',\n  KeyT = 'KeyT',\n  KeyU = 'KeyU',\n  KeyV = 'KeyV',\n  KeyW = 'KeyW',\n  KeyX = 'KeyX',\n  KeyY = 'KeyY',\n  KeyZ = 'KeyZ',\n}\n","import { emitter, emitterWithChannels } from '@amatiasq/emitter';\n\nimport { KeyboardController } from './KeyboardController';\nimport { KeyCode } from './KeyCode';\nimport { KeyCodeEvent } from './KeyCodeEvent';\n\ntype EnumDeclaration = number | string;\n\nexport class KeyboardActions<T extends EnumDeclaration> {\n  private readonly keyboard = new KeyboardController();\n  private readonly keymap: { [id: string]: T } = {};\n  private readonly actions = new Set<T>();\n  private readonly subscriptions: (() => boolean)[];\n\n  private readonly emitChange = emitter<T[]>();\n  private readonly emitActivate = emitterWithChannels<T, void>();\n  private readonly emitDeactivate = emitterWithChannels<T, void>();\n\n  readonly onChange = this.emitChange.subscribe;\n  readonly onActivate = this.emitActivate.subscribe;\n  readonly onDeactivate = this.emitDeactivate.subscribe;\n\n  get isPaused() {\n    return this.keyboard.isPaused;\n  }\n\n  constructor() {\n    this.subscriptions = [\n      this.keyboard.onKeyDown(this.handleKeyDown),\n      this.keyboard.onKeyUp(this.handleKeyUp),\n    ];\n  }\n\n  // Composition\n\n  pause() {\n    this.keyboard.pause();\n  }\n\n  resume() {\n    this.keyboard.resume();\n  }\n\n  getUserKey(code: KeyCode) {\n    this.keyboard.getUserKey(code);\n  }\n\n  // Features\n\n  setKeyMap(key: KeyCode, action: T) {\n    this.keymap[key] = action;\n  }\n\n  isActive(action: T) {\n    return this.actions.has(action);\n  }\n\n  dispose() {\n    this.subscriptions.forEach(x => x());\n    this.keyboard.dispose();\n  }\n\n  // Helpers\n\n  setDirections(up: T, down: T, left: T, right: T) {\n    this.setArrows(up, down, left, right);\n    this.setWSAD(up, down, left, right);\n  }\n\n  setArrows(up: T, down: T, left: T, right: T) {\n    this.keymap[KeyCode.ArrowUp] = up;\n    this.keymap[KeyCode.ArrowDown] = down;\n    this.keymap[KeyCode.ArrowLeft] = left;\n    this.keymap[KeyCode.ArrowRight] = right;\n  }\n\n  setWSAD(up: T, down: T, left: T, right: T) {\n    this.keymap[KeyCode.KeyW] = up;\n    this.keymap[KeyCode.KeyS] = down;\n    this.keymap[KeyCode.KeyA] = left;\n    this.keymap[KeyCode.KeyD] = right;\n  }\n\n  // Internals\n\n  private getActionFor(code: KeyCode) {\n    if (!KeyCode[code]) {\n      console.log(`Missing key code: ${code}`);\n    }\n\n    return this.keymap[code];\n  }\n\n  private readonly handleKeyDown = this.handle(action => {\n    if (this.actions.has(action)) {\n      return;\n    }\n\n    this.actions.add(action);\n    this.emitActivate(action);\n    this.emitChange(Array.from(this.actions));\n  });\n\n  private readonly handleKeyUp = this.handle(action => {\n    if (!this.actions.has(action)) {\n      return;\n    }\n\n    this.actions.delete(action);\n    this.emitDeactivate(action);\n    this.emitChange(Array.from(this.actions));\n  });\n\n  private handle(operation: (action: T) => void) {\n    return (event: KeyCodeEvent) => {\n      const action = this.getActionFor(event.code);\n\n      if (action != null) {\n        operation(action);\n      }\n    };\n  }\n}\n","export function emitter<T = any>() {\n  const listeners = new Set<(data: T) => void>();\n  subscribe.emit = emit;\n  return subscribe;\n\n  function emit(data: T) {\n    listeners.forEach(listener => listener(data));\n  }\n\n  function subscribe(listener: (data: T) => void) {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n","import { emitter } from '@amatiasq/emitter';\n\nconst DEFAULT_RECONNECTION_DELAY = 100;\nconst MAX_RECONNECT_ATTEMPTS = 14;\n\nexport class JsonSocket<TInput, TOutput> {\n  RECONNECTION_DELAY = DEFAULT_RECONNECTION_DELAY;\n  MAX_RECONNECT_ATTEMPTS = MAX_RECONNECT_ATTEMPTS;\n\n  private reconnectionDelay = DEFAULT_RECONNECTION_DELAY;\n  private reconnectAttempts = 0;\n  private disconnectedAt = new Date();\n  private isReconnecting = false;\n  private isFirstConnection = true;\n\n  private ws = this.init();\n\n  readonly onOpen = emitter<JsonSocket<TInput, TOutput>>();\n  readonly onMessage = emitter<TInput>();\n  readonly onReconnect = emitter<Date>();\n\n  get isConnected() {\n    return !this.isFirstConnection && !this.isReconnecting;\n  }\n\n  constructor(public readonly uri: string) {}\n\n  private init() {\n    const socket = new WebSocket(this.uri);\n\n    socket.onopen = () => this.connectionOpen();\n    socket.onmessage = e => this.processMessage(e);\n    socket.onerror = () => this.connectionLost();\n    socket.onclose = () => this.connectionLost();\n\n    return socket;\n  }\n\n  send(value: TOutput) {\n    this.ws.send(JSON.stringify(value));\n  }\n\n  private processMessage(event: MessageEvent<any>) {\n    let message: TInput;\n\n    try {\n      message = JSON.parse(event.data) as TInput;\n    } catch (error) {\n      console.error('Invalid JSON', event.data);\n      return;\n    }\n\n    this.onMessage.emit(message);\n  }\n\n  private connectionOpen() {\n    this.reconnectionDelay = this.RECONNECTION_DELAY;\n    this.reconnectAttempts = 0;\n    this.isReconnecting = false;\n\n    if (this.isFirstConnection) {\n      this.isFirstConnection = false;\n      this.onOpen.emit(this);\n    } else {\n      this.onReconnect.emit(this.disconnectedAt);\n    }\n  }\n\n  private connectionLost() {\n    if (this.isReconnecting) {\n      return;\n    }\n\n    if (this.reconnectAttempts > this.MAX_RECONNECT_ATTEMPTS) {\n      return console.error(\n        `Websocket aborted after ${this.reconnectAttempts} attempts`,\n      );\n    }\n\n    if (this.reconnectAttempts === 0) {\n      this.isReconnecting = true;\n      this.disconnectedAt = new Date();\n    }\n\n    const message = `Socket closed. Waiting ${this.reconnectionDelay / 1000}s`;\n    const reconnecting = 'Reconnecting...';\n    const singleLine = this.reconnectAttempts < 1000;\n\n    console.debug(`${message} ${singleLine ? reconnecting : ''}`);\n\n    setTimeout(() => {\n      if (!singleLine) {\n        console.debug(reconnecting);\n      }\n\n      this.reconnectionDelay *= 2;\n      this.reconnectAttempts++;\n      this.ws = this.init();\n    }, this.reconnectionDelay);\n  }\n\n  close() {\n    this.ws.onclose = null;\n    this.ws.close();\n  }\n}\n"],"sourceRoot":""}