{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../shared/util.ts","webpack:///../shared/Orientation.ts","webpack:///../shared/Vector.ts","webpack:///./src/ui/Color.ts","webpack:///./src/index.ts","webpack:///../shared/communication/ClientMessage.ts","webpack:///../shared/communication/ServerMessage.ts","webpack:///./src/ClientSocket.ts","webpack:///./src/ClientUser.ts","webpack:///../shared/models/User.ts","webpack:///../shared/models/Player.ts","webpack:///../shared/models/Entity.ts","webpack:///./src/ui/canvas.ts","webpack:///./src/ui/PlayerSprite.ts","webpack:///./src/ui/interactions.ts","webpack:///../shared/Action.ts","webpack:///./node_modules/@amatiasq/keyboard/node_modules/@amatiasq/emitter/emitterWithChannels.ts","webpack:///./node_modules/@amatiasq/keyboard/node_modules/@amatiasq/emitter/emitter.ts","webpack:///./node_modules/@amatiasq/keyboard/KeyboardController.ts","webpack:///./node_modules/@amatiasq/keyboard/KeyCode.ts","webpack:///./node_modules/@amatiasq/keyboard/KeyboardActions.ts","webpack:///./node_modules/@amatiasq/emitter/emitter.ts","webpack:///./node_modules/@amatiasq/json-socket/JsonSocket.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","init","fns","reduce","x","compare","cache","data","length","compressed","map","every","undefined","list","Orientation","vector","Math","round","y","multiply","target","plus","left","right","minus","negate","sqrt","width","height","a","b","HEX_REGEX","SHORT_HEX_REGEX","RGB_REGEX","RGBA_REGEX","MAX_HEX","Color","g","array","match","exec","Error","hexValues","slice","chunk","hex","parseInt","parseHex","trim","this","fromArray","parseFloat","parseRgb","color","toArray","toString","join","generateHex","brightness","isPredominant","factor","skipAlpha","rgb","serverUri","location","origin","socket","ClientSocket","uuid","random","Date","now","myName","frameUsers","frameEntities","users","getUsersFromServer","ClientUser","id","onUserListChanged","console","log","watchKeyboard","actions","send","type","ClientMessageType","USER_ACTIONS","Array","from","onOpen","getUserName","then","username","LOGIN","onReconnect","RECONNECT","onMessageType","ServerMessageType","LOGIN_SUCCESS","USER_CONNECTED","push","user","USER_DISCONNECTED","index","findIndex","splice","GAME_STEP","decompressList","entities","me","find","players","player","bodies","centerCameraAt","position","render","window","onbeforeunload","LOGOUT","JsonSocket","uri","super","listeners","Map","onMessage","e","processMessageExtended","listener","has","set","message","forEach","model","isPlayer","deserializeUser","serializeUser","serializePlayer","deserializePlayer","createPlayer","createEntity","EntityType","Player","isDead","serializeEntity","speed","deserializeEntity","Unknown","orientation","Left","serializeVector","canvas","document","querySelector","context","getContext","playerSprite","PlayerSprite","phantomSprite","bodySprite","background","assign","Image","src","camera","renderDeadBody","body","sprite","getColor","fromHex","spritePos","chain","getCenterOf","save","translate","Right","scale","drawImage","restore","renderPlayer","fillStyle","textAlign","font","fillText","globalAlpha","fullscreen","innerWidth","innerHeight","onresize","initFullscreen","middle","offset","bgPos","clearRect","gradient","createRadialGradient","addColorStop","fillRect","visibilityRange","flip","template","colors","isReady","onload","hash","result","paintTemplate","dark","shade","createElement","image","getImageData","len","pixel","fromImageData","isReddish","setToImageData","isBlueish","putImageData","keyboard","KeyboardActions","setDirections","Action","UP","DOWN","LEFT","RIGHT","setKeyMap","KeyCode","KeyK","KILL","KeyR","RESURRECT","KeyM","COMMIT_SUICIDE","notify","onChange","async","stored","sessionStorage","getItem","Promise","resolve","$dialog","$form","$input","showModal","reject","addEventListener","setItem","emitterWithChannels","channels","emit","subscribe","channel","Set","add","delete","emitter","pressed","codeToKey","emitKeyCodeDown","emitKeyCodeUp","emitKeyDown","emitKeyUp","onKeyCodeDown","onKeyCodeUp","onKeyDown","onKeyUp","isPaused","handleKeyDown","handleKeyUp","code","removeEventListener","event","onEvent","isPressed","keymap","emitChange","emitActivate","emitDeactivate","onActivate","onDeactivate","handle","action","subscriptions","pause","resume","getUserKey","dispose","up","down","setArrows","setWSAD","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","KeyW","KeyS","KeyA","KeyD","operation","getActionFor","RECONNECTION_DELAY","MAX_RECONNECT_ATTEMPTS","reconnectionDelay","reconnectAttempts","disconnectedAt","isReconnecting","isFirstConnection","ws","WebSocket","onopen","connectionOpen","onmessage","processMessage","onerror","connectionLost","onclose","JSON","stringify","parse","error","reconnecting","singleLine","debug","setTimeout","close"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const _: any = 0;\n\ntype F<T1, T2> = (x: T1) => T2;\n\nexport function chain<\n  T1,\n  T2 extends ReturnType<FN[0]>,\n  T3 extends ReturnType<FN[1]>,\n  T4 extends ReturnType<FN[2]>,\n  T5 extends ReturnType<FN[3]>,\n  T6 extends ReturnType<FN[4]>,\n  T7 extends ReturnType<FN[5]>,\n  T8 extends ReturnType<FN[6]>,\n  FN extends Array<F<any, any>>,\n  // prettier-ignore\n  R extends FN extends [] ? T1\n    : FN extends [F<T1, T2>] ? T2\n    : FN extends [F<T1, T2>, F<T2, T3>] ? T3\n    : FN extends [F<T1, T2>, F<T2, T3>, F<T3, T4>] ? T4\n    : FN extends [F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>] ? T5\n    : FN extends [F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>, F<T5, T6>] ? T6\n    : FN extends [F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>, F<T5, T6>, F<T6, T7>] ? T7\n    : FN extends [F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>, F<T5, T6>, F<T6, T7>, F<T7, T8>] ? T8\n    : any\n>(init: T1, ...fns: FN) {\n  return fns.reduce((value, x) => x(value), init) as R;\n}\n\nexport function compressList<T>(\n  compare: (a: T, b: T) => boolean,\n  cache: T[],\n  data: T[],\n) {\n  if (cache.length !== data.length) {\n    return data;\n  }\n\n  const compressed = data.map((x, i) => (compare(x, cache[i]) ? _ : x));\n  return compressed.every(x => x === _) ? (undefined as any) : compressed;\n}\n\nexport function decompressList<T>(list: T[], cache?: T[]) {\n  if (!cache) {\n    return list;\n  }\n\n  if (list === undefined) {\n    return cache;\n  }\n\n  const omitted = (_ as any) as T;\n  return list.map((x, i) => (x === omitted ? cache[i] : x));\n}\n","export enum Orientation {\n  Left,\n  Right,\n}\n","type BinaryOperator<T = Vector> = (x: T) => (x: Vector) => Vector;\ntype Transformer = (x: Vector) => Vector;\n\nexport interface Vector {\n  x: number;\n  y: number;\n}\n\nexport function serializeVector(vector: Vector) {\n  return {\n    x: Math.round(vector.x * 100) / 100,\n    y: Math.round(vector.y * 100) / 100,\n  };\n}\n\nexport const multiply: BinaryOperator<number> = value => target => ({\n  x: target.x * value,\n  y: target.y * value,\n});\n\nexport const plus: BinaryOperator = left => right => ({\n  x: left.x + right.x,\n  y: left.y + right.y,\n});\n\nexport const minus = (left: Vector) => plus(negate(left));\n\nexport const negate = multiply(-1);\n\nexport function getMagnitude({ x, y }: Vector) {\n  return Math.sqrt(x * x + y * y);\n}\n\nexport function getCenterOf({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}): Vector {\n  return { x: width / 2, y: height / 2 };\n}\n\nexport function getDistance(a: Vector, b: Vector) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  // sqrt is not necessary since this it only be used as relative value\n  return x * x + y * y;\n}\n","const HEX_REGEX = /^#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?$/;\nconst SHORT_HEX_REGEX = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})?$/;\nconst RGB_REGEX = /^rgb\\s*\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)$/;\nconst RGBA_REGEX = /^rgba\\s*\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)$/;\n\nconst ALPHA = 3;\nconst DEFAULT_ALPHA = 1;\nconst HEXADECIMAL = 16;\nconst MAX_HEX = 255;\n\nexport class Color {\n  static fromArray([r, g, b, a]: [number, number, number] | ColorArray) {\n    return new Color(r, g, b, a == null ? DEFAULT_ALPHA : a);\n  }\n\n  static fromHex(value: string) {\n    const array = parseHex(value.trim());\n    return this.fromArray(array);\n  }\n\n  static fromRgb(value: string) {\n    const array = parseRgb(value.trim());\n    return this.fromArray(array);\n  }\n\n  static fromImageData(data: Uint8ClampedArray, i: number) {\n    return new Color(data[i], data[i + 1], data[i + 2], data[i + 3]);\n  }\n\n  get hex() {\n    return generateHex(this);\n  }\n\n  get rgb() {\n    return `rgba(${this.toArray().join(', ')})`;\n  }\n\n  get brightness() {\n    return calculateBrightness(this);\n  }\n\n  get isLight() {\n    return this.brightness > 0.5;\n  }\n\n  get isDark() {\n    return this.brightness <= 0.5;\n  }\n\n  get isReddish() {\n    return isPredominant(this.r, this.g, this.b);\n  }\n\n  get isBlueish() {\n    return isPredominant(this.b, this.r, this.g);\n  }\n\n  get isGreenish() {\n    return isPredominant(this.g, this.r, this.b);\n  }\n\n  constructor(\n    public readonly r: number,\n    public readonly g: number,\n    public readonly b: number,\n    public readonly a = DEFAULT_ALPHA,\n  ) {}\n\n  isLigherThan(color: Color) {\n    return this.brightness > color.brightness;\n  }\n\n  isDarkerThan(color: Color) {\n    return this.brightness < color.brightness;\n  }\n\n  isEqual(color: Color) {\n    return (\n      this.r === color.r &&\n      this.g === color.g &&\n      this.b === color.b &&\n      this.a === color.a\n    );\n  }\n\n  shade(factor: number) {\n    return new Color(\n      ...(this.toArray().map(x => x * (1 - factor)) as ColorArray),\n    );\n  }\n\n  setToImageData(data: Uint8ClampedArray, i: number, skipAlpha = false) {\n    data[i] = this.r;\n    data[i + 1] = this.g;\n    data[i + 2] = this.b;\n\n    if (!skipAlpha) {\n      data[i + 3] = this.a * 255;\n    }\n  }\n\n  toArray(): ColorArray {\n    const { r, g, b, a } = this;\n    return [r, g, b, a];\n  }\n\n  toString() {\n    return this.rgb;\n  }\n}\n\ntype ColorArray = [number, number, number, number];\n\nfunction calculateBrightness(color: Color) {\n  return (color.r * 0.299 + color.g * 0.587 + color.b * 0.114) / 256;\n}\n\nfunction parseHex(value: string): ColorArray {\n  const match = HEX_REGEX.exec(value) || SHORT_HEX_REGEX.exec(value);\n\n  if (!match) {\n    throw new Error('Invalid HEX color ' + value);\n  }\n\n  const hexValues = match.slice(1) as [string, string, string, string];\n  hexValues[ALPHA] = hexValues[ALPHA] || 'FF';\n\n  const array = hexValues.map(chunk => {\n    const hex = chunk.length === 2 ? chunk : chunk + chunk;\n    return parseInt(hex, HEXADECIMAL);\n  }) as ColorArray;\n\n  array[ALPHA] /= MAX_HEX;\n  return array;\n}\n\nfunction parseRgb(value: string): ColorArray {\n  const match = RGB_REGEX.exec(value) || RGBA_REGEX.exec(value);\n\n  if (!match) {\n    throw new Error('Invalid RGB color ' + value);\n  }\n\n  const [r, g, b, a] = match.slice(1) as [string, string, string, string];\n\n  return [\n    parseFloat(r),\n    parseFloat(g),\n    parseFloat(b),\n    a == null ? DEFAULT_ALPHA : parseFloat(a),\n  ];\n}\n\nfunction generateHex(color: Color) {\n  const array = color.toArray();\n\n  // Remove alpha if it's 1\n  if (array[ALPHA] === 1) {\n    array.length--;\n  } else {\n    array[ALPHA] = Math.round(array[ALPHA] * MAX_HEX);\n  }\n\n  const hex = array.map(x => x.toString(HEXADECIMAL));\n  return '#' + hex.join('');\n}\n\nfunction isPredominant(x: number, a: number, b: number) {\n  return x > 10 && x > a && x > b;\n}\n","import { ClientMessageType } from '../../shared/communication/ClientMessage';\nimport { ServerMessageType } from '../../shared/communication/ServerMessage';\nimport { DeadBody } from '../../shared/models/DeadBody';\nimport { Entity } from '../../shared/models/Entity';\nimport { User } from '../../shared/models/User';\nimport { UserId, UserName } from '../../shared/types';\nimport { decompressList } from '../../shared/util';\nimport { ClientSocket } from './ClientSocket';\nimport { ClientUser } from './ClientUser';\nimport { centerCameraAt, render } from './ui/canvas';\nimport { getUserName, watchKeyboard } from './ui/interactions';\n\nlet FORCE_PROD_SERVER = false;\n// FORCE_PROD_SERVER = true;\n\nconst serverUri =\n  location.origin === 'https://amatiasq.github.io' || FORCE_PROD_SERVER\n    ? 'wss://amongus.amatiasq.com'\n    : 'ws://localhost:17965';\n\nconst socket = new ClientSocket(serverUri);\nconst uuid = `${Math.random()}${Date.now()}` as UserId;\n\nlet myName: UserName;\nlet users: ClientUser[] = [];\n\nwatchKeyboard(actions =>\n  socket.send({\n    type: ClientMessageType.USER_ACTIONS,\n    actions: Array.from(actions),\n  }),\n);\n\nsocket.onOpen(() =>\n  getUserName().then(username => {\n    myName = username;\n    socket.send({\n      type: ClientMessageType.LOGIN,\n      uuid,\n      username,\n    });\n  }),\n);\n\nsocket.onReconnect(() =>\n  socket.send({\n    type: ClientMessageType.RECONNECT,\n    uuid,\n    username: myName,\n  }),\n);\n\nsocket.onMessageType(ServerMessageType.LOGIN_SUCCESS, data => {\n  users = getUsersFromServer(data.users);\n  onUserListChanged();\n});\n\nsocket.onMessageType(ServerMessageType.USER_CONNECTED, data => {\n  users.push(new ClientUser(data.user));\n  onUserListChanged();\n});\n\nsocket.onMessageType(ServerMessageType.USER_DISCONNECTED, data => {\n  const index = users.findIndex(x => x.id === data.uuid);\n  if (index !== -1) {\n    users.splice(index, 1);\n    onUserListChanged();\n  }\n});\n\nlet frameUsers: User[];\nlet frameEntities: Entity[];\n\nsocket.onMessageType(ServerMessageType.GAME_STEP, data => {\n  frameUsers = decompressList(data.users, frameUsers);\n  frameEntities = decompressList(data.entities, frameEntities);\n  users = getUsersFromServer(frameUsers);\n\n  const me = users.find(x => x.id === uuid);\n  const players = users.map(x => x.player);\n  const bodies = frameEntities as DeadBody[];\n\n  if (!me) {\n    throw new Error(`Can't find player in user list. UUID-${uuid}`);\n  }\n\n  centerCameraAt(me.player.position);\n  render(players, bodies);\n});\n\nwindow.onbeforeunload = () => {\n  socket.send({ type: ClientMessageType.LOGOUT });\n};\n\nfunction getUsersFromServer(list: User[]) {\n  return list.map(x => new ClientUser(x, x.id === uuid));\n}\n\nfunction onUserListChanged() {\n  console.log('users', users);\n}\n","import { RoomMessage } from './RoomMessage';\nimport { UserId, UserName } from '../types';\nimport { ClientToClientMessage } from './ClientToClientMessage';\nimport { Action } from '../Action';\n\nexport enum ClientMessageType {\n  ERROR = 'ERROR',\n  LOGIN = 'LOGIN',\n  LOGOUT = 'LOGOUT',\n  RECONNECT = 'RECONNECT',\n  USER_ACTIONS = 1,\n}\n\ninterface ClientMessage__ERROR {\n  type: ClientMessageType.ERROR;\n  message: string;\n}\n\ninterface ClientMessage__LOGIN {\n  type: ClientMessageType.LOGIN;\n  uuid: UserId;\n  username: UserName;\n}\n\ninterface ClientMessage__RECONNECT {\n  type: ClientMessageType.RECONNECT;\n  uuid: UserId;\n  username: UserName;\n}\n\ninterface ClientMessage__LOGOUT {\n  type: ClientMessageType.LOGOUT;\n}\n\ninterface ClientMessage__USER_ACTIONS {\n  type: ClientMessageType.USER_ACTIONS;\n  actions: Action[];\n}\n\n// interface ClientMessage__SEND_TO_ROOM {\n//   type: ClientMessageType.SEND_TO_ROOM;\n//   message: RoomMessage;\n// }\n\n// interface ClientMessage__SEND_TO_USER {\n//   type: ClientMessageType.SEND_TO_USER;\n//   to: UserId;\n//   message: ClientToClientMessage;\n// }\n\nexport type ClientMessage =\n  | ClientMessage__ERROR\n  | ClientMessage__LOGIN\n  | ClientMessage__RECONNECT\n  | ClientMessage__LOGOUT\n  | ClientMessage__USER_ACTIONS;\n// | ClientMessage__SEND_TO_ROOM\n// | ClientMessage__SEND_TO_USER;\n","import { UserId } from '../types';\nimport { Entity } from '../models/Entity';\nimport { User } from '../models/User';\n\nexport enum ServerMessageType {\n  ERROR = 'ERROR',\n  HANDSHAKE = 'HANDSHAKE',\n  LOGIN_SUCCESS = 'LOGIN_SUCCESS',\n  USER_CONNECTED = 'USER_CONNECTED',\n  USER_DISCONNECTED = 'USER_DISCONNECTED',\n  MESSAGE_FROM_USER = 'MESSAGE_FROM_USER',\n  MESSAGE_TO_ROOM = 'MESSAGE_TO_ROOM',\n  GAME_STEP = 1,\n}\n\ninterface ServerMessage__ERROR {\n  type: ServerMessageType.ERROR;\n  message: string;\n}\n\ninterface ServerMessage__HANDSHAKE {\n  type: ServerMessageType.HANDSHAKE;\n}\n\ninterface ServerMessage__LOGIN_RESULT__SUCCESS {\n  type: ServerMessageType.LOGIN_SUCCESS;\n  users: User[];\n}\n\ninterface ServerMessage__USER_CONNECTED {\n  type: ServerMessageType.USER_CONNECTED;\n  user: User;\n}\n\ninterface ServerMessage__USER_DISCONNECTED {\n  type: ServerMessageType.USER_DISCONNECTED;\n  uuid: UserId;\n}\n\ninterface ServerMessage__GAME_STEP {\n  type: ServerMessageType.GAME_STEP;\n  users: User[];\n  entities: Entity[];\n}\n\nexport type ServerMessage =\n  | ServerMessage__ERROR\n  | ServerMessage__HANDSHAKE\n  | ServerMessage__LOGIN_RESULT__SUCCESS\n  | ServerMessage__USER_CONNECTED\n  | ServerMessage__USER_DISCONNECTED\n  | ServerMessage__GAME_STEP;\n","import { JsonSocket } from '@amatiasq/json-socket';\n\nimport { ClientMessage } from '../../shared/communication/ClientMessage';\nimport {\n  ServerMessage,\n  ServerMessageType,\n} from '../../shared/communication/ServerMessage';\n\nexport class ClientSocket extends JsonSocket<ServerMessage, ClientMessage> {\n  readonly listeners;\n\n  constructor(uri: string) {\n    super(uri);\n\n    this.listeners = new Map<ServerMessageType, Listener[]>();\n    this.onMessage(e => this.processMessageExtended(e));\n  }\n\n  onMessageType<T extends ServerMessageType>(\n    type: T,\n    listener: (message: TypedMessage<T>) => void,\n  ) {\n    if (this.listeners.has(type)) {\n      this.listeners.get(type)!.push(listener as any);\n    } else {\n      this.listeners.set(type, [listener as any]);\n    }\n  }\n\n  private processMessageExtended(message: ServerMessage): void {\n    const listeners = this.listeners.get(message.type);\n\n    if (listeners) {\n      listeners.forEach(x => x(message));\n    } else {\n      console.log(`Unhandled message: ${message.type}`);\n    }\n  }\n}\n\nexport type Listener = (message: ServerMessage) => void;\n\nexport type TypedMessage<T extends ServerMessageType> = Extract<\n  ServerMessage,\n  { type: T }\n>;\n","import { Player } from '../../shared/models/Player';\nimport { deserializeUser, serializeUser, User } from '../../shared/models/User';\nimport { UserId } from '../../shared/types';\n\nexport class ClientUser implements User {\n  id!: UserId;\n  player!: Player;\n\n  constructor(model: User, readonly isPlayer = false) {\n    deserializeUser(this, model);\n  }\n\n  toJSON() {\n    return serializeUser(this);\n  }\n}\n","import { UserId } from '../types';\nimport {\n  createPlayer,\n  deserializePlayer,\n  Player,\n  serializePlayer,\n} from './Player';\n\nexport interface User {\n  id: UserId;\n  player: Player;\n}\n\nexport function serializeUser(model: User) {\n  return { id: model.id, player: serializePlayer(model.player) };\n}\n\nexport function deserializeUser<T extends User>(target: T, model: User) {\n  target.id = model.id;\n\n  target.player = deserializePlayer(\n    target.player || createPlayer(),\n    model.player,\n  );\n\n  return target;\n}\n","import { UserName } from './../types';\nimport {\n  createEntity,\n  deserializeEntity,\n  Entity,\n  EntityType,\n  serializeEntity,\n} from './Entity';\n\nexport interface Player extends Entity {\n  type: EntityType.Player;\n  name: UserName;\n  isDead: boolean;\n  speed: number;\n}\n\nexport function createPlayer() {\n  return {\n    ...createEntity(),\n    type: EntityType.Player as const,\n    isDead: false,\n  };\n}\n\nexport function serializePlayer(player: Player): Player {\n  return {\n    ...serializeEntity(player),\n    type: EntityType.Player as const,\n    name: player.name,\n    isDead: player.isDead,\n    speed: player.speed,\n  };\n}\n\nexport function deserializePlayer<T extends Player>(\n  target: T,\n  player: Player,\n): T {\n  deserializeEntity(target, player);\n  target.type = EntityType.Player;\n  target.name = player.name;\n  target.isDead = player.isDead;\n  target.speed = player.speed;\n  return target;\n}\n","import { Orientation } from '../Orientation';\nimport { HexColor } from '../types';\nimport { serializeVector, Vector } from '../Vector';\n\nexport enum EntityType {\n  Unknown,\n  Player,\n  DeadBody,\n}\n\nexport interface Entity {\n  type: EntityType;\n  color: HexColor;\n  position: Vector;\n  orientation: Orientation;\n}\n\nexport function createEntity() {\n  return {\n    type: EntityType.Unknown,\n    color: '#FFFFFF',\n    position: { x: 0, y: 0 },\n    orientation: Orientation.Left,\n  };\n}\n\nexport function serializeEntity({\n  type,\n  color,\n  position,\n  orientation,\n}: Entity) {\n  return { type, color, position: serializeVector(position), orientation };\n}\n\nexport function deserializeEntity<T extends Entity>(\n  target: T,\n  { type, color, position, orientation }: Entity,\n) {\n  target.type = type;\n  target.color = color;\n  target.position = position;\n  target.orientation = orientation;\n  return target;\n}\n","import { DeadBody } from '../../../shared/models/DeadBody';\nimport { Player } from '../../../shared/models/Player';\nimport { Orientation } from '../../../shared/Orientation';\nimport { chain } from '../../../shared/util';\nimport { getCenterOf, minus, negate, Vector } from '../../../shared/Vector';\nimport { Color } from './Color';\nimport { PlayerSprite } from './PlayerSprite';\n\nconst canvas = document.querySelector('canvas')!;\nconst context = canvas.getContext('2d')!;\n\nconst playerSprite = new PlayerSprite('assets/sprites/player.png');\nconst phantomSprite = new PlayerSprite('assets/sprites/phantom.png');\nconst bodySprite = new PlayerSprite('assets/sprites/body.png');\nconst background = Object.assign(new Image(), {\n  src: 'assets/map/Cafeteria-sharedassets0.assets-210.png',\n});\n\nlet camera = { x: 0, y: 0 };\n\ninitFullscreen();\n\nexport function centerCameraAt({ x, y }: Vector) {\n  camera = { x, y };\n}\n\nexport function render(players: Player[], bodies: DeadBody[]) {\n  const middle = getCenterOf(canvas);\n  const offset = chain(middle, minus(camera));\n  const bgPos = chain(getCenterOf(background), negate);\n\n  context.clearRect(0, 0, canvas.width, canvas.height);\n\n  context.save();\n  context.translate(offset.x, offset.y);\n  context.drawImage(background, bgPos.x, bgPos.y);\n\n  bodies.forEach(renderDeadBody);\n  players.forEach(renderPlayer);\n\n  context.restore();\n  visibilityRange(middle);\n}\n\nfunction renderDeadBody(body: DeadBody) {\n  const sprite = bodySprite.getColor(Color.fromHex(body.color));\n  const spritePos = chain(getCenterOf(sprite), negate);\n\n  context.save();\n  context.translate(body.position.x, body.position.y);\n\n  if (body.orientation === Orientation.Right) {\n    context.scale(-1, 1);\n  }\n\n  context.drawImage(sprite, spritePos.x, spritePos.y);\n  context.restore();\n}\n\nfunction visibilityRange({ x, y }: Vector) {\n  const gradient = context.createRadialGradient(x, y, 100, x, y, 400);\n\n  gradient.addColorStop(0, 'transparent');\n  gradient.addColorStop(1, 'black');\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, canvas.width, canvas.height);\n}\n\nfunction renderPlayer(player: Player) {\n  const color = Color.fromHex(player.color);\n  const baseSprite = player.isDead ? phantomSprite : playerSprite;\n  const sprite = baseSprite.getColor(color);\n  const spritePos = chain(getCenterOf(sprite), negate);\n\n  context.fillStyle = color.rgb;\n  context.textAlign = 'center';\n  context.font = '18px arial';\n\n  context.fillText(\n    player.name,\n    player.position.x,\n    player.position.y - 15 + spritePos.y,\n  );\n\n  context.save();\n\n  if (player.isDead) {\n    context.globalAlpha = 0.8;\n  }\n\n  context.translate(player.position.x, player.position.y);\n\n  if (player.orientation === Orientation.Left) {\n    context.scale(-1, 1);\n  }\n\n  context.drawImage(sprite, spritePos.x, spritePos.y);\n  context.globalAlpha = 1;\n  context.restore();\n}\n\nfunction initFullscreen() {\n  fullscreen();\n  window.onresize = fullscreen;\n\n  // document.addEventListener('keydown', requestFullscreen);\n  // document.addEventListener('mousemove', requestFullscreen);\n\n  // function requestFullscreen() {\n  //   canvas.parentElement!.requestFullscreen();\n  //   document.removeEventListener('keydown', requestFullscreen);\n  //   document.removeEventListener('mousemove', requestFullscreen);\n  // }\n\n  function fullscreen() {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n  }\n}\n","import { Color } from './Color';\n\nexport class PlayerSprite {\n  private readonly template = new Image();\n  private readonly colors = new Map<string, HTMLCanvasElement>();\n  private readonly flip: boolean;\n  isReady = false;\n\n  get width() {\n    return this.template.width;\n  }\n\n  get height() {\n    return this.template.height;\n  }\n\n  constructor(src: string, { flip = false }: { flip?: boolean } = {}) {\n    this.template.src = src;\n    this.template.onload = () => (this.isReady = true);\n    this.flip = flip;\n  }\n\n  getColor(color: Color) {\n    if (!this.isReady) {\n      return this.template;\n    }\n\n    const hash = color.rgb;\n\n    if (this.colors.has(hash)) {\n      return this.colors.get(hash)!;\n    }\n\n    const result = this.paintTemplate(color);\n    this.colors.set(hash, result);\n    return result;\n  }\n\n  private paintTemplate(color: Color) {\n    const dark = color.shade(0.5);\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d')!;\n    const { width, height } = this.template;\n\n    if (this.flip) {\n      context.scale(-1, 1);\n    }\n\n    canvas.width = width;\n    canvas.height = height;\n    context.drawImage(this.template, 0, 0);\n\n    const image = context.getImageData(0, 0, width, height);\n    const { data } = image;\n\n    for (let i = 0, len = data.length; i < len; i += 4) {\n      const pixel = Color.fromImageData(data, i);\n\n      if (pixel.isReddish) {\n        color.setToImageData(data, i, true);\n      } else if (pixel.isBlueish) {\n        dark.setToImageData(data, i, true);\n      }\n    }\n\n    context.putImageData(image, 0, 0);\n    return canvas;\n  }\n}\n","import { KeyboardActions, KeyCode } from '@amatiasq/keyboard';\n\nimport { Action } from '../../../shared/Action';\nimport { UserName } from '../../../shared/types';\n\nconst keyboard = new KeyboardActions<Action>();\n\nkeyboard.setDirections(Action.UP, Action.DOWN, Action.LEFT, Action.RIGHT);\nkeyboard.setKeyMap(KeyCode.KeyK, Action.KILL);\nkeyboard.setKeyMap(KeyCode.KeyR, Action.RESURRECT);\nkeyboard.setKeyMap(KeyCode.KeyM, Action.COMMIT_SUICIDE);\n\nexport function watchKeyboard(notify: (actions: Action[]) => void) {\n  keyboard.onChange(actions => notify(actions));\n}\n\nexport async function getUserName() {\n  const key = 'amongus:username';\n  const stored = sessionStorage.getItem(key);\n\n  // document.querySelector('#logout')!.addEventListener('click', e => {\n  //   sessionStorage.removeItem(key);\n  //   location.reload();\n  // });\n\n  if (stored) {\n    return Promise.resolve(stored as UserName);\n  }\n\n  const $dialog = document.querySelector<HTMLDialogElement>('#login')!;\n  const $form = $dialog.querySelector<HTMLFormElement>('form')!;\n  const $input = $form?.querySelector<HTMLInputElement>('input[type=text]')!;\n\n  $dialog.showModal();\n\n  return new Promise<UserName>((resolve, reject) => {\n    $form.addEventListener('submit', e => {\n      const value = $input.value.trim();\n      sessionStorage.setItem(key, value);\n      resolve(value as UserName);\n    });\n  });\n}\n","export enum Action {\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT,\n  KILL,\n  RESURRECT,\n  COMMIT_SUICIDE,\n}\n","export function emitterWithChannels<U = string, T = any>() {\n  const channels = new Map<U, Set<(data: T) => void>>();\n  emit.subscribe = subscribe;\n  return emit;\n\n  function emit(channel: U, data: T) {\n    const listeners = channels.get(channel);\n\n    if (listeners) {\n      listeners.forEach(listener => listener(data));\n    }\n  }\n\n  function subscribe(channel: U, listener: (data: T) => void) {\n    const listeners = channels.get(channel) || new Set<(data: T) => void>();\n\n    if (!listener.length) {\n      channels.set(channel, listeners);\n    }\n\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n\nexport type EmitterWithChannels<U = string, T = any> = {\n  (channel: U, data: T): void;\n  subscribe: (channel: U, listener: (data: T) => void) => () => boolean;\n};\n","export function emitter<T = any>() {\n  const listeners = new Set<(data: T) => void>();\n  emit.subscribe = subscribe;\n  return emit;\n\n  function emit(data: T) {\n    listeners.forEach(listener => listener(data));\n  }\n\n  function subscribe(listener: (data: T) => void) {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n\nexport type Emitter<T = any> = {\n  (data: T): void;\n  subscribe: (listener: (data: T) => void) => () => boolean;\n};\n","import { emitter, emitterWithChannels } from '@amatiasq/emitter';\n\nimport { KeyCode } from './KeyCode';\nimport { KeyCodeEvent } from './KeyCodeEvent';\n\ntype Native = (event: KeyboardEvent) => void;\n\nexport class KeyboardController {\n  private readonly pressed = new Set<KeyCode>();\n  private readonly codeToKey = new Map<KeyCode, string>();\n\n  private readonly emitKeyCodeDown = emitterWithChannels<\n    KeyCode,\n    KeyCodeEvent\n  >();\n  private readonly emitKeyCodeUp = emitterWithChannels<KeyCode, KeyCodeEvent>();\n  private readonly emitKeyDown = emitter<KeyCodeEvent>();\n  private readonly emitKeyUp = emitter<KeyCodeEvent>();\n\n  readonly onKeyCodeDown = this.emitKeyCodeDown.subscribe;\n  readonly onKeyCodeUp = this.emitKeyCodeUp.subscribe;\n  readonly onKeyDown = this.emitKeyDown.subscribe;\n  readonly onKeyUp = this.emitKeyUp.subscribe;\n\n  isPaused = false;\n\n  constructor() {\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n\n    document.addEventListener('keydown', this.handleKeyDown as Native);\n    document.addEventListener('keyup', this.handleKeyUp as Native);\n  }\n\n  pause() {\n    this.isPaused = true;\n  }\n\n  resume() {\n    this.isPaused = false;\n  }\n\n  isPressed(key: KeyCode) {\n    return this.pressed.has(key);\n  }\n\n  getUserKey(code: KeyCode) {\n    return this.codeToKey.has(code) ? this.codeToKey.get(code) : null;\n  }\n\n  dispose() {\n    document.removeEventListener('keydown', this.handleKeyDown as Native);\n    document.removeEventListener('keyup', this.handleKeyUp as Native);\n  }\n\n  private handleKeyDown(event: KeyCodeEvent) {\n    this.onEvent(event);\n\n    if (this.isPressed(event.code)) {\n      return;\n    }\n\n    this.pressed.add(event.code);\n\n    if (this.isPaused) {\n      return;\n    }\n\n    this.emitKeyDown(event);\n    this.emitKeyCodeDown(event.code, event);\n  }\n\n  private handleKeyUp(event: KeyCodeEvent) {\n    this.onEvent(event);\n\n    if (!this.isPressed(event.code)) {\n      return;\n    }\n\n    this.pressed.delete(event.code);\n\n    if (this.isPaused) {\n      return;\n    }\n\n    this.emitKeyUp(event);\n    this.emitKeyCodeUp(event.code, event);\n  }\n\n  private onEvent(event: KeyCodeEvent) {\n    this.codeToKey.set(event.code, event.key);\n  }\n}\n","export enum KeyCode {\n  // Control\n  AltLeft = 'AltLeft',\n  AltRight = 'AltRight',\n  Backslash = 'Backslash',\n  Backspace = 'Backspace',\n  CapsLock = 'CapsLock',\n  ControlLeft = 'ControlLeft',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  MetaLeft = 'MetaLeft',\n  MetaRight = 'MetaRight',\n  ShiftLeft = 'ShiftLeft',\n  ShiftRight = 'ShiftRight',\n  Tab = 'Tab',\n\n  // Arrows\n  ArrowDown = 'ArrowDown',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  ArrowUp = 'ArrowUp',\n\n  // Special chars\n  Backquote = 'Backquote',\n  BracketLeft = 'BracketLeft',\n  BracketRight = 'BracketRight',\n  Comma = 'Comma',\n  Equal = 'Equal',\n  IntlBackslash = 'IntlBackslash',\n  Minus = 'Minus',\n  Period = 'Period',\n  Quote = 'Quote',\n  Semicolon = 'Semicolon',\n  Slash = 'Slash',\n  Space = 'Space',\n\n  // Function\n  F1 = 'F1',\n  F2 = 'F2',\n  F3 = 'F3',\n  F4 = 'F4',\n  F5 = 'F5',\n  F6 = 'F6',\n  F7 = 'F7',\n  F8 = 'F8',\n\n  // Digits\n  Digit0 = 'Digit0',\n  Digit1 = 'Digit1',\n  Digit2 = 'Digit2',\n  Digit3 = 'Digit3',\n  Digit4 = 'Digit4',\n  Digit5 = 'Digit5',\n  Digit6 = 'Digit6',\n  Digit7 = 'Digit7',\n  Digit8 = 'Digit8',\n  Digit9 = 'Digit9',\n\n  // Keys\n  KeyA = 'KeyA',\n  KeyB = 'KeyB',\n  KeyC = 'KeyC',\n  KeyD = 'KeyD',\n  KeyE = 'KeyE',\n  KeyF = 'KeyF',\n  KeyG = 'KeyG',\n  KeyH = 'KeyH',\n  KeyI = 'KeyI',\n  KeyJ = 'KeyJ',\n  KeyK = 'KeyK',\n  KeyL = 'KeyL',\n  KeyM = 'KeyM',\n  KeyN = 'KeyN',\n  KeyO = 'KeyO',\n  KeyP = 'KeyP',\n  KeyQ = 'KeyQ',\n  KeyR = 'KeyR',\n  KeyS = 'KeyS',\n  KeyT = 'KeyT',\n  KeyU = 'KeyU',\n  KeyV = 'KeyV',\n  KeyW = 'KeyW',\n  KeyX = 'KeyX',\n  KeyY = 'KeyY',\n  KeyZ = 'KeyZ',\n}\n","import { emitter, emitterWithChannels } from '@amatiasq/emitter';\n\nimport { KeyboardController } from './KeyboardController';\nimport { KeyCode } from './KeyCode';\nimport { KeyCodeEvent } from './KeyCodeEvent';\n\ntype EnumDeclaration = number | string;\n\nexport class KeyboardActions<T extends EnumDeclaration> {\n  private readonly keyboard = new KeyboardController();\n  private readonly keymap: { [id: string]: T } = {};\n  private readonly actions = new Set<T>();\n  private readonly subscriptions: (() => boolean)[];\n\n  private readonly emitChange = emitter<T[]>();\n  private readonly emitActivate = emitterWithChannels<T, void>();\n  private readonly emitDeactivate = emitterWithChannels<T, void>();\n\n  readonly onChange = this.emitChange.subscribe;\n  readonly onActivate = this.emitActivate.subscribe;\n  readonly onDeactivate = this.emitDeactivate.subscribe;\n\n  get isPaused() {\n    return this.keyboard.isPaused;\n  }\n\n  constructor() {\n    this.subscriptions = [\n      this.keyboard.onKeyDown(this.handleKeyDown),\n      this.keyboard.onKeyUp(this.handleKeyUp),\n    ];\n  }\n\n  // Composition\n\n  pause() {\n    this.keyboard.pause();\n  }\n\n  resume() {\n    this.keyboard.resume();\n  }\n\n  getUserKey(code: KeyCode) {\n    this.keyboard.getUserKey(code);\n  }\n\n  // Features\n\n  setKeyMap(key: KeyCode, action: T) {\n    this.keymap[key] = action;\n  }\n\n  isActive(action: T) {\n    return this.actions.has(action);\n  }\n\n  dispose() {\n    this.subscriptions.forEach(x => x());\n    this.keyboard.dispose();\n  }\n\n  // Helpers\n\n  setDirections(up: T, down: T, left: T, right: T) {\n    this.setArrows(up, down, left, right);\n    this.setWSAD(up, down, left, right);\n  }\n\n  setArrows(up: T, down: T, left: T, right: T) {\n    this.keymap[KeyCode.ArrowUp] = up;\n    this.keymap[KeyCode.ArrowDown] = down;\n    this.keymap[KeyCode.ArrowLeft] = left;\n    this.keymap[KeyCode.ArrowRight] = right;\n  }\n\n  setWSAD(up: T, down: T, left: T, right: T) {\n    this.keymap[KeyCode.KeyW] = up;\n    this.keymap[KeyCode.KeyS] = down;\n    this.keymap[KeyCode.KeyA] = left;\n    this.keymap[KeyCode.KeyD] = right;\n  }\n\n  // Internals\n\n  private getActionFor(code: KeyCode) {\n    if (!KeyCode[code]) {\n      console.log(`Missing key code: ${code}`);\n    }\n\n    return this.keymap[code];\n  }\n\n  private readonly handleKeyDown = this.handle(action => {\n    if (this.actions.has(action)) {\n      return;\n    }\n\n    this.actions.add(action);\n    this.emitActivate(action);\n    this.emitChange(Array.from(this.actions));\n  });\n\n  private readonly handleKeyUp = this.handle(action => {\n    if (!this.actions.has(action)) {\n      return;\n    }\n\n    this.actions.delete(action);\n    this.emitDeactivate(action);\n    this.emitChange(Array.from(this.actions));\n  });\n\n  private handle(operation: (action: T) => void) {\n    return (event: KeyCodeEvent) => {\n      const action = this.getActionFor(event.code);\n\n      if (action != null) {\n        operation(action);\n      }\n    };\n  }\n}\n","export function emitter<T = any>() {\n  const listeners = new Set<(data: T) => void>();\n  subscribe.emit = emit;\n  return subscribe;\n\n  function emit(data: T) {\n    listeners.forEach(listener => listener(data));\n  }\n\n  function subscribe(listener: (data: T) => void) {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n","import { emitter } from '@amatiasq/emitter';\n\nconst DEFAULT_RECONNECTION_DELAY = 100;\nconst MAX_RECONNECT_ATTEMPTS = 14;\n\nexport class JsonSocket<TInput, TOutput> {\n  RECONNECTION_DELAY = DEFAULT_RECONNECTION_DELAY;\n  MAX_RECONNECT_ATTEMPTS = MAX_RECONNECT_ATTEMPTS;\n\n  private reconnectionDelay = DEFAULT_RECONNECTION_DELAY;\n  private reconnectAttempts = 0;\n  private disconnectedAt = new Date();\n  private isReconnecting = false;\n  private isFirstConnection = true;\n\n  private ws = this.init();\n\n  readonly onOpen = emitter<JsonSocket<TInput, TOutput>>();\n  readonly onMessage = emitter<TInput>();\n  readonly onReconnect = emitter<Date>();\n\n  get isConnected() {\n    return !this.isFirstConnection && !this.isReconnecting;\n  }\n\n  constructor(public readonly uri: string) {}\n\n  private init() {\n    const socket = new WebSocket(this.uri);\n\n    socket.onopen = () => this.connectionOpen();\n    socket.onmessage = e => this.processMessage(e);\n    socket.onerror = () => this.connectionLost();\n    socket.onclose = () => this.connectionLost();\n\n    return socket;\n  }\n\n  send(value: TOutput) {\n    this.ws.send(JSON.stringify(value));\n  }\n\n  private processMessage(event: MessageEvent<any>) {\n    let message: TInput;\n\n    try {\n      message = JSON.parse(event.data) as TInput;\n    } catch (error) {\n      console.error('Invalid JSON', event.data);\n      return;\n    }\n\n    this.onMessage.emit(message);\n  }\n\n  private connectionOpen() {\n    this.reconnectionDelay = this.RECONNECTION_DELAY;\n    this.reconnectAttempts = 0;\n    this.isReconnecting = false;\n\n    if (this.isFirstConnection) {\n      this.isFirstConnection = false;\n      this.onOpen.emit(this);\n    } else {\n      this.onReconnect.emit(this.disconnectedAt);\n    }\n  }\n\n  private connectionLost() {\n    if (this.isReconnecting) {\n      return;\n    }\n\n    if (this.reconnectAttempts > this.MAX_RECONNECT_ATTEMPTS) {\n      return console.error(\n        `Websocket aborted after ${this.reconnectAttempts} attempts`,\n      );\n    }\n\n    if (this.reconnectAttempts === 0) {\n      this.isReconnecting = true;\n      this.disconnectedAt = new Date();\n    }\n\n    const message = `Socket closed. Waiting ${this.reconnectionDelay / 1000}s`;\n    const reconnecting = 'Reconnecting...';\n    const singleLine = this.reconnectAttempts < 1000;\n\n    console.debug(`${message} ${singleLine ? reconnecting : ''}`);\n\n    setTimeout(() => {\n      if (!singleLine) {\n        console.debug(reconnecting);\n      }\n\n      this.reconnectionDelay *= 2;\n      this.reconnectAttempts++;\n      this.ws = this.init();\n    }, this.reconnectionDelay);\n  }\n\n  close() {\n    this.ws.onclose = null;\n    this.ws.close();\n  }\n}\n"],"sourceRoot":""}