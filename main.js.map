{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@amatiasq/emitter/emitterWithChannels.ts","webpack:///./node_modules/@amatiasq/emitter/emitter.ts","webpack:///../shared/Vector.ts","webpack:///../shared/util.ts","webpack:///../shared/communication/ServerMessage.ts","webpack:///./src/entities/ClientUser.ts","webpack:///../shared/Orientation.ts","webpack:///./src/ui/Color.ts","webpack:///./src/index.ts","webpack:///./node_modules/@amatiasq/resilient-socket/ResilientSocket.ts","webpack:///../shared/communication/ClientMessage.ts","webpack:///../shared/models/User.ts","webpack:///../shared/models/Player.ts","webpack:///../shared/models/Entity.ts","webpack:///./src/GameEngine.ts","webpack:///./src/GameState.ts","webpack:///./src/processors.ts","webpack:///./src/ui/interactions.ts","webpack:///../shared/Action.ts","webpack:///./src/ui/Renderer.ts","webpack:///./src/ui/getColorPatch.ts","webpack:///./src/ui/SpriteManager.ts","webpack:///./src/polyfill.ts","webpack:///./src/ui/Sprite.ts","webpack:///./node_modules/@amatiasq/keyboard/node_modules/@amatiasq/emitter/emitterWithChannels.ts","webpack:///./node_modules/@amatiasq/keyboard/node_modules/@amatiasq/emitter/emitter.ts","webpack:///./node_modules/@amatiasq/keyboard/KeyboardController.ts","webpack:///./node_modules/@amatiasq/keyboard/KeyCode.ts","webpack:///./node_modules/@amatiasq/keyboard/KeyboardActions.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","emitterWithChannels","channels","Map","emit","subscribe","channel","listener","listeners","Set","size","set","add","delete","data","forEach","Boolean","emitter","vector","x","Math","round","y","multiply","target","plus","left","right","minus","negate","sqrt","width","height","a","b","init","fns","reduce","compare","cache","length","compressed","map","every","undefined","list","ServerMessageType","model","isPlayer","deserializeUser","this","player","serializeUser","Orientation","HEX_REGEX","SHORT_HEX_REGEX","RGB_REGEX","RGBA_REGEX","MAX_HEX","Color","g","array","match","exec","Error","hexValues","slice","chunk","hex","parseInt","parseHex","trim","fromArray","parseFloat","parseRgb","color","toArray","toString","join","generateHex","brightness","factor","skipAlpha","rgb","serverUri","location","origin","state","GameState","renderer","Renderer","document","querySelector","engine","GameEngine","socket","ResilientSocket","fillPage","watchKeyboard","actions","send","ClientMessageType","USER_ACTIONS","Array","from","pipeline","Hook","SEND_MESSAGE","then","compress","serialize","RECEIVE_MESSAGE","deserialize","decompress","onMessage","trigger","register","onOpen","getUserName","async","username","whenReady","LOGIN","uuid","onReconnect","RECONNECT","me","LOGIN_SUCCESS","setUsers","users","setObstacles","obstacles","USER_CONNECTED","addUser","ClientUser","user","USER_DISCONNECTED","removeUser","GAME_STEP","entities","setEntities","centerCameraAt","position","render","window","onbeforeunload","LOGOUT","uri","reconnectionDelay","maxReconnectAttempts","reconnectAttempts","disconnectedAt","Date","isReconnecting","isFirstConnection","messageQueue","emitOpen","emitError","onError","emitClose","onClose","emitMessage","emitReconnect","connectionOpen","processMessage","connectionLost","ws","RECONNECTION_DELAY","MAX_RECONNECT_ATTEMPTS","isConnected","push","WebSocket","addEventListener","removeEventListener","event","resetReconnectionCounters","assign","disconnectedTime","processMessageQueue","reconnectionFailed","unbind","scheduleReconnection","message","console","error","reconnecting","singleLine","debug","setTimeout","onclose","close","id","serializePlayer","deserializePlayer","createPlayer","createEntity","type","EntityType","Player","isDead","serializeEntity","speed","deserializeEntity","Unknown","orientation","Left","serializeVector","pipes","handler","hook","initial","fn","has","createPipe","random","now","getUsersFromServer","find","onUserListChanged","index","findIndex","splice","log","JSON","stringify","parse","decompressList","keyboard","KeyboardActions","setDirections","Action","UP","DOWN","LEFT","RIGHT","setKeyMap","KeyCode","KeyK","KILL","KeyR","RESURRECT","KeyM","COMMIT_SUICIDE","notify","onChange","stored","sessionStorage","getItem","Promise","resolve","$dialog","$form","$input","showModal","reject","e","setItem","canvas","context","getContext","sprites","SpriteManager","phantom","body","background","camera","renderObstacle","renderDeadBody","renderPlayer","whenLoaded","getCenterOf","requestFullscreen","parentElement","fullscreen","innerWidth","innerHeight","players","offset","chain","center","clearRect","save","translate","renderBackground","restore","renderVisibilityRange","renderTo","strokeStyle","strokeRect","sprite","getColored","getColorPatch","at","Right","flip","baseSprite","font","text","spaced","split","String","fromCharCode","textAlign","lineWidth","miterLimit","strokeText","fillStyle","fillText","renderText","globalAlpha","gradient","createRadialGradient","addColorStop","fillRect","isReddish","isPredominant","isBlueish","isPurpleish","base","fromHex","dark","shade","patches","images","isLoaded","promises","getKeys","loadImage","src","img","Image","onload","onerror","all","Sprite","colors","spriteCache","result","paint","createElement","drawImage","image","getImageData","entries","pLength","len","pixel","fromImageData","j","patch","setToImageData","putImageData","keys","source","isFlipped","pos","scale","pressed","codeToKey","emitKeyCodeDown","emitKeyCodeUp","emitKeyDown","emitKeyUp","onKeyCodeDown","onKeyCodeUp","onKeyDown","onKeyUp","isPaused","handleKeyDown","handleKeyUp","code","onEvent","isPressed","keymap","emitChange","emitActivate","emitDeactivate","onActivate","onDeactivate","handle","action","subscriptions","pause","resume","getUserKey","dispose","up","down","setArrows","setWSAD","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","KeyW","KeyS","KeyA","KeyD","operation","getActionFor"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","export function emitterWithChannels<U = string, T = any>() {\n  const channels = new Map<U, Set<(data: T) => void>>();\n  emit.subscribe = subscribe;\n  return emit;\n\n  function emit(channel: U, data: T) {\n    const listeners = channels.get(channel);\n\n    if (!listeners) {\n      return false;\n    }\n\n    listeners.forEach(listener => listener(data));\n    return Boolean(listeners.size);\n  }\n\n  function subscribe(channel: U, listener: (data: T) => void) {\n    const listeners = channels.get(channel) || new Set<(data: T) => void>();\n\n    if (!listeners.size) {\n      channels.set(channel, listeners);\n    }\n\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n\nexport type EmitterWithChannels<U = string, T = any> = {\n  (channel: U, data: T): void;\n  subscribe: (channel: U, listener: (data: T) => void) => () => boolean;\n};\n","export function emitter<T = any>() {\n  const listeners = new Set<(data: T) => void>();\n  emit.subscribe = subscribe;\n  return emit;\n\n  function emit(data: T) {\n    listeners.forEach(listener => listener(data));\n    return Boolean(listeners.size);\n  }\n\n  function subscribe(listener: (data: T) => void) {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n\nexport type Emitter<T = any> = {\n  (data: T): void;\n  subscribe: (listener: (data: T) => void) => () => boolean;\n};\n","type BinaryOperator<T = Vector> = (x: T) => (x: Vector) => Vector;\ntype Transformer = (x: Vector) => Vector;\n\nexport interface Vector {\n  x: number;\n  y: number;\n}\n\nexport function serializeVector(vector: Vector) {\n  return {\n    x: Math.round(vector.x * 100) / 100,\n    y: Math.round(vector.y * 100) / 100,\n  };\n}\n\nexport const multiply: BinaryOperator<number> = value => target => ({\n  x: target.x * value,\n  y: target.y * value,\n});\n\nexport const plus: BinaryOperator = left => right => ({\n  x: left.x + right.x,\n  y: left.y + right.y,\n});\n\nexport const minus = (left: Vector) => plus(negate(left));\n\nexport const negate = multiply(-1);\n\nexport function getMagnitude({ x, y }: Vector) {\n  return Math.sqrt(x * x + y * y);\n}\n\nexport function getCenterOf({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}): Vector {\n  return { x: width / 2, y: height / 2 };\n}\n\nexport function getDistance(a: Vector, b: Vector) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  // sqrt is not necessary since this it only be used as relative value\n  return x * x + y * y;\n}\n","const _: any = 0;\n\ntype F<T1, T2> = (x: T1) => T2;\n\nexport function chain<\n  T1,\n  T2 extends ReturnType<FN[0]>,\n  T3 extends ReturnType<FN[1]>,\n  T4 extends ReturnType<FN[2]>,\n  T5 extends ReturnType<FN[3]>,\n  T6 extends ReturnType<FN[4]>,\n  T7 extends ReturnType<FN[5]>,\n  T8 extends ReturnType<FN[6]>,\n  FN extends Array<F<any, any>>,\n  // prettier-ignore\n  R extends FN extends [] ? T1\n    : FN extends [F<T1, T2>] ? T2\n    : FN extends [F<T1, T2>, F<T2, T3>] ? T3\n    : FN extends [F<T1, T2>, F<T2, T3>, F<T3, T4>] ? T4\n    : FN extends [F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>] ? T5\n    : FN extends [F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>, F<T5, T6>] ? T6\n    : FN extends [F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>, F<T5, T6>, F<T6, T7>] ? T7\n    : FN extends [F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>, F<T5, T6>, F<T6, T7>, F<T7, T8>] ? T8\n    : any\n>(init: T1, ...fns: FN) {\n  return fns.reduce((value, x) => x(value), init) as R;\n}\n\nexport function compressList<T>(\n  compare: (a: T, b: T) => boolean,\n  cache: T[],\n  data: T[],\n) {\n  if (cache.length !== data.length) {\n    return data;\n  }\n\n  const compressed = data.map((x, i) => (compare(x, cache[i]) ? _ : x));\n  return compressed.every(x => x === _) ? (undefined as any) : compressed;\n}\n\nexport function decompressList<T>(list: T[], cache?: T[]) {\n  if (!cache) {\n    return list;\n  }\n\n  if (list === undefined) {\n    return cache;\n  }\n\n  const omitted = (_ as any) as T;\n  return list.map((x, i) => (x === omitted ? cache[i] : x));\n}\n","import { Entity } from '../models/Entity';\nimport { Obstacle } from '../models/Obstacle';\nimport { User } from '../models/User';\nimport { UserId } from '../types';\nimport { Message } from './Message';\n\nexport enum ServerMessageType {\n  ERROR = 'ERROR',\n  HANDSHAKE = 'HANDSHAKE',\n  LOGIN_SUCCESS = 'LOGIN_SUCCESS',\n  USER_CONNECTED = 'USER_CONNECTED',\n  USER_DISCONNECTED = 'USER_DISCONNECTED',\n  GAME_STEP = 1,\n}\n\ninterface ServerMessage__ERROR extends Message<ServerMessageType> {\n  type: ServerMessageType.ERROR;\n  data: {\n    message: string;\n  };\n}\n\ninterface ServerMessage__HANDSHAKE extends Message<ServerMessageType> {\n  type: ServerMessageType.HANDSHAKE;\n}\n\ninterface ServerMessage__LOGIN_RESULT__SUCCESS\n  extends Message<ServerMessageType> {\n  type: ServerMessageType.LOGIN_SUCCESS;\n  data: {\n    users: User[];\n    obstacles: Obstacle[];\n  };\n}\n\ninterface ServerMessage__USER_CONNECTED extends Message<ServerMessageType> {\n  type: ServerMessageType.USER_CONNECTED;\n  data: {\n    user: User;\n  };\n}\n\ninterface ServerMessage__USER_DISCONNECTED extends Message<ServerMessageType> {\n  type: ServerMessageType.USER_DISCONNECTED;\n  data: {\n    uuid: UserId;\n  };\n}\n\ninterface ServerMessage__GAME_STEP extends Message<ServerMessageType> {\n  type: ServerMessageType.GAME_STEP;\n  data: {\n    users: User[];\n    entities: Entity[];\n  };\n}\n\nexport type ServerMessage =\n  | ServerMessage__ERROR\n  | ServerMessage__HANDSHAKE\n  | ServerMessage__LOGIN_RESULT__SUCCESS\n  | ServerMessage__USER_CONNECTED\n  | ServerMessage__USER_DISCONNECTED\n  | ServerMessage__GAME_STEP;\n","import {\n  deserializeUser,\n  serializeUser,\n  User,\n} from '../../../shared/models/User';\nimport { UserId } from '../../../shared/types';\nimport { ClientPlayer } from './ClientPlayer';\n\nexport class ClientUser implements User {\n  id!: UserId;\n  player!: ClientPlayer;\n\n  get name() {\n    return this.player.name;\n  }\n\n  constructor(model: User, readonly isPlayer = false) {\n    deserializeUser(this, model);\n  }\n\n  toJSON() {\n    return serializeUser(this);\n  }\n}\n","export enum Orientation {\n  Left,\n  Right,\n}\n","const HEX_REGEX = /^#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?$/;\nconst SHORT_HEX_REGEX = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})?$/;\nconst RGB_REGEX = /^rgb\\s*\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)$/;\nconst RGBA_REGEX = /^rgba\\s*\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)$/;\n\nconst ALPHA = 3;\nconst DEFAULT_ALPHA = 1;\nconst HEXADECIMAL = 16;\nconst MAX_HEX = 255;\n\nexport class Color {\n  static fromArray([r, g, b, a]: [number, number, number] | ColorArray) {\n    return new Color(r, g, b, a == null ? DEFAULT_ALPHA : a);\n  }\n\n  static fromHex(value: string) {\n    const array = parseHex(value.trim());\n    return this.fromArray(array);\n  }\n\n  static fromRgb(value: string) {\n    const array = parseRgb(value.trim());\n    return this.fromArray(array);\n  }\n\n  static fromImageData(data: Uint8ClampedArray, i: number) {\n    return new Color(data[i], data[i + 1], data[i + 2], data[i + 3]);\n  }\n\n  get hex() {\n    return generateHex(this);\n  }\n\n  get rgb() {\n    return `rgba(${this.toArray().join(', ')})`;\n  }\n\n  get brightness() {\n    return calculateBrightness(this);\n  }\n\n  get isLight() {\n    return this.brightness > 0.5;\n  }\n\n  get isDark() {\n    return this.brightness <= 0.5;\n  }\n\n  constructor(\n    public readonly r: number,\n    public readonly g: number,\n    public readonly b: number,\n    public readonly a = DEFAULT_ALPHA,\n  ) {}\n\n  isLigherThan(color: Color) {\n    return this.brightness > color.brightness;\n  }\n\n  isDarkerThan(color: Color) {\n    return this.brightness < color.brightness;\n  }\n\n  isEqual(color: Color) {\n    return (\n      this.r === color.r &&\n      this.g === color.g &&\n      this.b === color.b &&\n      this.a === color.a\n    );\n  }\n\n  shade(factor: number) {\n    return new Color(\n      ...(this.toArray().map(x => x * (1 - factor)) as ColorArray),\n    );\n  }\n\n  setToImageData(data: Uint8ClampedArray, i: number, skipAlpha = false) {\n    data[i] = this.r;\n    data[i + 1] = this.g;\n    data[i + 2] = this.b;\n\n    if (!skipAlpha) {\n      data[i + 3] = this.a * 255;\n    }\n  }\n\n  toArray(): ColorArray {\n    const { r, g, b, a } = this;\n    return [r, g, b, a];\n  }\n\n  toString() {\n    return this.rgb;\n  }\n\n  toJSON() {\n    return this.rgb;\n  }\n}\n\ntype ColorArray = [number, number, number, number];\n\nfunction calculateBrightness(color: Color) {\n  return (color.r * 0.299 + color.g * 0.587 + color.b * 0.114) / 256;\n}\n\nfunction parseHex(value: string): ColorArray {\n  const match = HEX_REGEX.exec(value) || SHORT_HEX_REGEX.exec(value);\n\n  if (!match) {\n    throw new Error('Invalid HEX color ' + value);\n  }\n\n  const hexValues = match.slice(1) as [string, string, string, string];\n  hexValues[ALPHA] = hexValues[ALPHA] || 'FF';\n\n  const array = hexValues.map(chunk => {\n    const hex = chunk.length === 2 ? chunk : chunk + chunk;\n    return parseInt(hex, HEXADECIMAL);\n  }) as ColorArray;\n\n  array[ALPHA] /= MAX_HEX;\n  return array;\n}\n\nfunction parseRgb(value: string): ColorArray {\n  const match = RGB_REGEX.exec(value) || RGBA_REGEX.exec(value);\n\n  if (!match) {\n    throw new Error('Invalid RGB color ' + value);\n  }\n\n  const [r, g, b, a] = match.slice(1) as [string, string, string, string];\n\n  return [\n    parseFloat(r),\n    parseFloat(g),\n    parseFloat(b),\n    a == null ? DEFAULT_ALPHA : parseFloat(a),\n  ];\n}\n\nfunction generateHex(color: Color) {\n  const array = color.toArray();\n\n  // Remove alpha if it's 1\n  if (array[ALPHA] === 1) {\n    array.length--;\n  } else {\n    array[ALPHA] = Math.round(array[ALPHA] * MAX_HEX);\n  }\n\n  const hex = array.map(x => x.toString(HEXADECIMAL));\n  return '#' + hex.join('');\n}\n","import { ResilientSocket } from '@amatiasq/resilient-socket';\n\nimport {\n  ClientMessage,\n  ClientMessageType,\n} from '../../shared/communication/ClientMessage';\nimport { ServerMessageType } from '../../shared/communication/ServerMessage';\nimport { DeadBody } from '../../shared/models/DeadBody';\nimport { ClientUser } from './entities/ClientUser';\nimport { GameEngine, Hook } from './GameEngine';\nimport { GameState } from './GameState';\nimport { compress, decompress, deserialize, serialize } from './processors';\nimport { getUserName, watchKeyboard } from './ui/interactions';\nimport { Renderer } from './ui/Renderer';\n\nlet FORCE_PROD_SERVER = false;\n// FORCE_PROD_SERVER = true;\n\nconst serverUri =\n  location.origin === 'https://amatiasq.github.io' || FORCE_PROD_SERVER\n    ? 'wss://amongus.amatiasq.com'\n    : 'ws://localhost:17965';\n\nconst state = new GameState();\nconst renderer = new Renderer(document.querySelector('canvas')!);\nconst engine = new GameEngine();\nconst socket = new ResilientSocket(serverUri);\n\n// RENDERING\n\nrenderer.fillPage();\n// renderer.fullscreen();\n\n// INPUT\n\nwatchKeyboard(actions =>\n  engine.send(ClientMessageType.USER_ACTIONS, { actions: Array.from(actions) }),\n);\n\n// SOCKET COMMUNICATION\n\nengine\n  .pipeline<ClientMessage>(Hook.SEND_MESSAGE)\n  .then(compress)\n  .then(serialize);\n\nengine\n  .pipeline<MessageEvent<string>>(Hook.RECEIVE_MESSAGE)\n  .then(deserialize)\n  .then(decompress);\n\nsocket.onMessage(x => engine.trigger(Hook.RECEIVE_MESSAGE, x));\nengine.register<string>(Hook.SEND_MESSAGE, x => socket.send(x));\n\nsocket.onOpen(() =>\n  getUserName()\n    .then(async username => {\n      await renderer.whenReady;\n      return username;\n    })\n    .then(username => {\n      engine.send(ClientMessageType.LOGIN, {\n        uuid: state.uuid,\n        username,\n      });\n    }),\n);\n\nsocket.onReconnect(() =>\n  engine.send(ClientMessageType.RECONNECT, {\n    uuid: state.uuid,\n    username: state.me!.name,\n  }),\n);\n\n// MESSAGING\n\nengine.onMessage(ServerMessageType.LOGIN_SUCCESS, data => {\n  state.setUsers(data.users);\n  state.setObstacles(data.obstacles);\n});\n\nengine.onMessage(ServerMessageType.USER_CONNECTED, data =>\n  state.addUser(new ClientUser(data.user)),\n);\n\nengine.onMessage(ServerMessageType.USER_DISCONNECTED, data =>\n  state.removeUser(data.uuid),\n);\n\nengine.onMessage(ServerMessageType.GAME_STEP, ({ users, entities }) => {\n  state.setUsers(users);\n  state.setEntities(entities as DeadBody[]);\n\n  if (!state.me) {\n    throw new Error(`Can't find player in user list. UUID-${state.uuid}`);\n  }\n\n  renderer.centerCameraAt(state.me.player.position);\n  renderer.render(state);\n});\n\n// ON CLOSE\n\nwindow.onbeforeunload = () => engine.send(ClientMessageType.LOGOUT);\n","import { emitter } from '@amatiasq/emitter';\n\nconst DEFAULT_RECONNECTION_DELAY = 100;\nconst MAX_RECONNECT_ATTEMPTS = 14;\n\ntype Message = string | ArrayBufferLike | Blob | ArrayBufferView;\n\ninterface SocketReconnectionEvent extends Event {\n  disconnectedTime: Date;\n}\n\nexport class ResilientSocket {\n  RECONNECTION_DELAY;\n  MAX_RECONNECT_ATTEMPTS;\n\n  private ws;\n\n  private reconnectionDelay = DEFAULT_RECONNECTION_DELAY;\n  private reconnectAttempts = 0;\n  private disconnectedAt = new Date();\n  private isReconnecting = false;\n  private isFirstConnection = true;\n  private messageQueue: Message[] = [];\n\n  private readonly emitOpen = emitter<Event>();\n  readonly onOpen = this.emitOpen.subscribe;\n\n  private readonly emitError = emitter<Event>();\n  readonly onError = this.emitError.subscribe;\n\n  private readonly emitClose = emitter<Event>();\n  readonly onClose = this.emitClose.subscribe;\n\n  private readonly emitMessage = emitter<MessageEvent>();\n  readonly onMessage = this.emitMessage.subscribe;\n\n  private readonly emitReconnect = emitter<SocketReconnectionEvent>();\n  readonly onReconnect = this.emitReconnect.subscribe;\n\n  get isConnected() {\n    return !this.isFirstConnection && !this.isReconnecting;\n  }\n\n  constructor(\n    public readonly uri: string,\n    {\n      reconnectionDelay = DEFAULT_RECONNECTION_DELAY,\n      maxReconnectAttempts = MAX_RECONNECT_ATTEMPTS,\n    } = {},\n  ) {\n    this.connectionOpen = this.connectionOpen.bind(this);\n    this.processMessage = this.processMessage.bind(this);\n    this.connectionLost = this.connectionLost.bind(this);\n\n    this.ws = this.init();\n    this.RECONNECTION_DELAY = reconnectionDelay;\n    this.MAX_RECONNECT_ATTEMPTS = maxReconnectAttempts;\n  }\n\n  send(data: Message) {\n    if (this.isConnected) this.ws.send(data);\n    else this.messageQueue.push(data);\n  }\n\n  private init() {\n    const socket = new WebSocket(this.uri);\n\n    socket.addEventListener('open', this.connectionOpen);\n    socket.addEventListener('message', this.processMessage);\n    socket.addEventListener('error', this.connectionLost);\n    socket.addEventListener('close', this.connectionLost);\n\n    return socket;\n  }\n\n  private unbind() {\n    this.ws.removeEventListener('open', this.connectionOpen);\n    this.ws.removeEventListener('message', this.processMessage);\n    this.ws.removeEventListener('error', this.connectionLost);\n    this.ws.removeEventListener('close', this.connectionLost);\n  }\n\n  private processMessage(event: MessageEvent<any>) {\n    this.emitMessage(event);\n  }\n\n  private connectionOpen(event: Event) {\n    this.resetReconnectionCounters();\n\n    if (this.isFirstConnection) {\n      this.isFirstConnection = false;\n      this.emitOpen(event);\n    } else {\n      this.emitReconnect(\n        Object.assign(event, { disconnectedTime: this.disconnectedAt }),\n      );\n    }\n\n    this.processMessageQueue();\n  }\n\n  private connectionLost(event: Event) {\n    if (this.isReconnecting) {\n      return;\n    }\n\n    if (this.reconnectAttempts > this.MAX_RECONNECT_ATTEMPTS) {\n      this.reconnectionFailed(event);\n    }\n\n    if (this.reconnectAttempts === 0) {\n      this.isReconnecting = true;\n      this.disconnectedAt = new Date();\n    }\n\n    this.unbind();\n    this.scheduleReconnection();\n  }\n\n  private resetReconnectionCounters() {\n    this.reconnectionDelay = this.RECONNECTION_DELAY;\n    this.reconnectAttempts = 0;\n    this.isReconnecting = false;\n  }\n\n  private processMessageQueue() {\n    for (const message in this.messageQueue) {\n      this.ws.send(message);\n    }\n\n    this.messageQueue.length = 0;\n  }\n\n  private reconnectionFailed(event: Event) {\n    this.emitError(event);\n    return console.error(\n      `Websocket aborted after ${this.reconnectAttempts} attempts`,\n    );\n  }\n\n  private scheduleReconnection() {\n    const message = `Socket closed. Waiting ${this.reconnectionDelay / 1000}s`;\n    const reconnecting = 'Reconnecting...';\n    const singleLine = this.reconnectAttempts < 1000;\n\n    console.debug(`${message} ${singleLine ? reconnecting : ''}`);\n\n    setTimeout(() => {\n      if (!singleLine) {\n        console.debug(reconnecting);\n      }\n\n      this.reconnectionDelay *= 2;\n      this.reconnectAttempts++;\n      this.ws = this.init();\n    }, this.reconnectionDelay);\n  }\n\n  close() {\n    this.unbind();\n    this.ws.onclose = this.emitClose;\n    this.ws.close();\n  }\n}\n","import { UserId, UserName } from '../types';\nimport { Action } from '../Action';\nimport { Message } from './Message';\n\nexport enum ClientMessageType {\n  ERROR = 'ERROR',\n  LOGIN = 'LOGIN',\n  LOGOUT = 'LOGOUT',\n  RECONNECT = 'RECONNECT',\n  USER_ACTIONS = 1,\n  SET_OBSTACLES = 'SET_OBSTACLES',\n}\n\ninterface ClientMessage__ERROR extends Message<ClientMessageType> {\n  type: ClientMessageType.ERROR;\n  data: {\n    message: string;\n  };\n}\n\ninterface ClientMessage__LOGIN extends Message<ClientMessageType> {\n  type: ClientMessageType.LOGIN;\n  data: {\n    uuid: UserId;\n    username: UserName;\n  };\n}\n\ninterface ClientMessage__LOGOUT extends Message<ClientMessageType> {\n  type: ClientMessageType.LOGOUT;\n}\n\ninterface ClientMessage__RECONNECT extends Message<ClientMessageType> {\n  type: ClientMessageType.RECONNECT;\n  data: {\n    uuid: UserId;\n    username: UserName;\n  };\n}\n\ninterface ClientMessage__USER_ACTIONS extends Message<ClientMessageType> {\n  type: ClientMessageType.USER_ACTIONS;\n  data: {\n    actions: Action[];\n  };\n}\n\ninterface ClientMessage__SET_OBSTACLES extends Message<ClientMessageType> {\n  type: ClientMessageType.SET_OBSTACLES;\n  data: {\n    obstacles: Array<Rectangle>;\n  };\n}\n\ninterface Rectangle {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport type ClientMessage =\n  | ClientMessage__ERROR\n  | ClientMessage__LOGIN\n  | ClientMessage__RECONNECT\n  | ClientMessage__LOGOUT\n  | ClientMessage__USER_ACTIONS\n  | ClientMessage__SET_OBSTACLES;\n","import { UserId } from '../types';\nimport {\n  createPlayer,\n  deserializePlayer,\n  Player,\n  serializePlayer,\n} from './Player';\n\nexport interface User {\n  id: UserId;\n  player: Player;\n}\n\nexport function serializeUser(model: User) {\n  return { id: model.id, player: serializePlayer(model.player) };\n}\n\nexport function deserializeUser<T extends User>(target: T, model: User) {\n  target.id = model.id;\n\n  target.player = deserializePlayer(\n    target.player || createPlayer(),\n    model.player,\n  );\n\n  return target;\n}\n","import { UserName } from './../types';\nimport {\n  createEntity,\n  deserializeEntity,\n  Entity,\n  EntityType,\n  serializeEntity,\n} from './Entity';\n\nexport interface Player extends Entity {\n  type: EntityType.Player;\n  name: UserName;\n  isDead: boolean;\n  speed: number;\n}\n\nexport function createPlayer() {\n  return {\n    ...createEntity(),\n    type: EntityType.Player as const,\n    isDead: false,\n  };\n}\n\nexport function serializePlayer(player: Player): Player {\n  return {\n    ...serializeEntity(player),\n    type: EntityType.Player as const,\n    name: player.name,\n    isDead: player.isDead,\n    speed: player.speed,\n  };\n}\n\nexport function deserializePlayer<T extends Player>(\n  target: T,\n  player: Player,\n): T {\n  deserializeEntity(target, player);\n  target.type = EntityType.Player;\n  target.name = player.name;\n  target.isDead = player.isDead;\n  target.speed = player.speed;\n  return target;\n}\n","import { Orientation } from '../Orientation';\nimport { HexColor } from '../types';\nimport { serializeVector, Vector } from '../Vector';\n\nexport enum EntityType {\n  Unknown,\n  Player,\n  DeadBody,\n}\n\nexport interface Entity {\n  type: EntityType;\n  color: HexColor;\n  position: Vector;\n  orientation: Orientation;\n}\n\nexport function createEntity() {\n  return {\n    type: EntityType.Unknown,\n    color: '#FFFFFF',\n    position: { x: 0, y: 0 },\n    orientation: Orientation.Left,\n  };\n}\n\nexport function serializeEntity({\n  type,\n  color,\n  position,\n  orientation,\n}: Entity) {\n  return { type, color, position: serializeVector(position), orientation };\n}\n\nexport function deserializeEntity<T extends Entity>(\n  target: T,\n  { type, color, position, orientation }: Entity,\n) {\n  target.type = type;\n  target.color = color;\n  target.position = position;\n  target.orientation = orientation;\n  return target;\n}\n","import { emitterWithChannels } from '@amatiasq/emitter';\n\nimport { ClientMessage } from '../../shared/communication/ClientMessage';\nimport {\n  MessageReader,\n  MessageWriter,\n} from '../../shared/communication/Message';\nimport {\n  ServerMessage,\n  ServerMessageType,\n} from '../../shared/communication/ServerMessage';\nimport { ClientSocket } from './ClientSocket';\n\nexport enum Hook {\n  RECEIVE_MESSAGE,\n  SEND_MESSAGE,\n  MESSAGE_SENT,\n}\n\nexport class GameEngine implements ClientSocket {\n  private readonly listeners = emitterWithChannels<ServerMessageType, any>();\n  private readonly channels = new Map<Hook, Function[]>();\n  private readonly pipes = new Map<Hook, Function[]>();\n\n  constructor() {\n    this.register<ServerMessage>(Hook.RECEIVE_MESSAGE, ({ type, data }) =>\n      this.listeners(type, data),\n    );\n  }\n\n  send: MessageWriter<ClientMessage> = (type, data) =>\n    this.trigger(Hook.SEND_MESSAGE, { type, data });\n\n  onMessage: MessageReader<ServerMessage> = (type, handler) =>\n    this.listeners.subscribe(type, handler);\n\n  trigger<In>(hook: Hook, initial?: In) {\n    const pipes = this.pipes.get(hook);\n    const channels = this.channels.get(hook);\n\n    if (!pipes && !channels) return;\n\n    const event = pipes\n      ? pipes.reduce((value, fn) => fn(value), initial)\n      : initial;\n\n    if (channels) {\n      channels.forEach(x => x(event));\n    }\n  }\n\n  register<T>(hook: Hook, handler: (data: T) => void) {\n    if (!this.channels.has(hook)) {\n      this.channels.set(hook, [handler]);\n      return;\n    }\n\n    const list = this.channels.get(hook)!;\n    list.push(handler);\n  }\n\n  pipeline<In>(hook: Hook) {\n    if (!this.pipes.has(hook)) {\n      this.pipes.set(hook, []);\n    }\n\n    return this.createPipe<In>(hook);\n  }\n\n  private createPipe<In>(hook: Hook) {\n    return {\n      then: <Out>(handler: (value: In) => Out) => {\n        this.pipes.get(hook)!.push(handler);\n        return this.createPipe<Out>(hook);\n      },\n    };\n  }\n}\n","import { Entity } from '../../shared/models/Entity';\nimport { Obstacle } from '../../shared/models/Obstacle';\nimport { User } from '../../shared/models/User';\nimport { UserId } from '../../shared/types';\nimport { ClientUser } from './entities/ClientUser';\n\nexport class GameState {\n  readonly uuid = `${Math.random()}${Date.now()}` as UserId;\n\n  me: ClientUser | undefined;\n  users: ClientUser[] = [];\n  entities: Entity[] = [];\n  obstacles: Obstacle[] = [];\n\n  get players() {\n    return this.users.map(x => x.player);\n  }\n\n  setObstacles(obstacles: Obstacle[]) {\n    this.obstacles = obstacles;\n  }\n\n  setEntities(entities: Entity[]) {\n    this.entities = entities;\n  }\n\n  setUsers(users: User[]) {\n    this.users = this.getUsersFromServer(users, this.uuid);\n    this.me = this.users.find(x => x.isPlayer);\n  }\n\n  addUser(user: ClientUser) {\n    this.users.push(user);\n    this.onUserListChanged();\n  }\n\n  removeUser(uuid: UserId) {\n    const index = this.users.findIndex(x => x.id === uuid);\n\n    if (index !== -1) {\n      this.users.splice(index, 1);\n      this.onUserListChanged();\n    }\n  }\n\n  private getUsersFromServer(list: User[], uuid: UserId) {\n    return list.map(x => new ClientUser(x, x.id === uuid));\n  }\n\n  private onUserListChanged() {\n    console.log('users', this.users);\n  }\n}\n","import { ClientMessage } from '../../shared/communication/ClientMessage';\nimport {\n  ServerMessage,\n  ServerMessageType,\n} from '../../shared/communication/ServerMessage';\nimport { Entity } from '../../shared/models/Entity';\nimport { User } from '../../shared/models/User';\nimport { decompressList } from '../../shared/util';\n\nexport function serialize(message: ClientMessage) {\n  return JSON.stringify(message);\n}\n\nexport function deserialize(event: MessageEvent<string>) {\n  try {\n    return JSON.parse(event.data) as ServerMessage;\n  } catch (error) {\n    throw new Error(`Invalid JSON (${error.message}): \"${event.data}\"`);\n  }\n}\n\nexport function compress(message: ClientMessage) {\n  return message;\n}\n\nlet users: User[];\nlet entities: Entity[];\n\nexport function decompress(message: ServerMessage) {\n  if (message.type != ServerMessageType.GAME_STEP) {\n    return message;\n  }\n\n  const { data } = message;\n  users = decompressList(data.users, users);\n  entities = decompressList(data.entities, entities);\n  return { ...message, data: { ...message.data, users, entities } };\n}\n","import { KeyboardActions, KeyCode } from '@amatiasq/keyboard';\n\nimport { Action } from '../../../shared/Action';\nimport { UserName } from '../../../shared/types';\n\nconst keyboard = new KeyboardActions<Action>();\n\nkeyboard.setDirections(Action.UP, Action.DOWN, Action.LEFT, Action.RIGHT);\n\nkeyboard.setKeyMap(KeyCode.KeyK, Action.KILL);\nkeyboard.setKeyMap(KeyCode.KeyR, Action.RESURRECT);\nkeyboard.setKeyMap(KeyCode.KeyM, Action.COMMIT_SUICIDE);\n\nexport function watchKeyboard(notify: (actions: Action[]) => void) {\n  keyboard.onChange(actions => notify(actions));\n}\n\nexport async function getUserName() {\n  const key = 'amongus:username';\n  const stored = sessionStorage.getItem(key);\n\n  // document.querySelector('#logout')!.addEventListener('click', e => {\n  //   sessionStorage.removeItem(key);\n  //   location.reload();\n  // });\n\n  if (stored) {\n    return Promise.resolve(stored as UserName);\n  }\n\n  const $dialog = document.querySelector<HTMLDialogElement>('#login')!;\n  const $form = $dialog.querySelector<HTMLFormElement>('form')!;\n  const $input = $form?.querySelector<HTMLInputElement>('input[type=text]')!;\n\n  $dialog.showModal();\n\n  return new Promise<UserName>((resolve, reject) => {\n    $form.addEventListener('submit', e => {\n      const value = $input.value.trim();\n      sessionStorage.setItem(key, value);\n      resolve(value as UserName);\n    });\n  });\n}\n","export enum Action {\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT,\n  KILL,\n  RESURRECT,\n  COMMIT_SUICIDE,\n}\n","import { DeadBody } from '../../../shared/models/DeadBody';\nimport { Obstacle } from '../../../shared/models/Obstacle';\nimport { Orientation } from '../../../shared/Orientation';\nimport { chain } from '../../../shared/util';\nimport { getCenterOf, minus, Vector } from '../../../shared/Vector';\nimport { ClientPlayer } from '../entities/ClientPlayer';\nimport { GameState } from '../GameState';\nimport { Color } from './Color';\nimport { getColorPatch } from './getColorPatch';\nimport { Sprite } from './Sprite';\nimport { SpriteManager } from './SpriteManager';\n\ntype Canvas = HTMLCanvasElement;\n\nexport class Renderer {\n  private readonly context = this.canvas.getContext('2d')!;\n  private readonly sprites = new SpriteManager({\n    player: 'assets/sprites/player.png',\n    phantom: 'assets/sprites/phantom.png',\n    body: 'assets/sprites/body.png',\n    background: 'assets/map/Cafeteria-sharedassets0.assets-210.png',\n  });\n\n  private camera: Vector = { x: 0, y: 0 };\n\n  get whenReady() {\n    return this.sprites.whenLoaded;\n  }\n\n  get width() {\n    return this.canvas.width;\n  }\n\n  get height() {\n    return this.canvas.height;\n  }\n\n  get center() {\n    return getCenterOf(this);\n  }\n\n  constructor(readonly canvas: Canvas) {\n    this.renderObstacle = this.renderObstacle.bind(this);\n    this.renderDeadBody = this.renderDeadBody.bind(this);\n    this.renderPlayer = this.renderPlayer.bind(this);\n  }\n\n  fullscreen() {\n    const requestFullscreen = () => {\n      this.canvas.parentElement!.requestFullscreen();\n      document.removeEventListener('keydown', requestFullscreen);\n      document.removeEventListener('mousedown', requestFullscreen);\n    };\n\n    document.addEventListener('keydown', requestFullscreen);\n    document.addEventListener('mousedown', requestFullscreen);\n  }\n\n  fillPage() {\n    const fullscreen = () => {\n      this.canvas.width = window.innerWidth;\n      this.canvas.height = window.innerHeight;\n    };\n\n    fullscreen();\n    window.addEventListener('resize', fullscreen);\n  }\n\n  centerCameraAt({ x, y }: Vector) {\n    this.camera = { x, y };\n  }\n\n  render({ players, entities, obstacles }: GameState) {\n    const offset = chain(this.center, minus(this.camera));\n\n    this.context.clearRect(0, 0, this.width, this.height);\n    this.context.save();\n    this.context.translate(offset.x, offset.y);\n\n    this.renderBackground();\n\n    obstacles.forEach(this.renderObstacle);\n    (entities as DeadBody[]).forEach(this.renderDeadBody);\n    players.forEach(this.renderPlayer);\n\n    this.context.restore();\n\n    this.renderVisibilityRange();\n  }\n\n  private renderBackground() {\n    const background = this.sprites.get('background');\n    background.renderTo(this.context);\n  }\n\n  private renderObstacle({ x, y, width, height }: Obstacle) {\n    this.context.strokeStyle = 'red';\n    this.context.strokeRect(x, y, width, height);\n  }\n\n  private renderDeadBody(body: DeadBody) {\n    const sprite = this.sprites\n      .getColored('body', getColorPatch(body.color))\n      .at(body.position);\n\n    if (body.orientation === Orientation.Right) {\n      sprite.flip();\n    }\n\n    sprite.renderTo(this.context);\n  }\n\n  private renderPlayer(player: ClientPlayer) {\n    const baseSprite = player.isDead ? 'phantom' : 'player';\n    const sprite = this.sprites\n      .getColored(baseSprite, getColorPatch(player.color))\n      .at(player.position);\n\n    renderText(this.context, '18px Arial', player.color, player.name, {\n      x: player.position.x,\n      y: player.position.y - 15 + sprite.offset.y,\n    });\n\n    if (player.orientation === Orientation.Left) {\n      sprite.flip();\n    }\n\n    this.context.save();\n\n    if (player.isDead) {\n      this.context.globalAlpha = 0.8;\n    }\n\n    sprite.renderTo(this.context);\n    this.context.globalAlpha = 1;\n    this.context.restore();\n  }\n\n  private renderVisibilityRange() {\n    const { x, y } = this.center;\n    const gradient = this.context.createRadialGradient(x, y, 100, x, y, 400);\n\n    gradient.addColorStop(0, 'transparent');\n    gradient.addColorStop(1, 'black');\n\n    this.context.fillStyle = gradient;\n    this.context.fillRect(0, 0, this.width, this.height);\n  }\n}\n\nfunction renderText(\n  context: CanvasRenderingContext2D,\n  font: string,\n  hex: string,\n  text: string,\n  { x, y }: Vector,\n) {\n  const spaced = text.split('').join(String.fromCharCode(8202));\n\n  context.save();\n\n  context.font = font;\n  context.textAlign = 'center';\n\n  context.strokeStyle = 'black';\n  context.lineWidth = 5;\n  context.miterLimit = 2;\n  context.strokeText(spaced, x, y);\n\n  context.fillStyle = hex;\n  context.fillText(spaced, x, y);\n\n  context.restore();\n}\n","import { ColorPatch } from './SpriteManager';\nimport { Color } from './Color';\n\nconst cache: { [hex: string]: ColorPatch } = {};\n\nexport function getColorPatch(hex: string) {\n  if (cache[hex]) {\n    return cache[hex];\n  }\n\n  const base = Color.fromHex(hex);\n  const dark = base.shade(0.5);\n\n  const patches: ColorPatch = new Map();\n\n  patches.set(isReddish, base);\n  patches.set(isBlueish, dark);\n  patches.set(isPurpleish, dark);\n\n  cache[hex] = patches;\n  return patches;\n}\n\nfunction isReddish(color: Color) {\n  return isPredominant(color.r, color.g, color.b);\n}\n\nfunction isBlueish(color: Color) {\n  return isPredominant(color.b, color.r, color.g);\n}\n\nfunction isPurpleish(color: Color) {\n  return color.r === color.b && color.r > color.g;\n}\n\nfunction isPredominant(x: number, a: number, b: number) {\n  return x > 10 && x > a && x > b;\n}\n","import { getKeys } from '../polyfill';\nimport { Color } from './Color';\nimport { Sprite } from './Sprite';\n\nexport type Image = HTMLImageElement;\nexport type Canvas = HTMLCanvasElement;\n\nexport type ColorPatch = Map<(pixel: Color) => boolean, Color>;\n\nexport class SpriteManager<TKey extends string> {\n  private readonly cache: { [k: string]: Map<ColorPatch, Canvas> } = {};\n  private readonly images: { [k: string]: Image } = {};\n  readonly whenLoaded: Promise<void>;\n  isLoaded = false;\n\n  constructor(sprites: { [key in TKey]: string }) {\n    const promises = getKeys(sprites).map(key =>\n      loadImage(sprites[key]).then(img => (this.images[key] = img)),\n    );\n\n    this.whenLoaded = Promise.all(promises).then(x => {\n      this.isLoaded = true;\n    });\n  }\n\n  get(key: TKey): Sprite {\n    return new Sprite(this.images[key]);\n  }\n\n  getColored(key: TKey, colors: ColorPatch): Sprite {\n    let spriteCache = this.cache[key];\n\n    if (!spriteCache) {\n      spriteCache = this.cache[key] = new Map<ColorPatch, Canvas>();\n    }\n\n    if (spriteCache.has(colors)) {\n      return new Sprite(spriteCache.get(colors)!);\n    }\n\n    const result = this.paint(this.images[key], colors);\n    spriteCache.set(colors, result);\n    return new Sprite(result);\n  }\n\n  private paint(img: Image, colors: ColorPatch) {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d')!;\n    const { width, height } = img;\n\n    canvas.width = width;\n    canvas.height = height;\n    context.drawImage(img, 0, 0);\n\n    const image = context.getImageData(0, 0, width, height);\n    const { data } = image;\n\n    const patches = [...colors.entries()];\n    const pLength = patches.length;\n\n    for (let i = 0, len = data.length; i < len; i += 4) {\n      const pixel = Color.fromImageData(data, i);\n\n      for (let j = 0; j < pLength; j++) {\n        const patch = patches[j];\n\n        if (patch[0](pixel)) {\n          patch[1].setToImageData(data, i, true);\n          break;\n        }\n      }\n    }\n\n    context.putImageData(image, 0, 0);\n    return canvas;\n  }\n}\n\nfunction loadImage(src: string) {\n  return new Promise<Image>((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n    img.src = src;\n  });\n}\n","export const getKeys: <T>(target: T) => Array<keyof T> = Object.keys;\n","import { chain } from '../../../shared/util';\nimport { getCenterOf, negate, Vector } from '../../../shared/Vector';\nimport { Image, Canvas } from './SpriteManager';\n\nexport class Sprite {\n  readonly offset = chain(getCenterOf(this.source), negate);\n  private position: Vector | null = null;\n  isFlipped = false;\n\n  get width() {\n    return this.source.width;\n  }\n\n  get height() {\n    return this.source.height;\n  }\n\n  constructor(private readonly source: Image | Canvas) {}\n\n  flip() {\n    this.isFlipped = !this.isFlipped;\n    return this;\n  }\n\n  at(pos: Vector) {\n    this.position = pos;\n    return this;\n  }\n\n  renderTo(context: CanvasRenderingContext2D) {\n    context.save();\n\n    if (this.position) {\n      context.translate(this.position.x, this.position.y);\n    }\n\n    if (this.isFlipped) {\n      context.scale(-1, 1);\n    }\n\n    context.drawImage(this.source, this.offset.x, this.offset.y);\n    context.restore();\n  }\n}\n","export function emitterWithChannels<U = string, T = any>() {\n  const channels = new Map<U, Set<(data: T) => void>>();\n  emit.subscribe = subscribe;\n  return emit;\n\n  function emit(channel: U, data: T) {\n    const listeners = channels.get(channel);\n\n    if (listeners) {\n      listeners.forEach(listener => listener(data));\n    }\n  }\n\n  function subscribe(channel: U, listener: (data: T) => void) {\n    const listeners = channels.get(channel) || new Set<(data: T) => void>();\n\n    if (!listener.length) {\n      channels.set(channel, listeners);\n    }\n\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n\nexport type EmitterWithChannels<U = string, T = any> = {\n  (channel: U, data: T): void;\n  subscribe: (channel: U, listener: (data: T) => void) => () => boolean;\n};\n","export function emitter<T = any>() {\n  const listeners = new Set<(data: T) => void>();\n  emit.subscribe = subscribe;\n  return emit;\n\n  function emit(data: T) {\n    listeners.forEach(listener => listener(data));\n  }\n\n  function subscribe(listener: (data: T) => void) {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n\nexport type Emitter<T = any> = {\n  (data: T): void;\n  subscribe: (listener: (data: T) => void) => () => boolean;\n};\n","import { emitter, emitterWithChannels } from '@amatiasq/emitter';\n\nimport { KeyCode } from './KeyCode';\nimport { KeyCodeEvent } from './KeyCodeEvent';\n\ntype Native = (event: KeyboardEvent) => void;\n\nexport class KeyboardController {\n  private readonly pressed = new Set<KeyCode>();\n  private readonly codeToKey = new Map<KeyCode, string>();\n\n  private readonly emitKeyCodeDown = emitterWithChannels<\n    KeyCode,\n    KeyCodeEvent\n  >();\n  private readonly emitKeyCodeUp = emitterWithChannels<KeyCode, KeyCodeEvent>();\n  private readonly emitKeyDown = emitter<KeyCodeEvent>();\n  private readonly emitKeyUp = emitter<KeyCodeEvent>();\n\n  readonly onKeyCodeDown = this.emitKeyCodeDown.subscribe;\n  readonly onKeyCodeUp = this.emitKeyCodeUp.subscribe;\n  readonly onKeyDown = this.emitKeyDown.subscribe;\n  readonly onKeyUp = this.emitKeyUp.subscribe;\n\n  isPaused = false;\n\n  constructor() {\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n\n    document.addEventListener('keydown', this.handleKeyDown as Native);\n    document.addEventListener('keyup', this.handleKeyUp as Native);\n  }\n\n  pause() {\n    this.isPaused = true;\n  }\n\n  resume() {\n    this.isPaused = false;\n  }\n\n  isPressed(key: KeyCode) {\n    return this.pressed.has(key);\n  }\n\n  getUserKey(code: KeyCode) {\n    return this.codeToKey.has(code) ? this.codeToKey.get(code) : null;\n  }\n\n  dispose() {\n    document.removeEventListener('keydown', this.handleKeyDown as Native);\n    document.removeEventListener('keyup', this.handleKeyUp as Native);\n  }\n\n  private handleKeyDown(event: KeyCodeEvent) {\n    this.onEvent(event);\n\n    if (this.isPressed(event.code)) {\n      return;\n    }\n\n    this.pressed.add(event.code);\n\n    if (this.isPaused) {\n      return;\n    }\n\n    this.emitKeyDown(event);\n    this.emitKeyCodeDown(event.code, event);\n  }\n\n  private handleKeyUp(event: KeyCodeEvent) {\n    this.onEvent(event);\n\n    if (!this.isPressed(event.code)) {\n      return;\n    }\n\n    this.pressed.delete(event.code);\n\n    if (this.isPaused) {\n      return;\n    }\n\n    this.emitKeyUp(event);\n    this.emitKeyCodeUp(event.code, event);\n  }\n\n  private onEvent(event: KeyCodeEvent) {\n    this.codeToKey.set(event.code, event.key);\n  }\n}\n","export enum KeyCode {\n  // Control\n  AltLeft = 'AltLeft',\n  AltRight = 'AltRight',\n  Backslash = 'Backslash',\n  Backspace = 'Backspace',\n  CapsLock = 'CapsLock',\n  ControlLeft = 'ControlLeft',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  MetaLeft = 'MetaLeft',\n  MetaRight = 'MetaRight',\n  ShiftLeft = 'ShiftLeft',\n  ShiftRight = 'ShiftRight',\n  Tab = 'Tab',\n\n  // Arrows\n  ArrowDown = 'ArrowDown',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  ArrowUp = 'ArrowUp',\n\n  // Special chars\n  Backquote = 'Backquote',\n  BracketLeft = 'BracketLeft',\n  BracketRight = 'BracketRight',\n  Comma = 'Comma',\n  Equal = 'Equal',\n  IntlBackslash = 'IntlBackslash',\n  Minus = 'Minus',\n  Period = 'Period',\n  Quote = 'Quote',\n  Semicolon = 'Semicolon',\n  Slash = 'Slash',\n  Space = 'Space',\n\n  // Function\n  F1 = 'F1',\n  F2 = 'F2',\n  F3 = 'F3',\n  F4 = 'F4',\n  F5 = 'F5',\n  F6 = 'F6',\n  F7 = 'F7',\n  F8 = 'F8',\n\n  // Digits\n  Digit0 = 'Digit0',\n  Digit1 = 'Digit1',\n  Digit2 = 'Digit2',\n  Digit3 = 'Digit3',\n  Digit4 = 'Digit4',\n  Digit5 = 'Digit5',\n  Digit6 = 'Digit6',\n  Digit7 = 'Digit7',\n  Digit8 = 'Digit8',\n  Digit9 = 'Digit9',\n\n  // Keys\n  KeyA = 'KeyA',\n  KeyB = 'KeyB',\n  KeyC = 'KeyC',\n  KeyD = 'KeyD',\n  KeyE = 'KeyE',\n  KeyF = 'KeyF',\n  KeyG = 'KeyG',\n  KeyH = 'KeyH',\n  KeyI = 'KeyI',\n  KeyJ = 'KeyJ',\n  KeyK = 'KeyK',\n  KeyL = 'KeyL',\n  KeyM = 'KeyM',\n  KeyN = 'KeyN',\n  KeyO = 'KeyO',\n  KeyP = 'KeyP',\n  KeyQ = 'KeyQ',\n  KeyR = 'KeyR',\n  KeyS = 'KeyS',\n  KeyT = 'KeyT',\n  KeyU = 'KeyU',\n  KeyV = 'KeyV',\n  KeyW = 'KeyW',\n  KeyX = 'KeyX',\n  KeyY = 'KeyY',\n  KeyZ = 'KeyZ',\n}\n","import { emitter, emitterWithChannels } from '@amatiasq/emitter';\n\nimport { KeyboardController } from './KeyboardController';\nimport { KeyCode } from './KeyCode';\nimport { KeyCodeEvent } from './KeyCodeEvent';\n\ntype EnumDeclaration = number | string;\n\nexport class KeyboardActions<T extends EnumDeclaration> {\n  private readonly keyboard = new KeyboardController();\n  private readonly keymap: { [id: string]: T } = {};\n  private readonly actions = new Set<T>();\n  private readonly subscriptions: (() => boolean)[];\n\n  private readonly emitChange = emitter<T[]>();\n  private readonly emitActivate = emitterWithChannels<T, void>();\n  private readonly emitDeactivate = emitterWithChannels<T, void>();\n\n  readonly onChange = this.emitChange.subscribe;\n  readonly onActivate = this.emitActivate.subscribe;\n  readonly onDeactivate = this.emitDeactivate.subscribe;\n\n  get isPaused() {\n    return this.keyboard.isPaused;\n  }\n\n  constructor() {\n    this.subscriptions = [\n      this.keyboard.onKeyDown(this.handleKeyDown),\n      this.keyboard.onKeyUp(this.handleKeyUp),\n    ];\n  }\n\n  // Composition\n\n  pause() {\n    this.keyboard.pause();\n  }\n\n  resume() {\n    this.keyboard.resume();\n  }\n\n  getUserKey(code: KeyCode) {\n    this.keyboard.getUserKey(code);\n  }\n\n  // Features\n\n  setKeyMap(key: KeyCode, action: T) {\n    this.keymap[key] = action;\n  }\n\n  isActive(action: T) {\n    return this.actions.has(action);\n  }\n\n  dispose() {\n    this.subscriptions.forEach(x => x());\n    this.keyboard.dispose();\n  }\n\n  // Helpers\n\n  setDirections(up: T, down: T, left: T, right: T) {\n    this.setArrows(up, down, left, right);\n    this.setWSAD(up, down, left, right);\n  }\n\n  setArrows(up: T, down: T, left: T, right: T) {\n    this.keymap[KeyCode.ArrowUp] = up;\n    this.keymap[KeyCode.ArrowDown] = down;\n    this.keymap[KeyCode.ArrowLeft] = left;\n    this.keymap[KeyCode.ArrowRight] = right;\n  }\n\n  setWSAD(up: T, down: T, left: T, right: T) {\n    this.keymap[KeyCode.KeyW] = up;\n    this.keymap[KeyCode.KeyS] = down;\n    this.keymap[KeyCode.KeyA] = left;\n    this.keymap[KeyCode.KeyD] = right;\n  }\n\n  // Internals\n\n  private getActionFor(code: KeyCode) {\n    if (!KeyCode[code]) {\n      console.log(`Missing key code: ${code}`);\n    }\n\n    return this.keymap[code];\n  }\n\n  private readonly handleKeyDown = this.handle(action => {\n    if (this.actions.has(action)) {\n      return;\n    }\n\n    this.actions.add(action);\n    this.emitActivate(action);\n    this.emitChange(Array.from(this.actions));\n  });\n\n  private readonly handleKeyUp = this.handle(action => {\n    if (!this.actions.has(action)) {\n      return;\n    }\n\n    this.actions.delete(action);\n    this.emitDeactivate(action);\n    this.emitChange(Array.from(this.actions));\n  });\n\n  private handle(operation: (action: T) => void) {\n    return (event: KeyCodeEvent) => {\n      const action = this.getActionFor(event.code);\n\n      if (action != null) {\n        operation(action);\n      }\n    };\n  }\n}\n"],"sourceRoot":""}