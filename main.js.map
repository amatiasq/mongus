{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../shared/models/Entity.ts","webpack:///./src/Color.ts","webpack:///./src/index.ts","webpack:///../shared/communication/ClientMessage.ts","webpack:///../shared/communication/ServerMessage.ts","webpack:///../shared/Orientation.ts","webpack:///./src/canvas.ts","webpack:///./src/PlayerSprite.ts","webpack:///./src/ClientSocket.ts","webpack:///./src/ClientUser.ts","webpack:///../shared/models/User.ts","webpack:///../shared/models/Player.ts","webpack:///./src/interactions.ts","webpack:///../shared/Action.ts","webpack:///./node_modules/@amatiasq/keyboard/node_modules/@amatiasq/emitter/emitterWithChannels.ts","webpack:///./node_modules/@amatiasq/keyboard/node_modules/@amatiasq/emitter/emitter.ts","webpack:///./node_modules/@amatiasq/keyboard/KeyboardController.ts","webpack:///./node_modules/@amatiasq/keyboard/KeyCode.ts","webpack:///./node_modules/@amatiasq/keyboard/KeyboardActions.ts","webpack:///./node_modules/@amatiasq/emitter/emitter.ts","webpack:///./node_modules/@amatiasq/json-socket/JsonSocket.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EntityType","type","Unknown","color","position","x","y","orientation","Orientation","Left","target","HEX_REGEX","SHORT_HEX_REGEX","RGB_REGEX","RGBA_REGEX","MAX_HEX","Color","g","b","a","array","match","exec","Error","hexValues","slice","map","chunk","hex","length","parseInt","parseHex","trim","this","fromArray","parseFloat","parseRgb","data","toArray","Math","round","toString","join","generateHex","brightness","isPredominant","factor","skipAlpha","rgb","socket","ClientSocket","uuid","random","Date","now","users","onUserListChanged","console","log","watchKeyboard","actions","send","ClientMessageType","USER_ACTIONS","Array","from","onOpen","LOGIN","onReconnect","RECONNECT","onMessageType","ServerMessageType","LOGIN_SUCCESS","ClientUser","id","USER_CONNECTED","push","user","USER_DISCONNECTED","index","findIndex","splice","GAME_STEP","players","bodies","entities","forEach","entity","Player","render","window","onbeforeunload","LOGOUT","canvas","document","querySelector","context","getContext","playerSprite","PlayerSprite","phantomSprite","bodySprite","fullscreen","width","innerWidth","height","innerHeight","onresize","clearRect","body","sprite","getColor","fromHex","drawImage","player","isDead","globalAlpha","src","template","Image","colors","Map","isReady","onload","hash","has","result","paintTemplate","set","dark","shade","createElement","image","getImageData","len","pixel","fromImageData","isReddish","setToImageData","isBlueish","putImageData","JsonSocket","uri","super","listeners","onMessage","e","processMessagePotato","listener","message","debug","model","isPlayer","deserializeUser","serializeUser","serializePlayer","deserializePlayer","createPlayer","createEntity","serializeEntity","deserializeEntity","keyboard","KeyboardActions","setDirections","Action","UP","DOWN","LEFT","RIGHT","setKeyMap","KeyCode","KeyK","KILL","notify","onChange","emitterWithChannels","channels","emit","subscribe","channel","Set","add","delete","emitter","pressed","codeToKey","emitKeyCodeDown","emitKeyCodeUp","emitKeyDown","emitKeyUp","onKeyCodeDown","onKeyCodeUp","onKeyDown","onKeyUp","isPaused","handleKeyDown","handleKeyUp","addEventListener","code","removeEventListener","event","onEvent","isPressed","keymap","emitChange","emitActivate","emitDeactivate","onActivate","onDeactivate","handle","action","subscriptions","pause","resume","getUserKey","dispose","up","down","left","right","setArrows","setWSAD","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","KeyW","KeyS","KeyA","KeyD","operation","getActionFor","RECONNECTION_DELAY","MAX_RECONNECT_ATTEMPTS","reconnectionDelay","reconnectAttempts","disconnectedAt","isReconnecting","isFirstConnection","ws","init","WebSocket","onopen","connectionOpen","onmessage","processMessage","onerror","connectionLost","onclose","JSON","stringify","parse","error","reconnecting","singleLine","setTimeout","close"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import { Orientation } from '../Orientation';\nimport { HexColor } from '../types';\nimport { Vector } from '../Vector';\n\nexport enum EntityType {\n  Unknown,\n  Player,\n  DeadBody,\n}\n\nexport interface Entity {\n  type: EntityType;\n  color: HexColor;\n  position: Vector;\n  orientation: Orientation;\n}\n\nexport function createEntity() {\n  return {\n    type: EntityType.Unknown,\n    color: '#FFFFFF',\n    position: { x: 0, y: 0 },\n    orientation: Orientation.Left,\n  };\n}\n\nexport function serializeEntity({\n  type,\n  color,\n  position,\n  orientation,\n}: Entity) {\n  return { type, color, position, orientation };\n}\n\nexport function deserializeEntity<T extends Entity>(\n  target: T,\n  { type, color, position, orientation }: Entity,\n) {\n  target.type = type;\n  target.color = color;\n  target.position = position;\n  target.orientation = orientation;\n  return target;\n}\n","const HEX_REGEX = /^#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?$/;\nconst SHORT_HEX_REGEX = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})?$/;\nconst RGB_REGEX = /^rgb\\s*\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)$/;\nconst RGBA_REGEX = /^rgba\\s*\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)$/;\n\nconst ALPHA = 3;\nconst DEFAULT_ALPHA = 1;\nconst HEXADECIMAL = 16;\nconst MAX_HEX = 255;\n\nexport class Color {\n  static fromArray([r, g, b, a]: [number, number, number] | ColorArray) {\n    return new Color(r, g, b, a == null ? DEFAULT_ALPHA : a);\n  }\n\n  static fromHex(value: string) {\n    const array = parseHex(value.trim());\n    return this.fromArray(array);\n  }\n\n  static fromRgb(value: string) {\n    const array = parseRgb(value.trim());\n    return this.fromArray(array);\n  }\n\n  static fromImageData(data: Uint8ClampedArray, i: number) {\n    return new Color(data[i], data[i + 1], data[i + 2], data[i + 3]);\n  }\n\n  get hex() {\n    return generateHex(this);\n  }\n\n  get rgb() {\n    return `rgba(${this.toArray().join(', ')})`;\n  }\n\n  get brightness() {\n    return calculateBrightness(this);\n  }\n\n  get isLight() {\n    return this.brightness > 0.5;\n  }\n\n  get isDark() {\n    return this.brightness <= 0.5;\n  }\n\n  get isReddish() {\n    return isPredominant(this.r, this.g, this.b);\n  }\n\n  get isBlueish() {\n    return isPredominant(this.b, this.r, this.g);\n  }\n\n  get isGreenish() {\n    return isPredominant(this.g, this.r, this.b);\n  }\n\n  constructor(\n    public readonly r: number,\n    public readonly g: number,\n    public readonly b: number,\n    public readonly a = DEFAULT_ALPHA,\n  ) {}\n\n  isLigherThan(color: Color) {\n    return this.brightness > color.brightness;\n  }\n\n  isDarkerThan(color: Color) {\n    return this.brightness < color.brightness;\n  }\n\n  isEqual(color: Color) {\n    return (\n      this.r === color.r &&\n      this.g === color.g &&\n      this.b === color.b &&\n      this.a === color.a\n    );\n  }\n\n  shade(factor: number) {\n    return new Color(\n      ...(this.toArray().map(x => x * (1 - factor)) as ColorArray),\n    );\n  }\n\n  setToImageData(data: Uint8ClampedArray, i: number, skipAlpha = false) {\n    data[i] = this.r;\n    data[i + 1] = this.g;\n    data[i + 2] = this.b;\n\n    if (!skipAlpha) {\n      data[i + 3] = this.a * 255;\n    }\n  }\n\n  toArray(): ColorArray {\n    const { r, g, b, a } = this;\n    return [r, g, b, a];\n  }\n\n  toString() {\n    return this.rgb;\n  }\n}\n\ntype ColorArray = [number, number, number, number];\n\nfunction calculateBrightness(color: Color) {\n  return (color.r * 0.299 + color.g * 0.587 + color.b * 0.114) / 256;\n}\n\nfunction parseHex(value: string): ColorArray {\n  const match = HEX_REGEX.exec(value) || SHORT_HEX_REGEX.exec(value);\n\n  if (!match) {\n    throw new Error('Invalid HEX color ' + value);\n  }\n\n  const hexValues = match.slice(1) as [string, string, string, string];\n  hexValues[ALPHA] = hexValues[ALPHA] || 'FF';\n\n  const array = hexValues.map(chunk => {\n    const hex = chunk.length === 2 ? chunk : chunk + chunk;\n    return parseInt(hex, HEXADECIMAL);\n  }) as ColorArray;\n\n  array[ALPHA] /= MAX_HEX;\n  return array;\n}\n\nfunction parseRgb(value: string): ColorArray {\n  const match = RGB_REGEX.exec(value) || RGBA_REGEX.exec(value);\n\n  if (!match) {\n    throw new Error('Invalid RGB color ' + value);\n  }\n\n  const [r, g, b, a] = match.slice(1) as [string, string, string, string];\n\n  return [\n    parseFloat(r),\n    parseFloat(g),\n    parseFloat(b),\n    a == null ? DEFAULT_ALPHA : parseFloat(a),\n  ];\n}\n\nfunction generateHex(color: Color) {\n  const array = color.toArray();\n\n  // Remove alpha if it's 1\n  if (array[ALPHA] === 1) {\n    array.length--;\n  } else {\n    array[ALPHA] = Math.round(array[ALPHA] * MAX_HEX);\n  }\n\n  const hex = array.map(x => x.toString(HEXADECIMAL));\n  return '#' + hex.join('');\n}\n\nfunction isPredominant(x: number, a: number, b: number) {\n  return x > 10 && x > a && x > b;\n}\n","import { ClientMessageType } from '../../shared/communication/ClientMessage';\nimport { ServerMessageType } from '../../shared/communication/ServerMessage';\nimport { DeadBody } from '../../shared/models/DeadBody';\nimport { EntityType } from '../../shared/models/Entity';\nimport { Player } from '../../shared/models/Player';\nimport { UserId } from '../../shared/types';\nimport { render } from './canvas';\nimport { ClientSocket } from './ClientSocket';\nimport { ClientUser } from './ClientUser';\nimport { watchKeyboard } from './interactions';\n\n// const socket = new ClientSocket('ws://localhost:17965');\nconst socket = new ClientSocket('wss://amongus.amatiasq.com');\nconst uuid = `${Math.random()}${Date.now()}${Math.random()}©AMONGUS®` as UserId;\nlet users: ClientUser[] = [];\n\nwatchKeyboard(actions =>\n  socket.send({\n    type: ClientMessageType.USER_ACTIONS,\n    actions: Array.from(actions),\n  }),\n);\n\nsocket.onOpen(() =>\n  socket.send({\n    type: ClientMessageType.LOGIN,\n    uuid,\n  }),\n);\n\nsocket.onReconnect(() =>\n  socket.send({\n    type: ClientMessageType.RECONNECT,\n    uuid,\n  }),\n);\n\nsocket.onMessageType(ServerMessageType.LOGIN_SUCCESS, data => {\n  users = data.users.map(x => new ClientUser(x, x.id === uuid));\n  onUserListChanged();\n});\n\nsocket.onMessageType(ServerMessageType.USER_CONNECTED, data => {\n  users.push(new ClientUser(data.user));\n  onUserListChanged();\n});\n\nsocket.onMessageType(ServerMessageType.USER_DISCONNECTED, data => {\n  const index = users.findIndex(x => x.id === data.uuid);\n  if (index !== -1) {\n    users.splice(index, 1);\n    onUserListChanged();\n  }\n});\n\nsocket.onMessageType(ServerMessageType.GAME_STEP, data => {\n  const players: Player[] = [];\n  const bodies: DeadBody[] = [];\n\n  data.entities.forEach(entity => {\n    if (entity.type === EntityType.Player) {\n      players.push(entity as Player);\n    } else {\n      bodies.push(entity as DeadBody);\n    }\n  });\n\n  render(players, bodies);\n});\n\nwindow.onbeforeunload = () => {\n  socket.send({ type: ClientMessageType.LOGOUT });\n};\n\nfunction onUserListChanged() {\n  console.log('users', users);\n}\n","import { RoomMessage } from './RoomMessage';\nimport { UserId, UserName } from '../types';\nimport { ClientToClientMessage } from './ClientToClientMessage';\nimport { Action } from '../Action';\n\nexport enum ClientMessageType {\n  ERROR = 'ERROR',\n  LOGIN = 'LOGIN',\n  LOGOUT = 'LOGOUT',\n  RECONNECT = 'RECONNECT',\n  USER_ACTIONS = 1,\n}\n\ninterface ClientMessage__ERROR {\n  type: ClientMessageType.ERROR;\n  message: string;\n}\n\ninterface ClientMessage__LOGIN {\n  type: ClientMessageType.LOGIN;\n  uuid: UserId;\n}\n\ninterface ClientMessage__RECONNECT {\n  type: ClientMessageType.RECONNECT;\n  uuid: UserId;\n}\n\ninterface ClientMessage__LOGOUT {\n  type: ClientMessageType.LOGOUT;\n}\n\ninterface ClientMessage__USER_ACTIONS {\n  type: ClientMessageType.USER_ACTIONS;\n  actions: Action[];\n}\n\n// interface ClientMessage__SEND_TO_ROOM {\n//   type: ClientMessageType.SEND_TO_ROOM;\n//   message: RoomMessage;\n// }\n\n// interface ClientMessage__SEND_TO_USER {\n//   type: ClientMessageType.SEND_TO_USER;\n//   to: UserId;\n//   message: ClientToClientMessage;\n// }\n\nexport type ClientMessage =\n  | ClientMessage__ERROR\n  | ClientMessage__LOGIN\n  | ClientMessage__RECONNECT\n  | ClientMessage__LOGOUT\n  | ClientMessage__USER_ACTIONS;\n// | ClientMessage__SEND_TO_ROOM\n// | ClientMessage__SEND_TO_USER;\n","import { UserId } from '../types';\nimport { Entity } from '../models/Entity';\nimport { User } from '../models/User';\n\nexport enum ServerMessageType {\n  ERROR = 'ERROR',\n  HANDSHAKE = 'HANDSHAKE',\n  LOGIN_SUCCESS = 'LOGIN_SUCCESS',\n  USER_CONNECTED = 'USER_CONNECTED',\n  USER_DISCONNECTED = 'USER_DISCONNECTED',\n  MESSAGE_FROM_USER = 'MESSAGE_FROM_USER',\n  MESSAGE_TO_ROOM = 'MESSAGE_TO_ROOM',\n  GAME_STEP = 1,\n}\n\ninterface ServerMessage__ERROR {\n  type: ServerMessageType.ERROR;\n  message: string;\n}\n\ninterface ServerMessage__HANDSHAKE {\n  type: ServerMessageType.HANDSHAKE;\n}\n\ninterface ServerMessage__LOGIN_RESULT__SUCCESS {\n  type: ServerMessageType.LOGIN_SUCCESS;\n  users: User[];\n}\n\ninterface ServerMessage__USER_CONNECTED {\n  type: ServerMessageType.USER_CONNECTED;\n  user: User;\n}\n\ninterface ServerMessage__USER_DISCONNECTED {\n  type: ServerMessageType.USER_DISCONNECTED;\n  uuid: UserId;\n}\n\ninterface ServerMessage__GAME_STEP {\n  type: ServerMessageType.GAME_STEP;\n  entities: Entity[];\n}\n\nexport type ServerMessage =\n  | ServerMessage__ERROR\n  | ServerMessage__HANDSHAKE\n  | ServerMessage__LOGIN_RESULT__SUCCESS\n  | ServerMessage__USER_CONNECTED\n  | ServerMessage__USER_DISCONNECTED\n  | ServerMessage__GAME_STEP;\n","export enum Orientation {\n  Left,\n  Right,\n}\n","import { DeadBody } from '../../shared/models/DeadBody';\nimport { Player } from '../../shared/models/Player';\nimport { Color } from './Color';\nimport { PlayerSprite } from './PlayerSprite';\n\nconst canvas = document.querySelector('canvas')!;\nconst context = canvas.getContext('2d')!;\nconst playerSprite = new PlayerSprite('assets/sprites/player.png');\nconst phantomSprite = new PlayerSprite('assets/sprites/phantom.png');\nconst bodySprite = new PlayerSprite('assets/sprites/body.png');\n\nfullscreen();\nwindow.onresize = fullscreen;\n\nfunction fullscreen() {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n}\n\nexport function render(players: Player[], bodies: DeadBody[]) {\n  context.clearRect(0, 0, canvas.width, canvas.height);\n\n  bodies.forEach(body => {\n    const sprite = bodySprite.getColor(Color.fromHex(body.color));\n\n    context.drawImage(\n      sprite,\n      body.position.x - sprite.width / 2,\n      body.position.y - sprite.height / 2,\n    );\n  });\n\n  players.forEach(player => {\n    const color = Color.fromHex(player.color);\n    // context.fillStyle = color.rgb;\n    // context.textAlign = 'center';\n\n    // context.fillText(\n    //   user.id,\n    //   user.position.x,\n    //   user.position.y - 15 - player.height / 2,\n    // );\n\n    if (player.isDead) {\n      const sprite = phantomSprite.getColor(color);\n      context.globalAlpha = 0.8;\n\n      context.drawImage(\n        sprite,\n        player.position.x - sprite.width / 2,\n        player.position.y - sprite.height / 2,\n      );\n\n      context.globalAlpha = 1;\n    } else {\n      const sprite = playerSprite.getColor(color);\n\n      context.drawImage(\n        sprite,\n        player.position.x - sprite.width / 2,\n        player.position.y - sprite.height / 2,\n      );\n    }\n  });\n}\n","import { Color } from './Color';\n\nexport class PlayerSprite {\n  private readonly template = new Image();\n  private readonly colors = new Map<string, HTMLCanvasElement>();\n  isReady = false;\n\n  get width() {\n    return this.template.width;\n  }\n\n  get height() {\n    return this.template.height;\n  }\n\n  constructor(src: string) {\n    this.template.src = src;\n    this.template.onload = () => (this.isReady = true);\n  }\n\n  getColor(color: Color) {\n    if (!this.isReady) {\n      return this.template;\n    }\n\n    const hash = color.rgb;\n\n    if (this.colors.has(hash)) {\n      return this.colors.get(hash)!;\n    }\n\n    const result = this.paintTemplate(color);\n    this.colors.set(hash, result);\n    return result;\n  }\n\n  private paintTemplate(color: Color) {\n    const dark = color.shade(0.5);\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d')!;\n    const { width, height } = this.template;\n\n    canvas.width = width;\n    canvas.height = height;\n    context.drawImage(this.template, 0, 0);\n\n    const image = context.getImageData(0, 0, width, height);\n    const { data } = image;\n\n    for (let i = 0, len = data.length; i < len; i += 4) {\n      const pixel = Color.fromImageData(data, i);\n\n      if (pixel.isReddish) {\n        color.setToImageData(data, i, true);\n      } else if (pixel.isBlueish) {\n        dark.setToImageData(data, i, true);\n      }\n    }\n\n    context.putImageData(image, 0, 0);\n    return canvas;\n  }\n}\n","import { ServerMessageType } from './../../shared/communication/ServerMessage';\nimport { JsonSocket } from '@amatiasq/json-socket';\nimport { ClientMessage } from '../../shared/communication/ClientMessage';\nimport { ServerMessage } from '../../shared/communication/ServerMessage';\n\nexport class ClientSocket extends JsonSocket<ServerMessage, ClientMessage> {\n  readonly listeners;\n\n  constructor(uri: string) {\n    super(uri);\n\n    this.listeners = new Map<ServerMessageType, Listener[]>();\n    this.onMessage(e => this.processMessagePotato(e));\n  }\n\n  onMessageType<T extends ServerMessageType>(\n    type: T,\n    listener: (message: TypedMessage<T>) => void,\n  ) {\n    if (this.listeners.has(type)) {\n      this.listeners.get(type)!.push(listener as any);\n    } else {\n      this.listeners.set(type, [listener as any]);\n    }\n  }\n\n  private processMessagePotato(message: ServerMessage): void {\n    const listeners = this.listeners.get(message.type);\n\n    console.debug(message.type, message);\n\n    if (listeners) {\n      listeners.forEach(x => x(message));\n    } else {\n      console.log(`Unhandled message: ${message.type}`);\n    }\n  }\n}\n\nexport type Listener = (message: ServerMessage) => void;\n\nexport type TypedMessage<T extends ServerMessageType> = Extract<\n  ServerMessage,\n  { type: T }\n>;\n","import { Player } from '../../shared/models/Player';\nimport { deserializeUser, serializeUser, User } from '../../shared/models/User';\nimport { UserId } from '../../shared/types';\n\nexport class ClientUser implements User {\n  id!: UserId;\n  player!: Player;\n\n  constructor(model: User, readonly isPlayer = false) {\n    deserializeUser(this, model);\n  }\n\n  toJSON() {\n    return serializeUser(this);\n  }\n}\n","import { UserId } from '../types';\nimport {\n  createPlayer,\n  deserializePlayer,\n  Player,\n  serializePlayer,\n} from './Player';\n\nexport interface User {\n  id: UserId;\n  player: Player;\n}\n\nexport function serializeUser(model: User) {\n  return { id: model.id, player: serializePlayer(model.player) };\n}\n\nexport function deserializeUser<T extends User>(target: T, model: User) {\n  target.id = model.id;\n\n  target.player = deserializePlayer(\n    target.player || createPlayer(),\n    model.player,\n  );\n\n  return target;\n}\n","import {\n  createEntity,\n  deserializeEntity,\n  Entity,\n  EntityType,\n  serializeEntity,\n} from './Entity';\n\nexport interface Player extends Entity {\n  type: EntityType.Player;\n  isDead: boolean;\n}\n\nexport function createPlayer() {\n  return {\n    ...createEntity(),\n    type: EntityType.Player,\n    isDead: false,\n  };\n}\n\nexport function serializePlayer(player: Player): Player {\n  const { isDead } = player;\n\n  return {\n    ...serializeEntity(player),\n    type: EntityType.Player,\n    isDead,\n  };\n}\n\nexport function deserializePlayer<T extends Player>(\n  target: T,\n  player: Player,\n): T {\n  deserializeEntity(target, player);\n  target.type = EntityType.Player;\n  target.isDead = player.isDead;\n  return target;\n}\n","import { KeyboardActions, KeyCode } from '@amatiasq/keyboard';\n\nimport { Action } from '../../shared/Action';\n\nconst keyboard = new KeyboardActions<Action>();\n\nkeyboard.setDirections(Action.UP, Action.DOWN, Action.LEFT, Action.RIGHT);\nkeyboard.setKeyMap(KeyCode.KeyK, Action.KILL);\n\nexport function watchKeyboard(notify: (actions: Action[]) => void) {\n  keyboard.onChange(actions => notify(actions));\n}\n","export enum Action {\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT,\n  KILL,\n}\n","export function emitterWithChannels<U = string, T = any>() {\n  const channels = new Map<U, Set<(data: T) => void>>();\n  emit.subscribe = subscribe;\n  return emit;\n\n  function emit(channel: U, data: T) {\n    const listeners = channels.get(channel);\n\n    if (listeners) {\n      listeners.forEach(listener => listener(data));\n    }\n  }\n\n  function subscribe(channel: U, listener: (data: T) => void) {\n    const listeners = channels.get(channel) || new Set<(data: T) => void>();\n\n    if (!listener.length) {\n      channels.set(channel, listeners);\n    }\n\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n\nexport type EmitterWithChannels<U = string, T = any> = {\n  (channel: U, data: T): void;\n  subscribe: (channel: U, listener: (data: T) => void) => () => boolean;\n};\n","export function emitter<T = any>() {\n  const listeners = new Set<(data: T) => void>();\n  emit.subscribe = subscribe;\n  return emit;\n\n  function emit(data: T) {\n    listeners.forEach(listener => listener(data));\n  }\n\n  function subscribe(listener: (data: T) => void) {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n\nexport type Emitter<T = any> = {\n  (data: T): void;\n  subscribe: (listener: (data: T) => void) => () => boolean;\n};\n","import { emitter, emitterWithChannels } from '@amatiasq/emitter';\n\nimport { KeyCode } from './KeyCode';\nimport { KeyCodeEvent } from './KeyCodeEvent';\n\ntype Native = (event: KeyboardEvent) => void;\n\nexport class KeyboardController {\n  private readonly pressed = new Set<KeyCode>();\n  private readonly codeToKey = new Map<KeyCode, string>();\n\n  private readonly emitKeyCodeDown = emitterWithChannels<\n    KeyCode,\n    KeyCodeEvent\n  >();\n  private readonly emitKeyCodeUp = emitterWithChannels<KeyCode, KeyCodeEvent>();\n  private readonly emitKeyDown = emitter<KeyCodeEvent>();\n  private readonly emitKeyUp = emitter<KeyCodeEvent>();\n\n  readonly onKeyCodeDown = this.emitKeyCodeDown.subscribe;\n  readonly onKeyCodeUp = this.emitKeyCodeUp.subscribe;\n  readonly onKeyDown = this.emitKeyDown.subscribe;\n  readonly onKeyUp = this.emitKeyUp.subscribe;\n\n  isPaused = false;\n\n  constructor() {\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n\n    document.addEventListener('keydown', this.handleKeyDown as Native);\n    document.addEventListener('keyup', this.handleKeyUp as Native);\n  }\n\n  pause() {\n    this.isPaused = true;\n  }\n\n  resume() {\n    this.isPaused = false;\n  }\n\n  isPressed(key: KeyCode) {\n    return this.pressed.has(key);\n  }\n\n  getUserKey(code: KeyCode) {\n    return this.codeToKey.has(code) ? this.codeToKey.get(code) : null;\n  }\n\n  dispose() {\n    document.removeEventListener('keydown', this.handleKeyDown as Native);\n    document.removeEventListener('keyup', this.handleKeyUp as Native);\n  }\n\n  private handleKeyDown(event: KeyCodeEvent) {\n    this.onEvent(event);\n\n    if (this.isPressed(event.code)) {\n      return;\n    }\n\n    this.pressed.add(event.code);\n\n    if (this.isPaused) {\n      return;\n    }\n\n    this.emitKeyDown(event);\n    this.emitKeyCodeDown(event.code, event);\n  }\n\n  private handleKeyUp(event: KeyCodeEvent) {\n    this.onEvent(event);\n\n    if (!this.isPressed(event.code)) {\n      return;\n    }\n\n    this.pressed.delete(event.code);\n\n    if (this.isPaused) {\n      return;\n    }\n\n    this.emitKeyUp(event);\n    this.emitKeyCodeUp(event.code, event);\n  }\n\n  private onEvent(event: KeyCodeEvent) {\n    this.codeToKey.set(event.code, event.key);\n  }\n}\n","export enum KeyCode {\n  // Control\n  AltLeft = 'AltLeft',\n  AltRight = 'AltRight',\n  Backslash = 'Backslash',\n  Backspace = 'Backspace',\n  CapsLock = 'CapsLock',\n  ControlLeft = 'ControlLeft',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  MetaLeft = 'MetaLeft',\n  MetaRight = 'MetaRight',\n  ShiftLeft = 'ShiftLeft',\n  ShiftRight = 'ShiftRight',\n  Tab = 'Tab',\n\n  // Arrows\n  ArrowDown = 'ArrowDown',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  ArrowUp = 'ArrowUp',\n\n  // Special chars\n  Backquote = 'Backquote',\n  BracketLeft = 'BracketLeft',\n  BracketRight = 'BracketRight',\n  Comma = 'Comma',\n  Equal = 'Equal',\n  IntlBackslash = 'IntlBackslash',\n  Minus = 'Minus',\n  Period = 'Period',\n  Quote = 'Quote',\n  Semicolon = 'Semicolon',\n  Slash = 'Slash',\n  Space = 'Space',\n\n  // Function\n  F1 = 'F1',\n  F2 = 'F2',\n  F3 = 'F3',\n  F4 = 'F4',\n  F5 = 'F5',\n  F6 = 'F6',\n  F7 = 'F7',\n  F8 = 'F8',\n\n  // Digits\n  Digit0 = 'Digit0',\n  Digit1 = 'Digit1',\n  Digit2 = 'Digit2',\n  Digit3 = 'Digit3',\n  Digit4 = 'Digit4',\n  Digit5 = 'Digit5',\n  Digit6 = 'Digit6',\n  Digit7 = 'Digit7',\n  Digit8 = 'Digit8',\n  Digit9 = 'Digit9',\n\n  // Keys\n  KeyA = 'KeyA',\n  KeyB = 'KeyB',\n  KeyC = 'KeyC',\n  KeyD = 'KeyD',\n  KeyE = 'KeyE',\n  KeyF = 'KeyF',\n  KeyG = 'KeyG',\n  KeyH = 'KeyH',\n  KeyI = 'KeyI',\n  KeyJ = 'KeyJ',\n  KeyK = 'KeyK',\n  KeyL = 'KeyL',\n  KeyM = 'KeyM',\n  KeyN = 'KeyN',\n  KeyO = 'KeyO',\n  KeyP = 'KeyP',\n  KeyQ = 'KeyQ',\n  KeyR = 'KeyR',\n  KeyS = 'KeyS',\n  KeyT = 'KeyT',\n  KeyU = 'KeyU',\n  KeyV = 'KeyV',\n  KeyW = 'KeyW',\n  KeyX = 'KeyX',\n  KeyY = 'KeyY',\n  KeyZ = 'KeyZ',\n}\n","import { emitter, emitterWithChannels } from '@amatiasq/emitter';\n\nimport { KeyboardController } from './KeyboardController';\nimport { KeyCode } from './KeyCode';\nimport { KeyCodeEvent } from './KeyCodeEvent';\n\ntype EnumDeclaration = number | string;\n\nexport class KeyboardActions<T extends EnumDeclaration> {\n  private readonly keyboard = new KeyboardController();\n  private readonly keymap: { [id: string]: T } = {};\n  private readonly actions = new Set<T>();\n  private readonly subscriptions: (() => boolean)[];\n\n  private readonly emitChange = emitter<T[]>();\n  private readonly emitActivate = emitterWithChannels<T, void>();\n  private readonly emitDeactivate = emitterWithChannels<T, void>();\n\n  readonly onChange = this.emitChange.subscribe;\n  readonly onActivate = this.emitActivate.subscribe;\n  readonly onDeactivate = this.emitDeactivate.subscribe;\n\n  get isPaused() {\n    return this.keyboard.isPaused;\n  }\n\n  constructor() {\n    this.subscriptions = [\n      this.keyboard.onKeyDown(this.handleKeyDown),\n      this.keyboard.onKeyUp(this.handleKeyUp),\n    ];\n  }\n\n  // Composition\n\n  pause() {\n    this.keyboard.pause();\n  }\n\n  resume() {\n    this.keyboard.resume();\n  }\n\n  getUserKey(code: KeyCode) {\n    this.keyboard.getUserKey(code);\n  }\n\n  // Features\n\n  setKeyMap(key: KeyCode, action: T) {\n    this.keymap[key] = action;\n  }\n\n  isActive(action: T) {\n    return this.actions.has(action);\n  }\n\n  dispose() {\n    this.subscriptions.forEach(x => x());\n    this.keyboard.dispose();\n  }\n\n  // Helpers\n\n  setDirections(up: T, down: T, left: T, right: T) {\n    this.setArrows(up, down, left, right);\n    this.setWSAD(up, down, left, right);\n  }\n\n  setArrows(up: T, down: T, left: T, right: T) {\n    this.keymap[KeyCode.ArrowUp] = up;\n    this.keymap[KeyCode.ArrowDown] = down;\n    this.keymap[KeyCode.ArrowLeft] = left;\n    this.keymap[KeyCode.ArrowRight] = right;\n  }\n\n  setWSAD(up: T, down: T, left: T, right: T) {\n    this.keymap[KeyCode.KeyW] = up;\n    this.keymap[KeyCode.KeyS] = down;\n    this.keymap[KeyCode.KeyA] = left;\n    this.keymap[KeyCode.KeyD] = right;\n  }\n\n  // Internals\n\n  private getActionFor(code: KeyCode) {\n    if (!KeyCode[code]) {\n      console.log(`Missing key code: ${code}`);\n    }\n\n    return this.keymap[code];\n  }\n\n  private readonly handleKeyDown = this.handle(action => {\n    if (this.actions.has(action)) {\n      return;\n    }\n\n    this.actions.add(action);\n    this.emitActivate(action);\n    this.emitChange(Array.from(this.actions));\n  });\n\n  private readonly handleKeyUp = this.handle(action => {\n    if (!this.actions.has(action)) {\n      return;\n    }\n\n    this.actions.delete(action);\n    this.emitDeactivate(action);\n    this.emitChange(Array.from(this.actions));\n  });\n\n  private handle(operation: (action: T) => void) {\n    return (event: KeyCodeEvent) => {\n      const action = this.getActionFor(event.code);\n\n      if (action != null) {\n        operation(action);\n      }\n    };\n  }\n}\n","export function emitter<T = any>() {\n  const listeners = new Set<(data: T) => void>();\n  subscribe.emit = emit;\n  return subscribe;\n\n  function emit(data: T) {\n    listeners.forEach(listener => listener(data));\n  }\n\n  function subscribe(listener: (data: T) => void) {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n","import { emitter } from '@amatiasq/emitter';\n\nconst DEFAULT_RECONNECTION_DELAY = 100;\nconst MAX_RECONNECT_ATTEMPTS = 14;\n\nexport class JsonSocket<TInput, TOutput> {\n  RECONNECTION_DELAY = DEFAULT_RECONNECTION_DELAY;\n  MAX_RECONNECT_ATTEMPTS = MAX_RECONNECT_ATTEMPTS;\n\n  private reconnectionDelay = DEFAULT_RECONNECTION_DELAY;\n  private reconnectAttempts = 0;\n  private disconnectedAt = new Date();\n  private isReconnecting = false;\n  private isFirstConnection = true;\n\n  private ws = this.init();\n\n  readonly onOpen = emitter<JsonSocket<TInput, TOutput>>();\n  readonly onMessage = emitter<TInput>();\n  readonly onReconnect = emitter<Date>();\n\n  get isConnected() {\n    return !this.isFirstConnection && !this.isReconnecting;\n  }\n\n  constructor(public readonly uri: string) {}\n\n  private init() {\n    const socket = new WebSocket(this.uri);\n\n    socket.onopen = () => this.connectionOpen();\n    socket.onmessage = e => this.processMessage(e);\n    socket.onerror = () => this.connectionLost();\n    socket.onclose = () => this.connectionLost();\n\n    return socket;\n  }\n\n  send(value: TOutput) {\n    this.ws.send(JSON.stringify(value));\n  }\n\n  private processMessage(event: MessageEvent<any>) {\n    let message: TInput;\n\n    try {\n      message = JSON.parse(event.data) as TInput;\n    } catch (error) {\n      console.error('Invalid JSON', event.data);\n      return;\n    }\n\n    this.onMessage.emit(message);\n  }\n\n  private connectionOpen() {\n    this.reconnectionDelay = this.RECONNECTION_DELAY;\n    this.reconnectAttempts = 0;\n    this.isReconnecting = false;\n\n    if (this.isFirstConnection) {\n      this.isFirstConnection = false;\n      this.onOpen.emit(this);\n    } else {\n      this.onReconnect.emit(this.disconnectedAt);\n    }\n  }\n\n  private connectionLost() {\n    if (this.isReconnecting) {\n      return;\n    }\n\n    if (this.reconnectAttempts > this.MAX_RECONNECT_ATTEMPTS) {\n      return console.error(\n        `Websocket aborted after ${this.reconnectAttempts} attempts`,\n      );\n    }\n\n    if (this.reconnectAttempts === 0) {\n      this.isReconnecting = true;\n      this.disconnectedAt = new Date();\n    }\n\n    const message = `Socket closed. Waiting ${this.reconnectionDelay / 1000}s`;\n    const reconnecting = 'Reconnecting...';\n    const singleLine = this.reconnectAttempts < 1000;\n\n    console.debug(`${message} ${singleLine ? reconnecting : ''}`);\n\n    setTimeout(() => {\n      if (!singleLine) {\n        console.debug(reconnecting);\n      }\n\n      this.reconnectionDelay *= 2;\n      this.reconnectAttempts++;\n      this.ws = this.init();\n    }, this.reconnectionDelay);\n  }\n\n  close() {\n    this.ws.onclose = null;\n    this.ws.close();\n  }\n}\n"],"sourceRoot":""}