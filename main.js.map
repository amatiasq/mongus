{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.ts","webpack:///../shared/communication/ClientMessage.ts","webpack:///../shared/communication/ServerMessage.ts","webpack:///./src/canvas.ts","webpack:///./src/Socket.ts","webpack:///./src/User.ts","webpack:///../shared/SerializedUser.ts","webpack:///./src/interactions.ts","webpack:///../shared/Action.ts","webpack:///./node_modules/@amatiasq/keyboard/node_modules/@amatiasq/emitter/emitterWithChannels.ts","webpack:///./node_modules/@amatiasq/keyboard/node_modules/@amatiasq/emitter/emitter.ts","webpack:///./node_modules/@amatiasq/keyboard/KeyboardController.ts","webpack:///./node_modules/@amatiasq/keyboard/KeyCode.ts","webpack:///./node_modules/@amatiasq/keyboard/KeyboardActions.ts","webpack:///./node_modules/@amatiasq/emitter/emitter.ts","webpack:///./node_modules/@amatiasq/json-socket/JsonSocket.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","socket","Socket","uuid","Math","random","Date","now","users","onUserListChanged","console","log","watchKeyboard","actions","send","type","ClientMessageType","USER_ACTIONS","Array","from","requestAnimationFrame","self","render","onOpen","LOGIN","onReconnect","RECONNECT","onMessageType","ServerMessageType","LOGIN_SUCCESS","data","map","x","User","id","USER_CONNECTED","push","user","USER_DISCONNECTED","index","findIndex","splice","GAME_STEP","window","onbeforeunload","LOGOUT","canvas","document","querySelector","context","getContext","player","Image","fullscreen","width","innerWidth","height","innerHeight","src","onresize","clearRect","fillStyle","isPlayer","textAlign","fillText","position","y","drawImage","JsonSocket","uri","super","this","listeners","Map","onMessage","e","processMessagePotato","listener","has","set","message","debug","forEach","serializeUser","keyboard","KeyboardActions","setDirections","Action","UP","DOWN","LEFT","RIGHT","notify","onChange","emitterWithChannels","channels","emit","subscribe","channel","Set","length","add","delete","emitter","pressed","codeToKey","emitKeyCodeDown","emitKeyCodeUp","emitKeyDown","emitKeyUp","onKeyCodeDown","onKeyCodeUp","onKeyDown","onKeyUp","isPaused","handleKeyDown","handleKeyUp","addEventListener","code","removeEventListener","event","onEvent","isPressed","KeyCode","keymap","emitChange","emitActivate","emitDeactivate","onActivate","onDeactivate","handle","action","subscriptions","pause","resume","getUserKey","dispose","up","down","left","right","setArrows","setWSAD","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","KeyW","KeyS","KeyA","KeyD","operation","getActionFor","RECONNECTION_DELAY","MAX_RECONNECT_ATTEMPTS","reconnectionDelay","reconnectAttempts","disconnectedAt","isReconnecting","isFirstConnection","ws","init","WebSocket","onopen","connectionOpen","onmessage","processMessage","onerror","connectionLost","onclose","JSON","stringify","parse","error","reconnecting","singleLine","setTimeout","close"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EACAC,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gFClFrD,aACA,OAEA,OACA,OACA,OACA,OAGMC,EAAS,IAAI,EAAAC,OAAO,8BACpBC,EAAO,GAAGC,KAAKC,WAAWC,KAAKC,QAAQH,KAAKC,oBAClD,IAAIG,EAAgB,GAsDpB,SAASC,IACPC,QAAQC,IAAI,QAASH,GArDvB,EAAAI,cAAcC,GACZZ,EAAOa,KAAK,CACVC,KAAM,EAAAC,kBAAkBC,aACxBJ,QAASK,MAAMC,KAAKN,MAIxBO,uBAAsB,SAASC,IAC7B,EAAAC,OAAOd,GACPY,sBAAsBC,MAGxBpB,EAAOsB,OAAO,IACZtB,EAAOa,KAAK,CACVC,KAAM,EAAAC,kBAAkBQ,MACxBrB,UAIJF,EAAOwB,YAAY,IACjBxB,EAAOa,KAAK,CACVC,KAAM,EAAAC,kBAAkBU,UACxBvB,UAIJF,EAAO0B,cAAc,EAAAC,kBAAkBC,cAAeC,IACpDtB,EAAQsB,EAAKtB,MAAMuB,IAAIC,GAAK,IAAI,EAAAC,KAAKD,EAAGA,EAAEE,KAAO/B,IACjDM,MAGFR,EAAO0B,cAAc,EAAAC,kBAAkBO,eAAgBL,IACrDtB,EAAM4B,KAAK,IAAI,EAAAH,KAAKH,EAAKO,OACzB5B,MAGFR,EAAO0B,cAAc,EAAAC,kBAAkBU,kBAAmBR,IACxD,MAAMS,EAAQ/B,EAAMgC,UAAUR,GAAKA,EAAEE,KAAOJ,EAAK3B,OAClC,IAAXoC,IACF/B,EAAMiC,OAAOF,EAAO,GACpB9B,OAIJR,EAAO0B,cAAc,EAAAC,kBAAkBc,UAAWZ,IAChDtB,EAAQsB,EAAKtB,MAAMuB,IAAIC,GAAK,IAAI,EAAAC,KAAKD,EAAGA,EAAEE,KAAO/B,MAGnDwC,OAAOC,eAAiB,KACtB3C,EAAOa,KAAK,CAAEC,KAAM,EAAAC,kBAAkB6B,W,yGCzDxC,SAAY7B,GACV,gBACA,gBACA,kBACA,wBACA,mCALF,CAAY,EAAAA,oBAAA,EAAAA,kBAAiB,M,yGCF7B,SAAYY,GACV,gBACA,wBACA,gCACA,kCACA,wCACA,wCACA,oCACA,6BARF,CAAY,EAAAA,oBAAA,EAAAA,kBAAiB,M,8FCD7B,MAAMkB,EAASC,SAASC,cAAc,UAChCC,EAAUH,EAAOI,WAAW,MAC5BC,EAAS,IAAIC,MAOnB,SAASC,IACPP,EAAOQ,MAAQX,OAAOY,WACtBT,EAAOU,OAASb,OAAOc,YAPzBN,EAAOO,IAAM,4BAEbL,IACAV,OAAOgB,SAAWN,EAOlB,kBAAuB7C,GACrByC,EAAQW,UAAU,EAAG,EAAGd,EAAOQ,MAAOR,EAAOU,QAE7ChD,EAAMuB,IAAIM,IACRY,EAAQY,UAAYxB,EAAKyB,SAAW,QAAU,MAC9Cb,EAAQc,UAAY,SAEpBd,EAAQe,SACN3B,EAAKH,GACLG,EAAK4B,SAASjC,EACdK,EAAK4B,SAASC,EAAI,GAAKf,EAAOK,OAAS,GAGzCP,EAAQkB,UACNhB,EACAd,EAAK4B,SAASjC,EAAImB,EAAOG,MAAQ,EACjCjB,EAAK4B,SAASC,EAAIf,EAAOK,OAAS,O,8FC/BxC,cAIA,MAAatD,UAAe,EAAAkE,WAG1B,YAAYC,GACVC,MAAMD,GAENE,KAAKC,UAAY,IAAIC,IACrBF,KAAKG,UAAUC,GAAKJ,KAAKK,qBAAqBD,IAGhD,cACE5D,EACA8D,GAEIN,KAAKC,UAAUM,IAAI/D,GACrBwD,KAAKC,UAAU1F,IAAIiC,GAAOqB,KAAKyC,GAE/BN,KAAKC,UAAUO,IAAIhE,EAAM,CAAC8D,IAItB,qBAAqBG,GAC3B,MAAMR,EAAYD,KAAKC,UAAU1F,IAAIkG,EAAQjE,MAE7CL,QAAQuE,MAAMD,EAAQjE,KAAMiE,GAExBR,EACFA,EAAUU,QAAQlD,GAAKA,EAAEgD,IAEzBtE,QAAQC,IAAI,sBAAsBqE,EAAQjE,OA7BhD,Y,4FCJA,aAEA,aAIE,aAAY,GAAEmB,EAAE,SAAE+B,GAAqCH,GAAW,GAAX,KAAAA,WAFvD,KAAAG,SAAW,CAAEjC,EAAG,EAAGkC,EAAG,GAGpBK,KAAKrC,GAAKA,EACVqC,KAAKN,SAAWA,EAGlB,SACE,OAAO,EAAAkB,cAAcZ,S,qGCJzB,0BAA8B,GAAErC,EAAE,SAAE+B,IAClC,MAAO,CAAE/B,KAAI+B,c,qGCVf,aAEA,OAEMmB,EAAW,IAAI,EAAAC,gBAErBD,EAASE,cAAc,EAAAC,OAAOC,GAAI,EAAAD,OAAOE,KAAM,EAAAF,OAAOG,KAAM,EAAAH,OAAOI,OAEnE,yBAA8BC,GAC5BR,EAASS,SAAShF,GAAW+E,EAAO/E,M,8FCTtC,SAAY0E,GACV,eACA,mBACA,mBACA,qBAJF,CAAY,EAAAA,SAAA,EAAAA,OAAM,M,6BCAX,SAASO,IACd,MAAMC,EAAW,IAAItB,IAErB,OADAuB,EAAKC,UAWL,SAAmBC,EAAYrB,GAC7B,MAAML,EAAYuB,EAASjH,IAAIoH,IAAY,IAAIC,IAE1CtB,EAASuB,QACZL,EAAShB,IAAImB,EAAS1B,GAIxB,OADAA,EAAU6B,IAAIxB,GACP,IAAML,EAAU8B,OAAOzB,IAlBzBmB,EAEP,SAASA,EAAKE,EAAYpE,GACxB,MAAM0C,EAAYuB,EAASjH,IAAIoH,GAE3B1B,GACFA,EAAUU,QAAQL,GAAYA,EAAS/C,KCTtC,SAASyE,IACd,MAAM/B,EAAY,IAAI2B,IAEtB,OADAH,EAAKC,UAOL,SAAmBpB,GAEjB,OADAL,EAAU6B,IAAIxB,GACP,IAAML,EAAU8B,OAAOzB,IARzBmB,EAEP,SAASA,EAAKlE,GACZ0C,EAAUU,QAAQL,GAAYA,EAAS/C,K,kJCCpC,MAAM,EAmBX,cAlBiB,KAAA0E,QAAU,IAAIL,IACd,KAAAM,UAAY,IAAIhC,IAEhB,KAAAiC,gBAAkBZ,IAIlB,KAAAa,cAAgBb,IAChB,KAAAc,YAAcL,IACd,KAAAM,UAAYN,IAEpB,KAAAO,cAAgBvC,KAAKmC,gBAAgBT,UACrC,KAAAc,YAAcxC,KAAKoC,cAAcV,UACjC,KAAAe,UAAYzC,KAAKqC,YAAYX,UAC7B,KAAAgB,QAAU1C,KAAKsC,UAAUZ,UAElC,KAAAiB,UAAW,EAGT3C,KAAK4C,cAAgB5C,KAAK4C,cAAc1H,KAAK8E,MAC7CA,KAAK6C,YAAc7C,KAAK6C,YAAY3H,KAAK8E,MAEzCxB,SAASsE,iBAAiB,UAAW9C,KAAK4C,eAC1CpE,SAASsE,iBAAiB,QAAS9C,KAAK6C,aAG1C,QACE7C,KAAK2C,UAAW,EAGlB,SACE3C,KAAK2C,UAAW,EAGlB,UAAU1H,GACR,OAAO+E,KAAKiC,QAAQ1B,IAAItF,GAG1B,WAAW8H,GACT,OAAO/C,KAAKkC,UAAU3B,IAAIwC,GAAQ/C,KAAKkC,UAAU3H,IAAIwI,GAAQ,KAG/D,UACEvE,SAASwE,oBAAoB,UAAWhD,KAAK4C,eAC7CpE,SAASwE,oBAAoB,QAAShD,KAAK6C,aAGrC,cAAcI,GACpBjD,KAAKkD,QAAQD,GAETjD,KAAKmD,UAAUF,EAAMF,QAIzB/C,KAAKiC,QAAQH,IAAImB,EAAMF,MAEnB/C,KAAK2C,WAIT3C,KAAKqC,YAAYY,GACjBjD,KAAKmC,gBAAgBc,EAAMF,KAAME,KAG3B,YAAYA,GAClBjD,KAAKkD,QAAQD,GAERjD,KAAKmD,UAAUF,EAAMF,QAI1B/C,KAAKiC,QAAQF,OAAOkB,EAAMF,MAEtB/C,KAAK2C,WAIT3C,KAAKsC,UAAUW,GACfjD,KAAKoC,cAAca,EAAMF,KAAME,KAGzB,QAAQA,GACdjD,KAAKkC,UAAU1B,IAAIyC,EAAMF,KAAME,EAAMhI,MC1FzC,IAAYmI,GAAZ,SAAYA,GAEV,oBACA,sBACA,wBACA,wBACA,sBACA,4BACA,gBACA,kBACA,sBACA,wBACA,wBACA,0BACA,YAGA,wBACA,wBACA,0BACA,oBAGA,wBACA,4BACA,8BACA,gBACA,gBACA,gCACA,gBACA,kBACA,gBACA,wBACA,gBACA,gBAGA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAGA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBAGA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cApFF,CAAYA,MAAO,KCQZ,MAAM,EAkBX,cAjBiB,KAAAvC,SAAW,IAAI,EACf,KAAAwC,OAA8B,GAC9B,KAAA/G,QAAU,IAAIsF,IAGd,KAAA0B,WAAatB,IACb,KAAAuB,aAAehC,IACf,KAAAiC,eAAiBjC,IAEzB,KAAAD,SAAWtB,KAAKsD,WAAW5B,UAC3B,KAAA+B,WAAazD,KAAKuD,aAAa7B,UAC/B,KAAAgC,aAAe1D,KAAKwD,eAAe9B,UAyE3B,KAAAkB,cAAgB5C,KAAK2D,OAAOC,IACvC5D,KAAK1D,QAAQiE,IAAIqD,KAIrB5D,KAAK1D,QAAQwF,IAAI8B,GACjB5D,KAAKuD,aAAaK,GAClB5D,KAAKsD,WAAW3G,MAAMC,KAAKoD,KAAK1D,aAGjB,KAAAuG,YAAc7C,KAAK2D,OAAOC,IACpC5D,KAAK1D,QAAQiE,IAAIqD,KAItB5D,KAAK1D,QAAQyF,OAAO6B,GACpB5D,KAAKwD,eAAeI,GACpB5D,KAAKsD,WAAW3G,MAAMC,KAAKoD,KAAK1D,aAnFhC0D,KAAK6D,cAAgB,CACnB7D,KAAKa,SAAS4B,UAAUzC,KAAK4C,eAC7B5C,KAAKa,SAAS6B,QAAQ1C,KAAK6C,cAP/B,eACE,OAAO7C,KAAKa,SAAS8B,SAYvB,QACE3C,KAAKa,SAASiD,QAGhB,SACE9D,KAAKa,SAASkD,SAGhB,WAAWhB,GACT/C,KAAKa,SAASmD,WAAWjB,GAK3B,UAAU9H,EAAc2I,GACtB5D,KAAKqD,OAAOpI,GAAO2I,EAGrB,SAASA,GACP,OAAO5D,KAAK1D,QAAQiE,IAAIqD,GAG1B,UACE5D,KAAK6D,cAAclD,QAAQlD,GAAKA,KAChCuC,KAAKa,SAASoD,UAKhB,cAAcC,EAAOC,EAASC,EAASC,GACrCrE,KAAKsE,UAAUJ,EAAIC,EAAMC,EAAMC,GAC/BrE,KAAKuE,QAAQL,EAAIC,EAAMC,EAAMC,GAG/B,UAAUH,EAAOC,EAASC,EAASC,GACjCrE,KAAKqD,OAAOD,EAAQoB,SAAWN,EAC/BlE,KAAKqD,OAAOD,EAAQqB,WAAaN,EACjCnE,KAAKqD,OAAOD,EAAQsB,WAAaN,EACjCpE,KAAKqD,OAAOD,EAAQuB,YAAcN,EAGpC,QAAQH,EAAOC,EAASC,EAASC,GAC/BrE,KAAKqD,OAAOD,EAAQwB,MAAQV,EAC5BlE,KAAKqD,OAAOD,EAAQyB,MAAQV,EAC5BnE,KAAKqD,OAAOD,EAAQ0B,MAAQV,EAC5BpE,KAAKqD,OAAOD,EAAQ2B,MAAQV,EAKtB,aAAatB,GAKnB,OAJKK,EAAQL,IACX5G,QAAQC,IAAI,qBAAqB2G,GAG5B/C,KAAKqD,OAAON,GAuBb,OAAOiC,GACb,OAAQ/B,IACN,MAAMW,EAAS5D,KAAKiF,aAAahC,EAAMF,MAEzB,MAAVa,GACFoB,EAAUpB,O,6BCtHX,SAAS5B,IACd,MAAM/B,EAAY,IAAI2B,IAEtB,OADAF,EAAUD,KAGV,SAAclE,GACZ0C,EAAUU,QAAQL,GAAYA,EAAS/C,KAHlCmE,EAMP,SAASA,EAAUpB,GAEjB,OADAL,EAAU6B,IAAIxB,GACP,IAAML,EAAU8B,OAAOzB,I,kDCN3B,MAAM,EAoBX,YAA4BR,GAAA,KAAAA,MAnB5B,KAAAoF,mBAJiC,IAKjC,KAAAC,uBAJ6B,GAMrB,KAAAC,kBAPyB,IAQzB,KAAAC,kBAAoB,EACpB,KAAAC,eAAiB,IAAIvJ,KACrB,KAAAwJ,gBAAiB,EACjB,KAAAC,mBAAoB,EAEpB,KAAAC,GAAKzF,KAAK0F,OAET,KAAA1I,OAASgF,IACT,KAAA7B,UAAY6B,IACZ,KAAA9E,YAAc8E,IAEvB,kBACE,OAAQhC,KAAKwF,oBAAsBxF,KAAKuF,eAKlC,OACN,MAAM7J,EAAS,IAAIiK,UAAU3F,KAAKF,KAOlC,OALApE,EAAOkK,OAAS,IAAM5F,KAAK6F,iBAC3BnK,EAAOoK,UAAY1F,GAAKJ,KAAK+F,eAAe3F,GAC5C1E,EAAOsK,QAAU,IAAMhG,KAAKiG,iBAC5BvK,EAAOwK,QAAU,IAAMlG,KAAKiG,iBAErBvK,EAGT,KAAKf,GACHqF,KAAKyF,GAAGlJ,KAAK4J,KAAKC,UAAUzL,IAGtB,eAAesI,GACrB,IAAIxC,EAEJ,IACEA,EAAU0F,KAAKE,MAAMpD,EAAM1F,MAC3B,MAAO+I,GAEP,YADAnK,QAAQmK,MAAM,eAAgBrD,EAAM1F,MAItCyC,KAAKG,UAAUsB,KAAKhB,GAGd,iBACNT,KAAKoF,kBAAoBpF,KAAKkF,mBAC9BlF,KAAKqF,kBAAoB,EACzBrF,KAAKuF,gBAAiB,EAElBvF,KAAKwF,mBACPxF,KAAKwF,mBAAoB,EACzBxF,KAAKhD,OAAOyE,KAAKzB,OAEjBA,KAAK9C,YAAYuE,KAAKzB,KAAKsF,gBAIvB,iBACN,GAAItF,KAAKuF,eACP,OAGF,GAAIvF,KAAKqF,kBAAoBrF,KAAKmF,uBAChC,OAAOhJ,QAAQmK,MACb,2BAA2BtG,KAAKqF,8BAIL,IAA3BrF,KAAKqF,oBACPrF,KAAKuF,gBAAiB,EACtBvF,KAAKsF,eAAiB,IAAIvJ,MAG5B,MAAM0E,EAAU,0BAA0BT,KAAKoF,kBAAoB,OAC7DmB,EAAe,kBACfC,EAAaxG,KAAKqF,kBAAoB,IAE5ClJ,QAAQuE,MAAM,GAAGD,KAAW+F,EAAaD,EAAe,MAExDE,WAAW,KACJD,GACHrK,QAAQuE,MAAM6F,GAGhBvG,KAAKoF,mBAAqB,EAC1BpF,KAAKqF,oBACLrF,KAAKyF,GAAKzF,KAAK0F,QACd1F,KAAKoF,mBAGV,QACEpF,KAAKyF,GAAGS,QAAU,KAClBlG,KAAKyF,GAAGiB","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { ClientMessageType } from '../../shared/communication/ClientMessage';\nimport { ServerMessageType } from '../../shared/communication/ServerMessage';\nimport { UserId } from '../../shared/types';\nimport { render } from './canvas';\nimport { Socket } from './Socket';\nimport { User } from './User';\nimport { watchKeyboard } from './interactions';\n\n// const socket = new Socket('ws://localhost:17965');\nconst socket = new Socket('wss://amongus.amatiasq.com');\nconst uuid = `${Math.random()}${Date.now()}${Math.random()}©AMONGUS®` as UserId;\nlet users: User[] = [];\n\nwatchKeyboard(actions =>\n  socket.send({\n    type: ClientMessageType.USER_ACTIONS,\n    actions: Array.from(actions),\n  }),\n);\n\nrequestAnimationFrame(function self() {\n  render(users);\n  requestAnimationFrame(self);\n});\n\nsocket.onOpen(() =>\n  socket.send({\n    type: ClientMessageType.LOGIN,\n    uuid,\n  }),\n);\n\nsocket.onReconnect(() =>\n  socket.send({\n    type: ClientMessageType.RECONNECT,\n    uuid,\n  }),\n);\n\nsocket.onMessageType(ServerMessageType.LOGIN_SUCCESS, data => {\n  users = data.users.map(x => new User(x, x.id === uuid));\n  onUserListChanged();\n});\n\nsocket.onMessageType(ServerMessageType.USER_CONNECTED, data => {\n  users.push(new User(data.user));\n  onUserListChanged();\n});\n\nsocket.onMessageType(ServerMessageType.USER_DISCONNECTED, data => {\n  const index = users.findIndex(x => x.id === data.uuid);\n  if (index !== -1) {\n    users.splice(index, 1);\n    onUserListChanged();\n  }\n});\n\nsocket.onMessageType(ServerMessageType.GAME_STEP, data => {\n  users = data.users.map(x => new User(x, x.id === uuid));\n});\n\nwindow.onbeforeunload = () => {\n  socket.send({ type: ClientMessageType.LOGOUT });\n};\n\nfunction onUserListChanged() {\n  console.log('users', users);\n}\n","import { RoomMessage } from './RoomMessage';\nimport { UserId, UserName } from '../types';\nimport { ClientToClientMessage } from './ClientToClientMessage';\nimport { Action } from '../Action';\n\nexport enum ClientMessageType {\n  ERROR = 'ERROR',\n  LOGIN = 'LOGIN',\n  LOGOUT = 'LOGOUT',\n  RECONNECT = 'RECONNECT',\n  USER_ACTIONS = 1,\n}\n\ninterface ClientMessage__ERROR {\n  type: ClientMessageType.ERROR;\n  message: string;\n}\n\ninterface ClientMessage__LOGIN {\n  type: ClientMessageType.LOGIN;\n  uuid: UserId;\n}\n\ninterface ClientMessage__RECONNECT {\n  type: ClientMessageType.RECONNECT;\n  uuid: UserId;\n}\n\ninterface ClientMessage__LOGOUT {\n  type: ClientMessageType.LOGOUT;\n}\n\ninterface ClientMessage__USER_ACTIONS {\n  type: ClientMessageType.USER_ACTIONS;\n  actions: Action[];\n}\n\n// interface ClientMessage__SEND_TO_ROOM {\n//   type: ClientMessageType.SEND_TO_ROOM;\n//   message: RoomMessage;\n// }\n\n// interface ClientMessage__SEND_TO_USER {\n//   type: ClientMessageType.SEND_TO_USER;\n//   to: UserId;\n//   message: ClientToClientMessage;\n// }\n\nexport type ClientMessage =\n  | ClientMessage__ERROR\n  | ClientMessage__LOGIN\n  | ClientMessage__RECONNECT\n  | ClientMessage__LOGOUT\n  | ClientMessage__USER_ACTIONS;\n// | ClientMessage__SEND_TO_ROOM\n// | ClientMessage__SEND_TO_USER;\n","import { SerializedUser } from '../SerializedUser';\nimport { UserId } from '../types';\n\nexport enum ServerMessageType {\n  ERROR = 'ERROR',\n  HANDSHAKE = 'HANDSHAKE',\n  LOGIN_SUCCESS = 'LOGIN_SUCCESS',\n  USER_CONNECTED = 'USER_CONNECTED',\n  USER_DISCONNECTED = 'USER_DISCONNECTED',\n  MESSAGE_FROM_USER = 'MESSAGE_FROM_USER',\n  MESSAGE_TO_ROOM = 'MESSAGE_TO_ROOM',\n  GAME_STEP = 1,\n}\n\ninterface ServerMessage__ERROR {\n  type: ServerMessageType.ERROR;\n  message: string;\n}\n\ninterface ServerMessage__HANDSHAKE {\n  type: ServerMessageType.HANDSHAKE;\n}\n\ninterface ServerMessage__LOGIN_RESULT__SUCCESS {\n  type: ServerMessageType.LOGIN_SUCCESS;\n  users: SerializedUser[];\n}\n\ninterface ServerMessage__USER_CONNECTED {\n  type: ServerMessageType.USER_CONNECTED;\n  user: SerializedUser;\n}\n\ninterface ServerMessage__USER_DISCONNECTED {\n  type: ServerMessageType.USER_DISCONNECTED;\n  uuid: UserId;\n}\n\ninterface ServerMessage__GAME_STEP {\n  type: ServerMessageType.GAME_STEP;\n  users: SerializedUser[];\n}\n\nexport type ServerMessage =\n  | ServerMessage__ERROR\n  | ServerMessage__HANDSHAKE\n  | ServerMessage__LOGIN_RESULT__SUCCESS\n  | ServerMessage__USER_CONNECTED\n  | ServerMessage__USER_DISCONNECTED\n  | ServerMessage__GAME_STEP;\n","import { User } from './User';\n\nconst canvas = document.querySelector('canvas')!;\nconst context = canvas.getContext('2d')!;\nconst player = new Image();\n\nplayer.src = 'assets/sprites/player.png';\n\nfullscreen();\nwindow.onresize = fullscreen;\n\nfunction fullscreen() {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n}\n\nexport function render(users: User[]) {\n  context.clearRect(0, 0, canvas.width, canvas.height);\n\n  users.map(user => {\n    context.fillStyle = user.isPlayer ? 'green' : 'red';\n    context.textAlign = 'center';\n\n    context.fillText(\n      user.id,\n      user.position.x,\n      user.position.y - 15 - player.height / 2,\n    );\n\n    context.drawImage(\n      player,\n      user.position.x - player.width / 2,\n      user.position.y - player.height / 2,\n    );\n  });\n}\n","import { ServerMessageType } from './../../shared/communication/ServerMessage';\nimport { JsonSocket } from '@amatiasq/json-socket';\nimport { ClientMessage } from '../../shared/communication/ClientMessage';\nimport { ServerMessage } from '../../shared/communication/ServerMessage';\n\nexport class Socket extends JsonSocket<ServerMessage, ClientMessage> {\n  readonly listeners;\n\n  constructor(uri: string) {\n    super(uri);\n\n    this.listeners = new Map<ServerMessageType, Listener[]>();\n    this.onMessage(e => this.processMessagePotato(e));\n  }\n\n  onMessageType<T extends ServerMessageType>(\n    type: T,\n    listener: (message: TypedMessage<T>) => void,\n  ) {\n    if (this.listeners.has(type)) {\n      this.listeners.get(type)!.push(listener as any);\n    } else {\n      this.listeners.set(type, [listener as any]);\n    }\n  }\n\n  private processMessagePotato(message: ServerMessage): void {\n    const listeners = this.listeners.get(message.type);\n\n    console.debug(message.type, message);\n\n    if (listeners) {\n      listeners.forEach(x => x(message));\n    } else {\n      console.log(`Unhandled message: ${message.type}`);\n    }\n  }\n}\n\nexport type Listener = (message: ServerMessage) => void;\n\nexport type TypedMessage<T extends ServerMessageType> = Extract<\n  ServerMessage,\n  { type: T }\n>;\n","import { UserId } from '../../shared/types';\nimport { SerializedUser, serializeUser } from '../../shared/SerializedUser';\n\nexport class User implements SerializedUser {\n  id;\n  position = { x: 0, y: 0 };\n\n  constructor({ id, position }: SerializedUser, readonly isPlayer = false) {\n    this.id = id;\n    this.position = position;\n  }\n\n  toJSON() {\n    return serializeUser(this);\n  }\n}\n","import { Vector } from './Vector';\nimport { UserId, UserName } from './types';\n\nexport interface SerializedUser {\n  id: UserId;\n  // name: UserName;\n  position: Vector;\n}\n\nexport function serializeUser({ id, position }: SerializedUser) {\n  return { id, position };\n}\n","import { KeyboardActions } from '@amatiasq/keyboard';\n\nimport { Action } from '../../shared/Action';\n\nconst keyboard = new KeyboardActions<Action>();\n\nkeyboard.setDirections(Action.UP, Action.DOWN, Action.LEFT, Action.RIGHT);\n\nexport function watchKeyboard(notify: (actions: Action[]) => void) {\n  keyboard.onChange(actions => notify(actions));\n}\n","export enum Action {\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT,\n}\n","export function emitterWithChannels<U = string, T = any>() {\n  const channels = new Map<U, Set<(data: T) => void>>();\n  emit.subscribe = subscribe;\n  return emit;\n\n  function emit(channel: U, data: T) {\n    const listeners = channels.get(channel);\n\n    if (listeners) {\n      listeners.forEach(listener => listener(data));\n    }\n  }\n\n  function subscribe(channel: U, listener: (data: T) => void) {\n    const listeners = channels.get(channel) || new Set<(data: T) => void>();\n\n    if (!listener.length) {\n      channels.set(channel, listeners);\n    }\n\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n\nexport type EmitterWithChannels<U = string, T = any> = {\n  (channel: U, data: T): void;\n  subscribe: (channel: U, listener: (data: T) => void) => () => boolean;\n};\n","export function emitter<T = any>() {\n  const listeners = new Set<(data: T) => void>();\n  emit.subscribe = subscribe;\n  return emit;\n\n  function emit(data: T) {\n    listeners.forEach(listener => listener(data));\n  }\n\n  function subscribe(listener: (data: T) => void) {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n\nexport type Emitter<T = any> = {\n  (data: T): void;\n  subscribe: (listener: (data: T) => void) => () => boolean;\n};\n","import { emitter, emitterWithChannels } from '@amatiasq/emitter';\n\nimport { KeyCode } from './KeyCode';\nimport { KeyCodeEvent } from './KeyCodeEvent';\n\ntype Native = (event: KeyboardEvent) => void;\n\nexport class KeyboardController {\n  private readonly pressed = new Set<KeyCode>();\n  private readonly codeToKey = new Map<KeyCode, string>();\n\n  private readonly emitKeyCodeDown = emitterWithChannels<\n    KeyCode,\n    KeyCodeEvent\n  >();\n  private readonly emitKeyCodeUp = emitterWithChannels<KeyCode, KeyCodeEvent>();\n  private readonly emitKeyDown = emitter<KeyCodeEvent>();\n  private readonly emitKeyUp = emitter<KeyCodeEvent>();\n\n  readonly onKeyCodeDown = this.emitKeyCodeDown.subscribe;\n  readonly onKeyCodeUp = this.emitKeyCodeUp.subscribe;\n  readonly onKeyDown = this.emitKeyDown.subscribe;\n  readonly onKeyUp = this.emitKeyUp.subscribe;\n\n  isPaused = false;\n\n  constructor() {\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n\n    document.addEventListener('keydown', this.handleKeyDown as Native);\n    document.addEventListener('keyup', this.handleKeyUp as Native);\n  }\n\n  pause() {\n    this.isPaused = true;\n  }\n\n  resume() {\n    this.isPaused = false;\n  }\n\n  isPressed(key: KeyCode) {\n    return this.pressed.has(key);\n  }\n\n  getUserKey(code: KeyCode) {\n    return this.codeToKey.has(code) ? this.codeToKey.get(code) : null;\n  }\n\n  dispose() {\n    document.removeEventListener('keydown', this.handleKeyDown as Native);\n    document.removeEventListener('keyup', this.handleKeyUp as Native);\n  }\n\n  private handleKeyDown(event: KeyCodeEvent) {\n    this.onEvent(event);\n\n    if (this.isPressed(event.code)) {\n      return;\n    }\n\n    this.pressed.add(event.code);\n\n    if (this.isPaused) {\n      return;\n    }\n\n    this.emitKeyDown(event);\n    this.emitKeyCodeDown(event.code, event);\n  }\n\n  private handleKeyUp(event: KeyCodeEvent) {\n    this.onEvent(event);\n\n    if (!this.isPressed(event.code)) {\n      return;\n    }\n\n    this.pressed.delete(event.code);\n\n    if (this.isPaused) {\n      return;\n    }\n\n    this.emitKeyUp(event);\n    this.emitKeyCodeUp(event.code, event);\n  }\n\n  private onEvent(event: KeyCodeEvent) {\n    this.codeToKey.set(event.code, event.key);\n  }\n}\n","export enum KeyCode {\n  // Control\n  AltLeft = 'AltLeft',\n  AltRight = 'AltRight',\n  Backslash = 'Backslash',\n  Backspace = 'Backspace',\n  CapsLock = 'CapsLock',\n  ControlLeft = 'ControlLeft',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  MetaLeft = 'MetaLeft',\n  MetaRight = 'MetaRight',\n  ShiftLeft = 'ShiftLeft',\n  ShiftRight = 'ShiftRight',\n  Tab = 'Tab',\n\n  // Arrows\n  ArrowDown = 'ArrowDown',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  ArrowUp = 'ArrowUp',\n\n  // Special chars\n  Backquote = 'Backquote',\n  BracketLeft = 'BracketLeft',\n  BracketRight = 'BracketRight',\n  Comma = 'Comma',\n  Equal = 'Equal',\n  IntlBackslash = 'IntlBackslash',\n  Minus = 'Minus',\n  Period = 'Period',\n  Quote = 'Quote',\n  Semicolon = 'Semicolon',\n  Slash = 'Slash',\n  Space = 'Space',\n\n  // Function\n  F1 = 'F1',\n  F2 = 'F2',\n  F3 = 'F3',\n  F4 = 'F4',\n  F5 = 'F5',\n  F6 = 'F6',\n  F7 = 'F7',\n  F8 = 'F8',\n\n  // Digits\n  Digit0 = 'Digit0',\n  Digit1 = 'Digit1',\n  Digit2 = 'Digit2',\n  Digit3 = 'Digit3',\n  Digit4 = 'Digit4',\n  Digit5 = 'Digit5',\n  Digit6 = 'Digit6',\n  Digit7 = 'Digit7',\n  Digit8 = 'Digit8',\n  Digit9 = 'Digit9',\n\n  // Keys\n  KeyA = 'KeyA',\n  KeyB = 'KeyB',\n  KeyC = 'KeyC',\n  KeyD = 'KeyD',\n  KeyE = 'KeyE',\n  KeyF = 'KeyF',\n  KeyG = 'KeyG',\n  KeyH = 'KeyH',\n  KeyI = 'KeyI',\n  KeyJ = 'KeyJ',\n  KeyK = 'KeyK',\n  KeyL = 'KeyL',\n  KeyM = 'KeyM',\n  KeyN = 'KeyN',\n  KeyO = 'KeyO',\n  KeyP = 'KeyP',\n  KeyQ = 'KeyQ',\n  KeyR = 'KeyR',\n  KeyS = 'KeyS',\n  KeyT = 'KeyT',\n  KeyU = 'KeyU',\n  KeyV = 'KeyV',\n  KeyW = 'KeyW',\n  KeyX = 'KeyX',\n  KeyY = 'KeyY',\n  KeyZ = 'KeyZ',\n}\n","import { emitter, emitterWithChannels } from '@amatiasq/emitter';\n\nimport { KeyboardController } from './KeyboardController';\nimport { KeyCode } from './KeyCode';\nimport { KeyCodeEvent } from './KeyCodeEvent';\n\ntype EnumDeclaration = number | string;\n\nexport class KeyboardActions<T extends EnumDeclaration> {\n  private readonly keyboard = new KeyboardController();\n  private readonly keymap: { [id: string]: T } = {};\n  private readonly actions = new Set<T>();\n  private readonly subscriptions: (() => boolean)[];\n\n  private readonly emitChange = emitter<T[]>();\n  private readonly emitActivate = emitterWithChannels<T, void>();\n  private readonly emitDeactivate = emitterWithChannels<T, void>();\n\n  readonly onChange = this.emitChange.subscribe;\n  readonly onActivate = this.emitActivate.subscribe;\n  readonly onDeactivate = this.emitDeactivate.subscribe;\n\n  get isPaused() {\n    return this.keyboard.isPaused;\n  }\n\n  constructor() {\n    this.subscriptions = [\n      this.keyboard.onKeyDown(this.handleKeyDown),\n      this.keyboard.onKeyUp(this.handleKeyUp),\n    ];\n  }\n\n  // Composition\n\n  pause() {\n    this.keyboard.pause();\n  }\n\n  resume() {\n    this.keyboard.resume();\n  }\n\n  getUserKey(code: KeyCode) {\n    this.keyboard.getUserKey(code);\n  }\n\n  // Features\n\n  setKeyMap(key: KeyCode, action: T) {\n    this.keymap[key] = action;\n  }\n\n  isActive(action: T) {\n    return this.actions.has(action);\n  }\n\n  dispose() {\n    this.subscriptions.forEach(x => x());\n    this.keyboard.dispose();\n  }\n\n  // Helpers\n\n  setDirections(up: T, down: T, left: T, right: T) {\n    this.setArrows(up, down, left, right);\n    this.setWSAD(up, down, left, right);\n  }\n\n  setArrows(up: T, down: T, left: T, right: T) {\n    this.keymap[KeyCode.ArrowUp] = up;\n    this.keymap[KeyCode.ArrowDown] = down;\n    this.keymap[KeyCode.ArrowLeft] = left;\n    this.keymap[KeyCode.ArrowRight] = right;\n  }\n\n  setWSAD(up: T, down: T, left: T, right: T) {\n    this.keymap[KeyCode.KeyW] = up;\n    this.keymap[KeyCode.KeyS] = down;\n    this.keymap[KeyCode.KeyA] = left;\n    this.keymap[KeyCode.KeyD] = right;\n  }\n\n  // Internals\n\n  private getActionFor(code: KeyCode) {\n    if (!KeyCode[code]) {\n      console.log(`Missing key code: ${code}`);\n    }\n\n    return this.keymap[code];\n  }\n\n  private readonly handleKeyDown = this.handle(action => {\n    if (this.actions.has(action)) {\n      return;\n    }\n\n    this.actions.add(action);\n    this.emitActivate(action);\n    this.emitChange(Array.from(this.actions));\n  });\n\n  private readonly handleKeyUp = this.handle(action => {\n    if (!this.actions.has(action)) {\n      return;\n    }\n\n    this.actions.delete(action);\n    this.emitDeactivate(action);\n    this.emitChange(Array.from(this.actions));\n  });\n\n  private handle(operation: (action: T) => void) {\n    return (event: KeyCodeEvent) => {\n      const action = this.getActionFor(event.code);\n\n      if (action != null) {\n        operation(action);\n      }\n    };\n  }\n}\n","export function emitter<T = any>() {\n  const listeners = new Set<(data: T) => void>();\n  subscribe.emit = emit;\n  return subscribe;\n\n  function emit(data: T) {\n    listeners.forEach(listener => listener(data));\n  }\n\n  function subscribe(listener: (data: T) => void) {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n}\n","import { emitter } from '@amatiasq/emitter';\n\nconst DEFAULT_RECONNECTION_DELAY = 100;\nconst MAX_RECONNECT_ATTEMPTS = 14;\n\nexport class JsonSocket<TInput, TOutput> {\n  RECONNECTION_DELAY = DEFAULT_RECONNECTION_DELAY;\n  MAX_RECONNECT_ATTEMPTS = MAX_RECONNECT_ATTEMPTS;\n\n  private reconnectionDelay = DEFAULT_RECONNECTION_DELAY;\n  private reconnectAttempts = 0;\n  private disconnectedAt = new Date();\n  private isReconnecting = false;\n  private isFirstConnection = true;\n\n  private ws = this.init();\n\n  readonly onOpen = emitter<JsonSocket<TInput, TOutput>>();\n  readonly onMessage = emitter<TInput>();\n  readonly onReconnect = emitter<Date>();\n\n  get isConnected() {\n    return !this.isFirstConnection && !this.isReconnecting;\n  }\n\n  constructor(public readonly uri: string) {}\n\n  private init() {\n    const socket = new WebSocket(this.uri);\n\n    socket.onopen = () => this.connectionOpen();\n    socket.onmessage = e => this.processMessage(e);\n    socket.onerror = () => this.connectionLost();\n    socket.onclose = () => this.connectionLost();\n\n    return socket;\n  }\n\n  send(value: TOutput) {\n    this.ws.send(JSON.stringify(value));\n  }\n\n  private processMessage(event: MessageEvent<any>) {\n    let message: TInput;\n\n    try {\n      message = JSON.parse(event.data) as TInput;\n    } catch (error) {\n      console.error('Invalid JSON', event.data);\n      return;\n    }\n\n    this.onMessage.emit(message);\n  }\n\n  private connectionOpen() {\n    this.reconnectionDelay = this.RECONNECTION_DELAY;\n    this.reconnectAttempts = 0;\n    this.isReconnecting = false;\n\n    if (this.isFirstConnection) {\n      this.isFirstConnection = false;\n      this.onOpen.emit(this);\n    } else {\n      this.onReconnect.emit(this.disconnectedAt);\n    }\n  }\n\n  private connectionLost() {\n    if (this.isReconnecting) {\n      return;\n    }\n\n    if (this.reconnectAttempts > this.MAX_RECONNECT_ATTEMPTS) {\n      return console.error(\n        `Websocket aborted after ${this.reconnectAttempts} attempts`,\n      );\n    }\n\n    if (this.reconnectAttempts === 0) {\n      this.isReconnecting = true;\n      this.disconnectedAt = new Date();\n    }\n\n    const message = `Socket closed. Waiting ${this.reconnectionDelay / 1000}s`;\n    const reconnecting = 'Reconnecting...';\n    const singleLine = this.reconnectAttempts < 1000;\n\n    console.debug(`${message} ${singleLine ? reconnecting : ''}`);\n\n    setTimeout(() => {\n      if (!singleLine) {\n        console.debug(reconnecting);\n      }\n\n      this.reconnectionDelay *= 2;\n      this.reconnectAttempts++;\n      this.ws = this.init();\n    }, this.reconnectionDelay);\n  }\n\n  close() {\n    this.ws.onclose = null;\n    this.ws.close();\n  }\n}\n"],"sourceRoot":""}